// $ANTLR 3.1.1

	package west.twouse.language.owl2fs.resource.owl2fs.mopp;


import org.antlr.runtime.*;
import java.util.HashMap;
public class Owl2fsParser extends Owl2fsANTLRParserBase {
    public static final String[] tokenNames = new String[] {
        "<invalid>", "<EOR>", "<DOWN>", "<UP>", "FULLIRI", "ABBRIRI", "COMMENT", "NODE", "LITERAL", "LANGTAG", "INTEGER", "WHITESPACE", "LINEBREAKS", "FLOAT", "':'", "'Prefix'", "'('", "':='", "')'", "'Ontology'", "'Import'", "'Declaration'", "'Class'", "'Datatype'", "'ObjectProperty'", "'DataProperty'", "'AnnotationProperty'", "'NamedIndividual'", "'AnnotationAssertion'", "'SubAnnotationPropertyOf'", "'AnnotationPropertyDomain'", "'AnnotationPropertyRange'", "'Annotation'", "'^^'", "'ObjectInverseOf'", "'DataComplementOf'", "'DataOneOf'", "'DatatypeRestriction'", "'ObjectIntersectionOf'", "'ObjectUnionOf'", "'ObjectComplementOf'", "'ObjectOneOf'", "'ObjectSomeValuesFrom'", "'ObjectAllValuesFrom'", "'ObjectHasValue'", "'ObjectHasSelf'", "'ObjectMinCardinality'", "'ObjectMaxCardinality'", "'ObjectExactCardinality'", "'DataSomeValuesFrom'", "'DataAllValuesFrom'", "'DataHasValue'", "'DataMinCardinality'", "'DataMaxCardinality'", "'DataExactCardinality'", "'SubClassOf'", "'EquivalentClasses'", "'DisjointClasses'", "'DisjointUnion'", "'SubObjectPropertyOf'", "'ObjectPropertyChain'", "'EquivalentObjectProperties'", "'DisjointObjectProperties'", "'ObjectPropertyDomain'", "'ObjectPropertyRange'", "'InverseObjectProperties'", "'FunctionalObjectProperty'", "'InverseFunctionalObjectProperty'", "'ReflexiveObjectProperty'", "'IrreflexiveObjectProperty'", "'SymmetricObjectProperty'", "'AntiSymmetricObjectProperty'", "'TransitiveObjectProperty'", "'SubDataPropertyOf'", "'EquivalentDataProperties'", "'DisjointDataProperties'", "'DataPropertyDomain'", "'DataPropertyRange'", "'FunctionalDataProperty'", "'DatatypeDefinition'", "'HasKey'", "'SameIndividual'", "'DifferentIndividuals'", "'ClassAssertion'", "'ObjectPropertyAssertion'", "'NegativeObjectPropertyAssertion'", "'DataPropertyAssertion'", "'NegativeDataPropertyAssertion'", "'DLSafeRule'", "'Body'", "'Head'", "'ClassAtom'", "'DataRangeAtom'", "'ObjectPropertyAtom'", "'DataPropetyAtom'", "'BuiltInAtom'", "'SameIndividualAtom'", "'DifferentIndividualsAtom'", "'Variable'", "'DescriptionGraphRule'", "'DescriptionGraph'", "'Nodes'", "'NodeAssertion'", "'Edges'", "'EdgeAssertion'", "'MainClasses'"
    };
    public static final int T__29=29;
    public static final int T__28=28;
    public static final int T__27=27;
    public static final int T__26=26;
    public static final int T__25=25;
    public static final int T__24=24;
    public static final int T__23=23;
    public static final int T__22=22;
    public static final int T__21=21;
    public static final int T__20=20;
    public static final int EOF=-1;
    public static final int T__93=93;
    public static final int T__19=19;
    public static final int T__94=94;
    public static final int T__91=91;
    public static final int T__92=92;
    public static final int T__16=16;
    public static final int ABBRIRI=5;
    public static final int T__15=15;
    public static final int T__90=90;
    public static final int T__18=18;
    public static final int T__17=17;
    public static final int T__14=14;
    public static final int COMMENT=6;
    public static final int T__99=99;
    public static final int T__98=98;
    public static final int T__97=97;
    public static final int T__96=96;
    public static final int T__95=95;
    public static final int T__80=80;
    public static final int T__81=81;
    public static final int NODE=7;
    public static final int T__82=82;
    public static final int T__83=83;
    public static final int WHITESPACE=11;
    public static final int T__85=85;
    public static final int T__84=84;
    public static final int T__87=87;
    public static final int T__86=86;
    public static final int T__89=89;
    public static final int T__88=88;
    public static final int T__71=71;
    public static final int T__72=72;
    public static final int T__70=70;
    public static final int T__76=76;
    public static final int T__75=75;
    public static final int T__74=74;
    public static final int T__73=73;
    public static final int T__79=79;
    public static final int T__78=78;
    public static final int T__77=77;
    public static final int T__68=68;
    public static final int T__69=69;
    public static final int T__66=66;
    public static final int T__67=67;
    public static final int T__64=64;
    public static final int T__65=65;
    public static final int T__62=62;
    public static final int T__63=63;
    public static final int FLOAT=13;
    public static final int T__61=61;
    public static final int LINEBREAKS=12;
    public static final int T__60=60;
    public static final int T__55=55;
    public static final int T__56=56;
    public static final int T__57=57;
    public static final int T__58=58;
    public static final int T__51=51;
    public static final int T__52=52;
    public static final int T__53=53;
    public static final int T__54=54;
    public static final int T__103=103;
    public static final int T__59=59;
    public static final int T__104=104;
    public static final int T__105=105;
    public static final int T__50=50;
    public static final int INTEGER=10;
    public static final int T__42=42;
    public static final int T__43=43;
    public static final int T__40=40;
    public static final int T__41=41;
    public static final int T__46=46;
    public static final int T__47=47;
    public static final int T__44=44;
    public static final int T__45=45;
    public static final int T__48=48;
    public static final int T__49=49;
    public static final int LITERAL=8;
    public static final int T__102=102;
    public static final int T__101=101;
    public static final int T__100=100;
    public static final int FULLIRI=4;
    public static final int T__30=30;
    public static final int T__31=31;
    public static final int T__32=32;
    public static final int T__33=33;
    public static final int T__34=34;
    public static final int T__35=35;
    public static final int T__36=36;
    public static final int T__37=37;
    public static final int T__38=38;
    public static final int T__39=39;
    public static final int LANGTAG=9;

    // delegates
    // delegators


        public Owl2fsParser(TokenStream input) {
            this(input, new RecognizerSharedState());
        }
        public Owl2fsParser(TokenStream input, RecognizerSharedState state) {
            super(input, state);
            this.state.ruleMemo = new HashMap[291+1];
             
             
        }
        

    public String[] getTokenNames() { return Owl2fsParser.tokenNames; }
    public String getGrammarFileName() { return "D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g"; }


    	private west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolverFactory tokenResolverFactory = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTokenResolverFactory();
    	@SuppressWarnings("unused")
    	
    	private int lastPosition;
    	private west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTokenResolveResult tokenResolveResult = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTokenResolveResult();
    	private boolean rememberExpectedElements = false;
    	private java.lang.Object parseToIndexTypeObject;
    	private int lastTokenIndex = 0;
    	private java.util.List<west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal> expectedElements = new java.util.ArrayList<west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal>();
    	private int mismatchedTokenRecoveryTries = 0;
    	private java.util.Map<?, ?> options;
    	//helper lists to allow a lexer to pass errors to its parser
    	protected java.util.List<org.antlr.runtime.RecognitionException> lexerExceptions = java.util.Collections.synchronizedList(new java.util.ArrayList<org.antlr.runtime.RecognitionException>());
    	protected java.util.List<java.lang.Integer> lexerExceptionsPosition = java.util.Collections.synchronizedList(new java.util.ArrayList<java.lang.Integer>());
    	private int stopIncludingHiddenTokens;
    	private int stopExcludingHiddenTokens;
    	private java.util.Collection<west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsCommand<west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextResource>> postParseCommands;
    	private boolean terminateParsing;
    	private int tokenIndexOfLastCompleteElement;
    	private int expectedElementsIndexOfLastCompleteElement;
    	
    	protected void addErrorToResource(final java.lang.String errorMessage, final int line, final int charPositionInLine, final int startIndex, final int stopIndex) {
    		postParseCommands.add(new west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsCommand<west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextResource>() {
    			public boolean execute(west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				resource.addProblem(new west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsProblem() {
    					public west.twouse.language.owl2fs.resource.owl2fs.Owl2fsEProblemType getType() {
    						return west.twouse.language.owl2fs.resource.owl2fs.Owl2fsEProblemType.ERROR;
    					}
    					public java.lang.String getMessage() {
    						return errorMessage;
    					}
    				}, line, charPositionInLine, startIndex, stopIndex);
    				return true;
    			}
    		});
    	}
    	
    	public void addExpectedElement(west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal expectedElement) {
    		if (!this.rememberExpectedElements) {
    			return;
    		}
    		setPosition(expectedElement, input.index());
    		this.expectedElements.add(expectedElement);
    	}
    	
    	protected void addMapEntry(org.eclipse.emf.ecore.EObject element, org.eclipse.emf.ecore.EStructuralFeature structuralFeature, west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsDummyEObject dummy) {
    		java.lang.Object value = element.eGet(structuralFeature);
    		java.lang.Object mapKey = dummy.getValueByName("key");
    		java.lang.Object mapValue = dummy.getValueByName("value");
    		if (value instanceof org.eclipse.emf.common.util.EMap<?, ?>) {
    			org.eclipse.emf.common.util.EMap<java.lang.Object, java.lang.Object> valueMap = west.twouse.language.owl2fs.resource.owl2fs.util.Owl2fsMapUtil.castToEMap(value);
    			if (mapKey != null && mapValue != null) {
    				valueMap.put(mapKey, mapValue);
    			}
    		}
    	}
    	
    	@SuppressWarnings("unchecked")
    	
    	private boolean addObjectToList(org.eclipse.emf.ecore.EObject element, int featureID, java.lang.Object proxy) {
    		return ((java.util.List<java.lang.Object>) element.eGet(element.eClass().getEStructuralFeature(featureID))).add(proxy);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject apply(org.eclipse.emf.ecore.EObject target, java.util.List<org.eclipse.emf.ecore.EObject> dummyEObjects) {
    		org.eclipse.emf.ecore.EObject currentTarget = target;
    		for (org.eclipse.emf.ecore.EObject object : dummyEObjects) {
    			assert(object instanceof west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsDummyEObject);
    			west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsDummyEObject dummy = (west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsDummyEObject) object;
    			org.eclipse.emf.ecore.EObject newEObject = dummy.applyTo(currentTarget);
    			currentTarget = newEObject;
    		}
    		return currentTarget;
    	}
    	
    	protected void collectHiddenTokens(org.eclipse.emf.ecore.EObject element) {
    	}
    	
    	protected void copyLocalizationInfos(final org.eclipse.emf.ecore.EObject source, final org.eclipse.emf.ecore.EObject target) {
    		postParseCommands.add(new west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsCommand<west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextResource>() {
    			public boolean execute(west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextResource resource) {
    				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				locationMap.setCharStart(target, locationMap.getCharStart(source));
    				locationMap.setCharEnd(target, locationMap.getCharEnd(source));
    				locationMap.setColumn(target, locationMap.getColumn(source));
    				locationMap.setLine(target, locationMap.getLine(source));
    				return true;
    			}
    		});
    	}
    	
    	protected void copyLocalizationInfos(final org.antlr.runtime.CommonToken source, final org.eclipse.emf.ecore.EObject target) {
    		postParseCommands.add(new west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsCommand<west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextResource>() {
    			public boolean execute(west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextResource resource) {
    				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsLocationMap locationMap = resource.getLocationMap();
    				if (locationMap == null) {
    					// the locationMap can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				if (source == null) {
    					return true;
    				}
    				locationMap.setCharStart(target, source.getStartIndex());
    				locationMap.setCharEnd(target, source.getStopIndex());
    				locationMap.setColumn(target, source.getCharPositionInLine());
    				locationMap.setLine(target, source.getLine());
    				return true;
    			}
    		});
    	}
    	
    	public west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextParser createInstance(java.io.InputStream actualInputStream, java.lang.String encoding) {
    		try {
    			if (encoding == null) {
    				return new Owl2fsParser(new org.antlr.runtime.CommonTokenStream(new Owl2fsLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream))));
    			} else {
    				return new Owl2fsParser(new org.antlr.runtime.CommonTokenStream(new Owl2fsLexer(new org.antlr.runtime.ANTLRInputStream(actualInputStream, encoding))));
    			}
    		} catch (java.io.IOException e) {
    			west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsPlugin.logError("Error while creating parser.", e);
    			return null;
    		}
    	}
    	
    	// This default constructor is only used to call createInstance() on it
    	public Owl2fsParser() {
    		super(null);
    	}
    	
    	protected org.eclipse.emf.ecore.EObject doParse() throws org.antlr.runtime.RecognitionException {
    		this.lastPosition = 0;
    		// required because the lexer class can not be subclassed
    		((Owl2fsLexer) getTokenStream().getTokenSource()).lexerExceptions = lexerExceptions;
    		((Owl2fsLexer) getTokenStream().getTokenSource()).lexerExceptionsPosition = lexerExceptionsPosition;
    		java.lang.Object typeObject = getTypeObject();
    		if (typeObject == null) {
    			return start();
    		} else if (typeObject instanceof org.eclipse.emf.ecore.EClass) {
    			org.eclipse.emf.ecore.EClass type = (org.eclipse.emf.ecore.EClass) typeObject;
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.FullIRI.class) {
    				return parse_west_twouse_language_owl2fs_FullIRI();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.AbbreviatedIRI.class) {
    				return parse_west_twouse_language_owl2fs_AbbreviatedIRI();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.OntologyDocument.class) {
    				return parse_west_twouse_language_owl2fs_OntologyDocument();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.PrefixDefinition.class) {
    				return parse_west_twouse_language_owl2fs_PrefixDefinition();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.Ontology.class) {
    				return parse_west_twouse_language_owl2fs_Ontology();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.Comment.class) {
    				return parse_west_twouse_language_owl2fs_Comment();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ClassDeclaration.class) {
    				return parse_west_twouse_language_owl2fs_ClassDeclaration();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DatatypeDeclaration.class) {
    				return parse_west_twouse_language_owl2fs_DatatypeDeclaration();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectPropertyDeclaration.class) {
    				return parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataPropertyDeclaration.class) {
    				return parse_west_twouse_language_owl2fs_DataPropertyDeclaration();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.AnnotationPropertyDeclaration.class) {
    				return parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.NamedIndividualDeclaration.class) {
    				return parse_west_twouse_language_owl2fs_NamedIndividualDeclaration();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.Class.class) {
    				return parse_west_twouse_language_owl2fs_Class();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.Datatype.class) {
    				return parse_west_twouse_language_owl2fs_Datatype();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectProperty.class) {
    				return parse_west_twouse_language_owl2fs_ObjectProperty();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataProperty.class) {
    				return parse_west_twouse_language_owl2fs_DataProperty();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.AnnotationProperty.class) {
    				return parse_west_twouse_language_owl2fs_AnnotationProperty();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.NamedIndividual.class) {
    				return parse_west_twouse_language_owl2fs_NamedIndividual();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.AnnotationAssertion.class) {
    				return parse_west_twouse_language_owl2fs_AnnotationAssertion();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.SubAnnotationPropertyOf.class) {
    				return parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.AnnotationPropertyDomain.class) {
    				return parse_west_twouse_language_owl2fs_AnnotationPropertyDomain();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.AnnotationPropertyRange.class) {
    				return parse_west_twouse_language_owl2fs_AnnotationPropertyRange();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.Annotation.class) {
    				return parse_west_twouse_language_owl2fs_Annotation();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.AnonymousIndividual.class) {
    				return parse_west_twouse_language_owl2fs_AnonymousIndividual();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.Literal.class) {
    				return parse_west_twouse_language_owl2fs_Literal();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.InverseObjectProperty.class) {
    				return parse_west_twouse_language_owl2fs_InverseObjectProperty();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataComplementOf.class) {
    				return parse_west_twouse_language_owl2fs_DataComplementOf();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataOneOf.class) {
    				return parse_west_twouse_language_owl2fs_DataOneOf();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DatatypeRestriction.class) {
    				return parse_west_twouse_language_owl2fs_DatatypeRestriction();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.FacetConstraintPair.class) {
    				return parse_west_twouse_language_owl2fs_FacetConstraintPair();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectIntersectionOf.class) {
    				return parse_west_twouse_language_owl2fs_ObjectIntersectionOf();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectUnionOf.class) {
    				return parse_west_twouse_language_owl2fs_ObjectUnionOf();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectComplementOf.class) {
    				return parse_west_twouse_language_owl2fs_ObjectComplementOf();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectOneOf.class) {
    				return parse_west_twouse_language_owl2fs_ObjectOneOf();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectSomeValuesFrom.class) {
    				return parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectAllValuesFrom.class) {
    				return parse_west_twouse_language_owl2fs_ObjectAllValuesFrom();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectHasValue.class) {
    				return parse_west_twouse_language_owl2fs_ObjectHasValue();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectHasSelf.class) {
    				return parse_west_twouse_language_owl2fs_ObjectHasSelf();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectMinCardinality.class) {
    				return parse_west_twouse_language_owl2fs_ObjectMinCardinality();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectMaxCardinality.class) {
    				return parse_west_twouse_language_owl2fs_ObjectMaxCardinality();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectExactCardinality.class) {
    				return parse_west_twouse_language_owl2fs_ObjectExactCardinality();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataSomeValuesFrom.class) {
    				return parse_west_twouse_language_owl2fs_DataSomeValuesFrom();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataAllValuesFrom.class) {
    				return parse_west_twouse_language_owl2fs_DataAllValuesFrom();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataHasValue.class) {
    				return parse_west_twouse_language_owl2fs_DataHasValue();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataMinCardinality.class) {
    				return parse_west_twouse_language_owl2fs_DataMinCardinality();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataMaxCardinality.class) {
    				return parse_west_twouse_language_owl2fs_DataMaxCardinality();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataExactCardinality.class) {
    				return parse_west_twouse_language_owl2fs_DataExactCardinality();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.SubClassOf.class) {
    				return parse_west_twouse_language_owl2fs_SubClassOf();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.EquivalentClasses.class) {
    				return parse_west_twouse_language_owl2fs_EquivalentClasses();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DisjointClasses.class) {
    				return parse_west_twouse_language_owl2fs_DisjointClasses();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DisjointUnion.class) {
    				return parse_west_twouse_language_owl2fs_DisjointUnion();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.SubObjectPropertyOf.class) {
    				return parse_west_twouse_language_owl2fs_SubObjectPropertyOf();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectPropertyChain.class) {
    				return parse_west_twouse_language_owl2fs_ObjectPropertyChain();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.EquivalentObjectProperties.class) {
    				return parse_west_twouse_language_owl2fs_EquivalentObjectProperties();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DisjointObjectProperties.class) {
    				return parse_west_twouse_language_owl2fs_DisjointObjectProperties();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectPropertyDomain.class) {
    				return parse_west_twouse_language_owl2fs_ObjectPropertyDomain();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectPropertyRange.class) {
    				return parse_west_twouse_language_owl2fs_ObjectPropertyRange();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.InverseObjectProperties.class) {
    				return parse_west_twouse_language_owl2fs_InverseObjectProperties();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.FunctionalObjectProperty.class) {
    				return parse_west_twouse_language_owl2fs_FunctionalObjectProperty();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.InverseFunctionalObjectProperty.class) {
    				return parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ReflexiveObjectProperty.class) {
    				return parse_west_twouse_language_owl2fs_ReflexiveObjectProperty();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.IrreflexiveObjectProperty.class) {
    				return parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.SymmetricObjectProperty.class) {
    				return parse_west_twouse_language_owl2fs_SymmetricObjectProperty();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.AsymmetricObjectProperty.class) {
    				return parse_west_twouse_language_owl2fs_AsymmetricObjectProperty();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.TransitiveObjectProperty.class) {
    				return parse_west_twouse_language_owl2fs_TransitiveObjectProperty();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.SubDataPropertyOf.class) {
    				return parse_west_twouse_language_owl2fs_SubDataPropertyOf();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.EquivalentDataProperties.class) {
    				return parse_west_twouse_language_owl2fs_EquivalentDataProperties();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DisjointDataProperties.class) {
    				return parse_west_twouse_language_owl2fs_DisjointDataProperties();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataPropertyDomain.class) {
    				return parse_west_twouse_language_owl2fs_DataPropertyDomain();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataPropertyRange.class) {
    				return parse_west_twouse_language_owl2fs_DataPropertyRange();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.FunctionalDataProperty.class) {
    				return parse_west_twouse_language_owl2fs_FunctionalDataProperty();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DatatypeDefinition.class) {
    				return parse_west_twouse_language_owl2fs_DatatypeDefinition();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.HasKey.class) {
    				return parse_west_twouse_language_owl2fs_HasKey();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.SameIndividual.class) {
    				return parse_west_twouse_language_owl2fs_SameIndividual();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DifferentIndividuals.class) {
    				return parse_west_twouse_language_owl2fs_DifferentIndividuals();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ClassAssertion.class) {
    				return parse_west_twouse_language_owl2fs_ClassAssertion();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectPropertyAssertion.class) {
    				return parse_west_twouse_language_owl2fs_ObjectPropertyAssertion();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.NegativeObjectPropertyAssertion.class) {
    				return parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataPropertyAssertion.class) {
    				return parse_west_twouse_language_owl2fs_DataPropertyAssertion();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.NegativeDataPropertyAssertion.class) {
    				return parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DLSafeRule.class) {
    				return parse_west_twouse_language_owl2fs_DLSafeRule();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ClassAtom.class) {
    				return parse_west_twouse_language_owl2fs_ClassAtom();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataRangeAtom.class) {
    				return parse_west_twouse_language_owl2fs_DataRangeAtom();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.ObjectPropertyAtom.class) {
    				return parse_west_twouse_language_owl2fs_ObjectPropertyAtom();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DataPropetyAtom.class) {
    				return parse_west_twouse_language_owl2fs_DataPropetyAtom();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.BuiltInAtom.class) {
    				return parse_west_twouse_language_owl2fs_BuiltInAtom();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.SameIndividualAtom.class) {
    				return parse_west_twouse_language_owl2fs_SameIndividualAtom();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DifferentIndividualsAtom.class) {
    				return parse_west_twouse_language_owl2fs_DifferentIndividualsAtom();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.Variable.class) {
    				return parse_west_twouse_language_owl2fs_Variable();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DGRule.class) {
    				return parse_west_twouse_language_owl2fs_DGRule();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DGAxiom.class) {
    				return parse_west_twouse_language_owl2fs_DGAxiom();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DGNodes.class) {
    				return parse_west_twouse_language_owl2fs_DGNodes();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.NodeAssertion.class) {
    				return parse_west_twouse_language_owl2fs_NodeAssertion();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.DGEdges.class) {
    				return parse_west_twouse_language_owl2fs_DGEdges();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.EdgeAssertion.class) {
    				return parse_west_twouse_language_owl2fs_EdgeAssertion();
    			}
    			if (type.getInstanceClass() == west.twouse.language.owl2fs.MainClasses.class) {
    				return parse_west_twouse_language_owl2fs_MainClasses();
    			}
    		}
    		throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsUnexpectedContentTypeException(typeObject);
    	}
    	
    	private west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTokenResolveResult getFreshTokenResolveResult() {
    		tokenResolveResult.clear();
    		return tokenResolveResult;
    	}
    	
    	public int getMismatchedTokenRecoveryTries() {
    		return mismatchedTokenRecoveryTries;
    	}
    	
    	public java.lang.Object getMissingSymbol(org.antlr.runtime.IntStream arg0, org.antlr.runtime.RecognitionException arg1, int arg2, org.antlr.runtime.BitSet arg3) {
    		mismatchedTokenRecoveryTries++;
    		return super.getMissingSymbol(arg0, arg1, arg2, arg3);
    	}
    	
    	protected java.util.Map<?,?> getOptions() {
    		return options;
    	}
    	
    	public west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsMetaInformation getMetaInformation() {
    		return new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsMetaInformation();
    	}
    	
    	public java.lang.Object getParseToIndexTypeObject() {
    		return parseToIndexTypeObject;
    	}
    	
    	protected west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsReferenceResolverSwitch getReferenceResolverSwitch() {
    		return (west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsReferenceResolverSwitch) getMetaInformation().getReferenceResolverSwitch();
    	}
    	
    	protected java.lang.Object getTypeObject() {
    		java.lang.Object typeObject = getParseToIndexTypeObject();
    		if (typeObject != null) {
    			return typeObject;
    		}
    		java.util.Map<?,?> options = getOptions();
    		if (options != null) {
    			typeObject = options.get(west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsOptions.RESOURCE_CONTENT_TYPE);
    		}
    		return typeObject;
    	}
    	
    	// Implementation that calls {@link #doParse()}  and handles the thrown
    	// RecognitionExceptions.
    	public west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsParseResult parse() {
    		terminateParsing = false;
    		postParseCommands = new java.util.ArrayList<west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsCommand<west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextResource>>();
    		west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsParseResult parseResult = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsParseResult();
    		try {
    			org.eclipse.emf.ecore.EObject result =  doParse();
    			if (lexerExceptions.isEmpty()) {
    				parseResult.setRoot(result);
    			}
    		} catch (org.antlr.runtime.RecognitionException re) {
    			reportError(re);
    		} catch (java.lang.IllegalArgumentException iae) {
    			if ("The 'no null' constraint is violated".equals(iae.getMessage())) {
    				//? can be caused if a null is set on EMF models where not allowed;
    				//? this will just happen if other errors occurred before
    			} else {
    				iae.printStackTrace();
    			}
    		}
    		for (org.antlr.runtime.RecognitionException re : lexerExceptions) {
    			reportLexicalError(re);
    		}
    		parseResult.getPostParseCommands().addAll(postParseCommands);
    		return parseResult;
    	}
    	
    	public java.util.List<west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal> parseToExpectedElements(org.eclipse.emf.ecore.EClass type, west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextResource dummyResource) {
    		rememberExpectedElements = true;
    		parseToIndexTypeObject = type;
    		final org.antlr.runtime.CommonTokenStream tokenStream = (org.antlr.runtime.CommonTokenStream) getTokenStream();
    		west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsParseResult result = parse();
    		if (result != null) {
    			org.eclipse.emf.ecore.EObject root = result.getRoot();
    			if (root != null) {
    				dummyResource.getContents().add(root);
    			}
    			for (west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsCommand<west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextResource> command : result.getPostParseCommands()) {
    				command.execute(dummyResource);
    			}
    		}
    		// remove all expected elements that were added after the last complete element
    		expectedElements = expectedElements.subList(0, expectedElementsIndexOfLastCompleteElement + 1);
    		int lastFollowSetID = expectedElements.get(expectedElementsIndexOfLastCompleteElement).getFollowSetID();
    		java.util.Set<west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal> currentFollowSet = new java.util.LinkedHashSet<west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal>();
    		java.util.List<west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal> newFollowSet = new java.util.ArrayList<west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal>();
    		for (int i = expectedElementsIndexOfLastCompleteElement; i >= 0; i--) {
    			west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal expectedElementI = expectedElements.get(i);
    			if (expectedElementI.getFollowSetID() == lastFollowSetID) {
    				currentFollowSet.add(expectedElementI);
    			} else {
    				break;
    			}
    		}
    		int followSetID = 529;
    		int i;
    		for (i = tokenIndexOfLastCompleteElement; i < tokenStream.size(); i++) {
    			org.antlr.runtime.CommonToken nextToken = (org.antlr.runtime.CommonToken) tokenStream.get(i);
    			if (nextToken.getChannel() == 99) {
    				// hidden tokens do not reduce the follow set
    			} else {
    				// now that we have found the next visible token the position for that expected terminals
    				// can be set
    				for (west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal nextFollow : newFollowSet) {
    					lastTokenIndex = 0;
    					setPosition(nextFollow, i);
    				}
    				newFollowSet.clear();
    				// normal tokens do reduce the follow set - only elements that match the token are kept
    				for (west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal nextFollow : currentFollowSet) {
    					if (nextFollow.getTerminal().getTokenName().equals(getTokenNames()[nextToken.getType()])) {
    						// keep this one - it matches
    						java.util.Collection<west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement> newFollowers = nextFollow.getTerminal().getFollowers();
    						for (west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement newFollower : newFollowers) {
    							west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal newFollowTerminal = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(newFollower, followSetID);
    							newFollowSet.add(newFollowTerminal);
    							expectedElements.add(newFollowTerminal);
    						}
    					}
    				}
    				currentFollowSet.clear();
    				currentFollowSet.addAll(newFollowSet);
    			}
    			followSetID++;
    		}
    		// after the last token in the stream we must set the position for the elements that were
    		// added during the last iteration of the loop
    		for (west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal nextFollow : newFollowSet) {
    			lastTokenIndex = 0;
    			setPosition(nextFollow, i);
    		}
    		return this.expectedElements;
    	}
    	
    	public void setPosition(west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal expectedElement, int tokenIndex) {
    		int currentIndex = java.lang.Math.max(0, tokenIndex);
    		for (int index = lastTokenIndex; index < currentIndex; index++) {
    			if (index >= input.size()) {
    				break;
    			}
    			org.antlr.runtime.CommonToken tokenAtIndex = (org.antlr.runtime.CommonToken) input.get(index);
    			stopIncludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			if (tokenAtIndex.getChannel() != 99) {
    				stopExcludingHiddenTokens = tokenAtIndex.getStopIndex() + 1;
    			}
    		}
    		lastTokenIndex = java.lang.Math.max(0, currentIndex);
    		expectedElement.setPosition(stopExcludingHiddenTokens, stopIncludingHiddenTokens);
    	}
    	
    	public java.lang.Object recoverFromMismatchedToken(org.antlr.runtime.IntStream input, int ttype, org.antlr.runtime.BitSet follow) throws org.antlr.runtime.RecognitionException {
    		if (!rememberExpectedElements) {
    			return super.recoverFromMismatchedToken(input, ttype, follow);
    		} else {
    			return null;
    		}
    	}
    	protected <ContainerType extends org.eclipse.emf.ecore.EObject, ReferenceType extends org.eclipse.emf.ecore.EObject> void registerContextDependentProxy(final west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsContextDependentURIFragmentFactory<ContainerType, ReferenceType> factory, final ContainerType element, final org.eclipse.emf.ecore.EReference reference, final String id, final org.eclipse.emf.ecore.EObject proxy) {
    		postParseCommands.add(new west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsCommand<west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextResource>() {
    			public boolean execute(west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTextResource resource) {
    				if (resource == null) {
    					// the resource can be null if the parser is used for
    					// code completion
    					return true;
    				}
    				resource.registerContextDependentProxy(factory, element, reference, id, proxy);
    				return true;
    			}
    		});
    	}
    	
    	// Translates errors thrown by the parser into human readable messages.
    	public void reportError(final org.antlr.runtime.RecognitionException e)  {
    		java.lang.String message = e.getMessage();
    		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
    			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
    			java.lang.String tokenName = "<unknown>";
    			if (mte.expecting == Token.EOF) {
    				tokenName = "EOF";
    			} else {
    				tokenName = getTokenNames()[mte.expecting];
    				tokenName = west.twouse.language.owl2fs.resource.owl2fs.util.Owl2fsStringUtil.formatTokenName(tokenName);
    			}
    			message = "Syntax error on token \"" + e.token.getText() + "\", \"" + tokenName + "\" expected";
    		} else if (e instanceof org.antlr.runtime.MismatchedTreeNodeException) {
    			org.antlr.runtime.MismatchedTreeNodeException mtne = (org.antlr.runtime.MismatchedTreeNodeException) e;
    			java.lang.String tokenName = "<unknown>";
    			if (mtne.expecting == Token.EOF) {
    				tokenName = "EOF";
    			} else {
    				tokenName = getTokenNames()[mtne.expecting];
    			}
    			message = "mismatched tree node: "+"xxx" +"; expecting " + tokenName;
    		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", check following tokens";
    		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
    			message = "Syntax error on token \"" + e.token.getText() + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
    			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
    			message = "mismatched token: " + e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
    			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
    			message = "mismatched token: " +  e.token + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
    			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
    			message = "rule " + fpe.ruleName + " failed predicate: {" +  fpe.predicateText+"}?";
    		}
    		// the resource may be null if the parse is used for code completion
    		final java.lang.String finalMessage = message;
    		if (e.token instanceof org.antlr.runtime.CommonToken) {
    			final org.antlr.runtime.CommonToken ct = (org.antlr.runtime.CommonToken) e.token;
    			addErrorToResource(finalMessage, ct.getCharPositionInLine(), ct.getLine(), ct.getStartIndex(), ct.getStopIndex());
    		} else {
    			addErrorToResource(finalMessage, e.token.getCharPositionInLine(), e.token.getLine(), 1, 5);
    		}
    	}
    	
    	// Translates errors thrown by the lexer into human readable messages.
    	public void reportLexicalError(final org.antlr.runtime.RecognitionException e)  {
    		java.lang.String message = "";
    		if (e instanceof org.antlr.runtime.MismatchedTokenException) {
    			org.antlr.runtime.MismatchedTokenException mte = (org.antlr.runtime.MismatchedTokenException) e;
    			message = "Syntax error on token \"" + ((char) e.c) + "\", \"" + (char) mte.expecting + "\" expected";
    		} else if (e instanceof org.antlr.runtime.NoViableAltException) {
    			message = "Syntax error on token \"" + ((char) e.c) + "\", delete this token";
    		} else if (e instanceof org.antlr.runtime.EarlyExitException) {
    			org.antlr.runtime.EarlyExitException eee = (org.antlr.runtime.EarlyExitException) e;
    			message ="required (...)+ loop (decision=" + eee.decisionNumber + ") did not match anything; on line " + e.line + ":" + e.charPositionInLine + " char=" + ((char) e.c) + "'";
    		} else if (e instanceof org.antlr.runtime.MismatchedSetException) {
    			org.antlr.runtime.MismatchedSetException mse = (org.antlr.runtime.MismatchedSetException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedNotSetException) {
    			org.antlr.runtime.MismatchedNotSetException mse = (org.antlr.runtime.MismatchedNotSetException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set " + mse.expecting;
    		} else if (e instanceof org.antlr.runtime.MismatchedRangeException) {
    			org.antlr.runtime.MismatchedRangeException mre = (org.antlr.runtime.MismatchedRangeException) e;
    			message ="mismatched char: '" + ((char) e.c) + "' on line " + e.line + ":" + e.charPositionInLine + "; expecting set '" + (char) mre.a + "'..'" + (char) mre.b + "'";
    		} else if (e instanceof org.antlr.runtime.FailedPredicateException) {
    			org.antlr.runtime.FailedPredicateException fpe = (org.antlr.runtime.FailedPredicateException) e;
    			message ="rule " + fpe.ruleName + " failed predicate: {" + fpe.predicateText + "}?";
    		}
    		addErrorToResource(message, e.index, e.line, lexerExceptionsPosition.get(lexerExceptions.indexOf(e)), lexerExceptionsPosition.get(lexerExceptions.indexOf(e)));
    	}
    	
    	public void setOptions(java.util.Map<?,?> options) {
    		this.options = options;
    	}
    	
    	public void terminate() {
    		terminateParsing = true;
    	}
    	
    	protected void completedElement(Object element) {
    		if (element instanceof org.eclipse.emf.ecore.EObject) {
    			this.tokenIndexOfLastCompleteElement = getTokenStream().index();
    			this.expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
    		}
    	}
    	
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_0 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Prefix");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_1 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getComment().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.COMMENT__COMMENT), "COMMENT");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_2 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Ontology");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_3 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getFullIRI().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.FULL_IRI__VALUE), "FULLIRI");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_4 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_5 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getAbbreviatedIRI().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ABBREVIATED_IRI__PREFIX), "ABBRIRI");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_6 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(":");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_7 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Import");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_8 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Annotation");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_9 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Declaration");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_10 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Declaration");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_11 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Declaration");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_12 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Declaration");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_13 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Declaration");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_14 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Declaration");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_15 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("AnnotationAssertion");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_16 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("SubAnnotationPropertyOf");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_17 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("AnnotationPropertyDomain");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_18 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("AnnotationPropertyRange");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_19 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("SubClassOf");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_20 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("EquivalentClasses");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_21 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DisjointClasses");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_22 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DisjointUnion");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_23 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("SubObjectPropertyOf");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_24 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("EquivalentObjectProperties");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_25 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DisjointObjectProperties");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_26 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectPropertyDomain");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_27 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectPropertyRange");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_28 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("InverseObjectProperties");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_29 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("FunctionalObjectProperty");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_30 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("InverseFunctionalObjectProperty");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_31 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ReflexiveObjectProperty");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_32 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("IrreflexiveObjectProperty");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_33 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("SymmetricObjectProperty");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_34 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("AntiSymmetricObjectProperty");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_35 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("TransitiveObjectProperty");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_36 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("SubDataPropertyOf");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_37 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("EquivalentDataProperties");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_38 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DisjointDataProperties");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_39 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataPropertyDomain");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_40 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataPropertyRange");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_41 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("FunctionalDataProperty");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_42 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DatatypeDefinition");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_43 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("HasKey");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_44 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("SameIndividual");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_45 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DifferentIndividuals");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_46 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ClassAssertion");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_47 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectPropertyAssertion");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_48 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("NegativeObjectPropertyAssertion");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_49 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataPropertyAssertion");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_50 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("NegativeDataPropertyAssertion");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_51 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DLSafeRule");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_52 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DescriptionGraphRule");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_53 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DescriptionGraph");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_54 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_55 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_56 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectIntersectionOf");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_57 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectUnionOf");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_58 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectComplementOf");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_59 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectOneOf");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_60 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectSomeValuesFrom");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_61 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectAllValuesFrom");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_62 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectHasValue");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_63 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectHasSelf");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_64 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectMinCardinality");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_65 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectMaxCardinality");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_66 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectExactCardinality");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_67 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataSomeValuesFrom");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_68 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataAllValuesFrom");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_69 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataHasValue");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_70 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataMinCardinality");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_71 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataMaxCardinality");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_72 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataExactCardinality");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_73 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_74 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_75 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_76 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_77 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_78 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_79 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_80 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_81 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_82 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_83 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getAnonymousIndividual().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANONYMOUS_INDIVIDUAL__NODE_ID), "NODE");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_84 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Variable");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_85 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_86 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_87 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_88 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_89 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getLiteral().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.LITERAL__LEXICAL_VALUE), "LITERAL");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_90 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_91 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_92 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_93 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_94 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_95 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_96 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_97 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_98 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_99 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_100 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_101 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_102 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_103 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_104 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_105 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataComplementOf");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_106 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataOneOf");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_107 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DatatypeRestriction");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_108 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_109 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_110 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_111 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectInverseOf");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_112 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_113 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_114 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_115 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_116 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_117 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_118 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_119 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_120 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_121 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_122 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_123 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_124 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_125 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getAbbreviatedIRI().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ABBREVIATED_IRI__VALUE), "ABBRIRI");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_126 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_127 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getPrefixDefinition().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.PREFIX_DEFINITION__PREF), "ABBRIRI");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_128 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(":=");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_129 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_130 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_131 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_132 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_133 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Class");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_134 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_135 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_136 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_137 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Datatype");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_138 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_139 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_140 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_141 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectProperty");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_142 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_143 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_144 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_145 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataProperty");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_146 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_147 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_148 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_149 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("AnnotationProperty");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_150 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_151 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_152 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_153 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("NamedIndividual");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_154 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_155 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_156 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_157 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_158 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_159 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_160 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_161 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_162 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_163 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_164 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_165 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_166 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_167 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_168 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_169 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectPropertyChain");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_170 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Body");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_171 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Body");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_172 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Nodes");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_173 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("^^");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_174 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getLiteral().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.LITERAL__LANGUAGE_TAG), "LANGTAG");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_175 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_176 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_177 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_178 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_179 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_180 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_181 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_182 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_183 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_184 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_185 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_186 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_187 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_188 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_189 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_190 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_191 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getObjectMinCardinality().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_MIN_CARDINALITY__CARDINALITY), "INTEGER");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_192 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_193 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getObjectMaxCardinality().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_MAX_CARDINALITY__CARDINALITY), "INTEGER");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_194 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_195 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getObjectExactCardinality().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_EXACT_CARDINALITY__CARDINALITY), "INTEGER");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_196 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_197 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_198 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_199 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_200 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getDataMinCardinality().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_MIN_CARDINALITY__CARDINALITY), "INTEGER");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_201 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_202 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getDataMaxCardinality().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_MAX_CARDINALITY__CARDINALITY), "INTEGER");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_203 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_204 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.eINSTANCE.getDataExactCardinality().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_EXACT_CARDINALITY__CARDINALITY), "INTEGER");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_205 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_206 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_207 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_208 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_209 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_210 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_211 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_212 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_213 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_214 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_215 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_216 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_217 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_218 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_219 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_220 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_221 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_222 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_223 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_224 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_225 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_226 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_227 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_228 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_229 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_230 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_231 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_232 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_233 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_234 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_235 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_236 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_237 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_238 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_239 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_240 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_241 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_242 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_243 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_244 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_245 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_246 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_247 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_248 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_249 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_250 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_251 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_252 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_253 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_254 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_255 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_256 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_257 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_258 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ClassAtom");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_259 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataRangeAtom");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_260 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("ObjectPropertyAtom");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_261 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DataPropetyAtom");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_262 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("BuiltInAtom");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_263 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("SameIndividualAtom");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_264 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("DifferentIndividualsAtom");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_265 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_266 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Head");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_267 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_268 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_269 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_270 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_271 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_272 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_273 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_274 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_275 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_276 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_277 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_278 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_279 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_280 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_281 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_282 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_283 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_284 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Head");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_285 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_286 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_287 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_288 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_289 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("Edges");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_290 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("MainClasses");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_291 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_292 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_293 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("NodeAssertion");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_294 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_295 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_296 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_297 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_298 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("EdgeAssertion");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_299 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_300 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_301 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString(")");
    	private final static west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsExpectedElement TERMINAL_302 = new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedCsString("(");
    	
    	public static void wire0() {
    		TERMINAL_3.addFollower(TERMINAL_4);
    		TERMINAL_3.addFollower(TERMINAL_1);
    		TERMINAL_3.addFollower(TERMINAL_3);
    		TERMINAL_3.addFollower(TERMINAL_5);
    		TERMINAL_3.addFollower(TERMINAL_6);
    		TERMINAL_3.addFollower(TERMINAL_7);
    		TERMINAL_3.addFollower(TERMINAL_8);
    		TERMINAL_3.addFollower(TERMINAL_9);
    		TERMINAL_3.addFollower(TERMINAL_10);
    		TERMINAL_3.addFollower(TERMINAL_11);
    		TERMINAL_3.addFollower(TERMINAL_12);
    		TERMINAL_3.addFollower(TERMINAL_13);
    		TERMINAL_3.addFollower(TERMINAL_14);
    		TERMINAL_3.addFollower(TERMINAL_15);
    		TERMINAL_3.addFollower(TERMINAL_16);
    		TERMINAL_3.addFollower(TERMINAL_17);
    		TERMINAL_3.addFollower(TERMINAL_18);
    		TERMINAL_3.addFollower(TERMINAL_19);
    		TERMINAL_3.addFollower(TERMINAL_20);
    		TERMINAL_3.addFollower(TERMINAL_21);
    		TERMINAL_3.addFollower(TERMINAL_22);
    		TERMINAL_3.addFollower(TERMINAL_23);
    		TERMINAL_3.addFollower(TERMINAL_24);
    		TERMINAL_3.addFollower(TERMINAL_25);
    		TERMINAL_3.addFollower(TERMINAL_26);
    		TERMINAL_3.addFollower(TERMINAL_27);
    		TERMINAL_3.addFollower(TERMINAL_28);
    		TERMINAL_3.addFollower(TERMINAL_29);
    		TERMINAL_3.addFollower(TERMINAL_30);
    		TERMINAL_3.addFollower(TERMINAL_31);
    		TERMINAL_3.addFollower(TERMINAL_32);
    		TERMINAL_3.addFollower(TERMINAL_33);
    		TERMINAL_3.addFollower(TERMINAL_34);
    		TERMINAL_3.addFollower(TERMINAL_35);
    		TERMINAL_3.addFollower(TERMINAL_36);
    		TERMINAL_3.addFollower(TERMINAL_37);
    		TERMINAL_3.addFollower(TERMINAL_38);
    		TERMINAL_3.addFollower(TERMINAL_39);
    		TERMINAL_3.addFollower(TERMINAL_40);
    		TERMINAL_3.addFollower(TERMINAL_41);
    		TERMINAL_3.addFollower(TERMINAL_42);
    		TERMINAL_3.addFollower(TERMINAL_43);
    		TERMINAL_3.addFollower(TERMINAL_44);
    		TERMINAL_3.addFollower(TERMINAL_45);
    		TERMINAL_3.addFollower(TERMINAL_46);
    		TERMINAL_3.addFollower(TERMINAL_47);
    		TERMINAL_3.addFollower(TERMINAL_48);
    		TERMINAL_3.addFollower(TERMINAL_49);
    		TERMINAL_3.addFollower(TERMINAL_50);
    		TERMINAL_3.addFollower(TERMINAL_51);
    		TERMINAL_3.addFollower(TERMINAL_52);
    		TERMINAL_3.addFollower(TERMINAL_53);
    		TERMINAL_3.addFollower(TERMINAL_54);
    		TERMINAL_3.addFollower(TERMINAL_55);
    		TERMINAL_3.addFollower(TERMINAL_56);
    		TERMINAL_3.addFollower(TERMINAL_57);
    		TERMINAL_3.addFollower(TERMINAL_58);
    		TERMINAL_3.addFollower(TERMINAL_59);
    		TERMINAL_3.addFollower(TERMINAL_60);
    		TERMINAL_3.addFollower(TERMINAL_61);
    		TERMINAL_3.addFollower(TERMINAL_62);
    		TERMINAL_3.addFollower(TERMINAL_63);
    		TERMINAL_3.addFollower(TERMINAL_64);
    		TERMINAL_3.addFollower(TERMINAL_65);
    		TERMINAL_3.addFollower(TERMINAL_66);
    		TERMINAL_3.addFollower(TERMINAL_67);
    		TERMINAL_3.addFollower(TERMINAL_68);
    		TERMINAL_3.addFollower(TERMINAL_69);
    		TERMINAL_3.addFollower(TERMINAL_70);
    		TERMINAL_3.addFollower(TERMINAL_71);
    		TERMINAL_3.addFollower(TERMINAL_72);
    		TERMINAL_3.addFollower(TERMINAL_73);
    		TERMINAL_3.addFollower(TERMINAL_74);
    		TERMINAL_3.addFollower(TERMINAL_75);
    		TERMINAL_3.addFollower(TERMINAL_76);
    		TERMINAL_3.addFollower(TERMINAL_77);
    		TERMINAL_3.addFollower(TERMINAL_78);
    		TERMINAL_3.addFollower(TERMINAL_79);
    		TERMINAL_3.addFollower(TERMINAL_80);
    		TERMINAL_3.addFollower(TERMINAL_81);
    		TERMINAL_3.addFollower(TERMINAL_82);
    		TERMINAL_3.addFollower(TERMINAL_83);
    		TERMINAL_3.addFollower(TERMINAL_84);
    		TERMINAL_3.addFollower(TERMINAL_85);
    		TERMINAL_3.addFollower(TERMINAL_86);
    		TERMINAL_3.addFollower(TERMINAL_87);
    		TERMINAL_3.addFollower(TERMINAL_88);
    		TERMINAL_3.addFollower(TERMINAL_89);
    		TERMINAL_3.addFollower(TERMINAL_90);
    		TERMINAL_3.addFollower(TERMINAL_91);
    		TERMINAL_3.addFollower(TERMINAL_92);
    		TERMINAL_3.addFollower(TERMINAL_93);
    		TERMINAL_3.addFollower(TERMINAL_94);
    		TERMINAL_3.addFollower(TERMINAL_95);
    		TERMINAL_3.addFollower(TERMINAL_96);
    		TERMINAL_3.addFollower(TERMINAL_97);
    		TERMINAL_3.addFollower(TERMINAL_98);
    		TERMINAL_3.addFollower(TERMINAL_99);
    		TERMINAL_3.addFollower(TERMINAL_100);
    		TERMINAL_3.addFollower(TERMINAL_101);
    		TERMINAL_3.addFollower(TERMINAL_102);
    		TERMINAL_3.addFollower(TERMINAL_103);
    		TERMINAL_3.addFollower(TERMINAL_104);
    		TERMINAL_3.addFollower(TERMINAL_105);
    		TERMINAL_3.addFollower(TERMINAL_106);
    		TERMINAL_3.addFollower(TERMINAL_107);
    		TERMINAL_3.addFollower(TERMINAL_108);
    		TERMINAL_3.addFollower(TERMINAL_109);
    		TERMINAL_3.addFollower(TERMINAL_110);
    		TERMINAL_3.addFollower(TERMINAL_111);
    		TERMINAL_3.addFollower(TERMINAL_112);
    		TERMINAL_3.addFollower(TERMINAL_113);
    		TERMINAL_3.addFollower(TERMINAL_114);
    		TERMINAL_3.addFollower(TERMINAL_115);
    		TERMINAL_3.addFollower(TERMINAL_116);
    		TERMINAL_3.addFollower(TERMINAL_117);
    		TERMINAL_3.addFollower(TERMINAL_118);
    		TERMINAL_3.addFollower(TERMINAL_119);
    		TERMINAL_3.addFollower(TERMINAL_120);
    		TERMINAL_3.addFollower(TERMINAL_121);
    		TERMINAL_3.addFollower(TERMINAL_122);
    		TERMINAL_3.addFollower(TERMINAL_123);
    		TERMINAL_3.addFollower(TERMINAL_124);
    		TERMINAL_5.addFollower(TERMINAL_6);
    		TERMINAL_6.addFollower(TERMINAL_125);
    		TERMINAL_125.addFollower(TERMINAL_1);
    		TERMINAL_125.addFollower(TERMINAL_3);
    		TERMINAL_125.addFollower(TERMINAL_5);
    		TERMINAL_125.addFollower(TERMINAL_6);
    		TERMINAL_125.addFollower(TERMINAL_7);
    		TERMINAL_125.addFollower(TERMINAL_8);
    		TERMINAL_125.addFollower(TERMINAL_9);
    		TERMINAL_125.addFollower(TERMINAL_10);
    		TERMINAL_125.addFollower(TERMINAL_11);
    		TERMINAL_125.addFollower(TERMINAL_12);
    		TERMINAL_125.addFollower(TERMINAL_13);
    		TERMINAL_125.addFollower(TERMINAL_14);
    		TERMINAL_125.addFollower(TERMINAL_15);
    		TERMINAL_125.addFollower(TERMINAL_16);
    		TERMINAL_125.addFollower(TERMINAL_17);
    		TERMINAL_125.addFollower(TERMINAL_18);
    		TERMINAL_125.addFollower(TERMINAL_19);
    		TERMINAL_125.addFollower(TERMINAL_20);
    		TERMINAL_125.addFollower(TERMINAL_21);
    		TERMINAL_125.addFollower(TERMINAL_22);
    		TERMINAL_125.addFollower(TERMINAL_23);
    		TERMINAL_125.addFollower(TERMINAL_24);
    		TERMINAL_125.addFollower(TERMINAL_25);
    		TERMINAL_125.addFollower(TERMINAL_26);
    		TERMINAL_125.addFollower(TERMINAL_27);
    		TERMINAL_125.addFollower(TERMINAL_28);
    		TERMINAL_125.addFollower(TERMINAL_29);
    		TERMINAL_125.addFollower(TERMINAL_30);
    		TERMINAL_125.addFollower(TERMINAL_31);
    		TERMINAL_125.addFollower(TERMINAL_32);
    		TERMINAL_125.addFollower(TERMINAL_33);
    		TERMINAL_125.addFollower(TERMINAL_34);
    		TERMINAL_125.addFollower(TERMINAL_35);
    		TERMINAL_125.addFollower(TERMINAL_36);
    		TERMINAL_125.addFollower(TERMINAL_37);
    		TERMINAL_125.addFollower(TERMINAL_38);
    		TERMINAL_125.addFollower(TERMINAL_39);
    		TERMINAL_125.addFollower(TERMINAL_40);
    		TERMINAL_125.addFollower(TERMINAL_41);
    		TERMINAL_125.addFollower(TERMINAL_42);
    		TERMINAL_125.addFollower(TERMINAL_43);
    		TERMINAL_125.addFollower(TERMINAL_44);
    		TERMINAL_125.addFollower(TERMINAL_45);
    		TERMINAL_125.addFollower(TERMINAL_46);
    		TERMINAL_125.addFollower(TERMINAL_47);
    		TERMINAL_125.addFollower(TERMINAL_48);
    		TERMINAL_125.addFollower(TERMINAL_49);
    		TERMINAL_125.addFollower(TERMINAL_50);
    		TERMINAL_125.addFollower(TERMINAL_51);
    		TERMINAL_125.addFollower(TERMINAL_52);
    		TERMINAL_125.addFollower(TERMINAL_53);
    		TERMINAL_125.addFollower(TERMINAL_54);
    		TERMINAL_125.addFollower(TERMINAL_55);
    		TERMINAL_125.addFollower(TERMINAL_56);
    		TERMINAL_125.addFollower(TERMINAL_57);
    		TERMINAL_125.addFollower(TERMINAL_58);
    		TERMINAL_125.addFollower(TERMINAL_59);
    		TERMINAL_125.addFollower(TERMINAL_60);
    		TERMINAL_125.addFollower(TERMINAL_61);
    		TERMINAL_125.addFollower(TERMINAL_62);
    		TERMINAL_125.addFollower(TERMINAL_63);
    		TERMINAL_125.addFollower(TERMINAL_64);
    		TERMINAL_125.addFollower(TERMINAL_65);
    		TERMINAL_125.addFollower(TERMINAL_66);
    		TERMINAL_125.addFollower(TERMINAL_67);
    		TERMINAL_125.addFollower(TERMINAL_68);
    		TERMINAL_125.addFollower(TERMINAL_69);
    		TERMINAL_125.addFollower(TERMINAL_70);
    		TERMINAL_125.addFollower(TERMINAL_71);
    		TERMINAL_125.addFollower(TERMINAL_72);
    		TERMINAL_125.addFollower(TERMINAL_73);
    		TERMINAL_125.addFollower(TERMINAL_74);
    		TERMINAL_125.addFollower(TERMINAL_75);
    		TERMINAL_125.addFollower(TERMINAL_76);
    		TERMINAL_125.addFollower(TERMINAL_77);
    		TERMINAL_125.addFollower(TERMINAL_78);
    		TERMINAL_125.addFollower(TERMINAL_79);
    		TERMINAL_125.addFollower(TERMINAL_80);
    		TERMINAL_125.addFollower(TERMINAL_81);
    		TERMINAL_125.addFollower(TERMINAL_82);
    		TERMINAL_125.addFollower(TERMINAL_83);
    		TERMINAL_125.addFollower(TERMINAL_84);
    		TERMINAL_125.addFollower(TERMINAL_85);
    		TERMINAL_125.addFollower(TERMINAL_86);
    		TERMINAL_125.addFollower(TERMINAL_87);
    		TERMINAL_125.addFollower(TERMINAL_88);
    		TERMINAL_125.addFollower(TERMINAL_89);
    		TERMINAL_125.addFollower(TERMINAL_90);
    		TERMINAL_125.addFollower(TERMINAL_91);
    		TERMINAL_125.addFollower(TERMINAL_92);
    		TERMINAL_125.addFollower(TERMINAL_93);
    		TERMINAL_125.addFollower(TERMINAL_94);
    		TERMINAL_125.addFollower(TERMINAL_95);
    		TERMINAL_125.addFollower(TERMINAL_96);
    		TERMINAL_125.addFollower(TERMINAL_97);
    		TERMINAL_125.addFollower(TERMINAL_98);
    		TERMINAL_125.addFollower(TERMINAL_99);
    		TERMINAL_125.addFollower(TERMINAL_100);
    		TERMINAL_125.addFollower(TERMINAL_101);
    		TERMINAL_125.addFollower(TERMINAL_102);
    		TERMINAL_125.addFollower(TERMINAL_103);
    		TERMINAL_125.addFollower(TERMINAL_104);
    		TERMINAL_125.addFollower(TERMINAL_105);
    		TERMINAL_125.addFollower(TERMINAL_106);
    		TERMINAL_125.addFollower(TERMINAL_107);
    		TERMINAL_125.addFollower(TERMINAL_108);
    		TERMINAL_125.addFollower(TERMINAL_109);
    		TERMINAL_125.addFollower(TERMINAL_110);
    		TERMINAL_125.addFollower(TERMINAL_111);
    		TERMINAL_125.addFollower(TERMINAL_112);
    		TERMINAL_125.addFollower(TERMINAL_113);
    		TERMINAL_125.addFollower(TERMINAL_114);
    		TERMINAL_125.addFollower(TERMINAL_115);
    		TERMINAL_125.addFollower(TERMINAL_116);
    		TERMINAL_125.addFollower(TERMINAL_117);
    		TERMINAL_125.addFollower(TERMINAL_118);
    		TERMINAL_125.addFollower(TERMINAL_119);
    		TERMINAL_125.addFollower(TERMINAL_120);
    		TERMINAL_125.addFollower(TERMINAL_121);
    		TERMINAL_125.addFollower(TERMINAL_122);
    		TERMINAL_125.addFollower(TERMINAL_123);
    		TERMINAL_125.addFollower(TERMINAL_124);
    		TERMINAL_0.addFollower(TERMINAL_126);
    		TERMINAL_126.addFollower(TERMINAL_127);
    		TERMINAL_126.addFollower(TERMINAL_128);
    		TERMINAL_127.addFollower(TERMINAL_128);
    		TERMINAL_128.addFollower(TERMINAL_3);
    		TERMINAL_4.addFollower(TERMINAL_0);
    		TERMINAL_4.addFollower(TERMINAL_1);
    		TERMINAL_4.addFollower(TERMINAL_2);
    		TERMINAL_2.addFollower(TERMINAL_129);
    		TERMINAL_129.addFollower(TERMINAL_1);
    		TERMINAL_129.addFollower(TERMINAL_3);
    		TERMINAL_129.addFollower(TERMINAL_5);
    		TERMINAL_129.addFollower(TERMINAL_6);
    		TERMINAL_129.addFollower(TERMINAL_7);
    		TERMINAL_129.addFollower(TERMINAL_8);
    		TERMINAL_129.addFollower(TERMINAL_9);
    		TERMINAL_129.addFollower(TERMINAL_10);
    		TERMINAL_129.addFollower(TERMINAL_11);
    		TERMINAL_129.addFollower(TERMINAL_12);
    		TERMINAL_129.addFollower(TERMINAL_13);
    		TERMINAL_129.addFollower(TERMINAL_14);
    		TERMINAL_129.addFollower(TERMINAL_15);
    		TERMINAL_129.addFollower(TERMINAL_16);
    		TERMINAL_129.addFollower(TERMINAL_17);
    		TERMINAL_129.addFollower(TERMINAL_18);
    		TERMINAL_129.addFollower(TERMINAL_19);
    		TERMINAL_129.addFollower(TERMINAL_20);
    		TERMINAL_129.addFollower(TERMINAL_21);
    		TERMINAL_129.addFollower(TERMINAL_22);
    		TERMINAL_129.addFollower(TERMINAL_23);
    		TERMINAL_129.addFollower(TERMINAL_24);
    		TERMINAL_129.addFollower(TERMINAL_25);
    		TERMINAL_129.addFollower(TERMINAL_26);
    		TERMINAL_129.addFollower(TERMINAL_27);
    		TERMINAL_129.addFollower(TERMINAL_28);
    		TERMINAL_129.addFollower(TERMINAL_29);
    		TERMINAL_129.addFollower(TERMINAL_30);
    		TERMINAL_129.addFollower(TERMINAL_31);
    		TERMINAL_129.addFollower(TERMINAL_32);
    		TERMINAL_129.addFollower(TERMINAL_33);
    		TERMINAL_129.addFollower(TERMINAL_34);
    		TERMINAL_129.addFollower(TERMINAL_35);
    		TERMINAL_129.addFollower(TERMINAL_36);
    		TERMINAL_129.addFollower(TERMINAL_37);
    		TERMINAL_129.addFollower(TERMINAL_38);
    		TERMINAL_129.addFollower(TERMINAL_39);
    		TERMINAL_129.addFollower(TERMINAL_40);
    		TERMINAL_129.addFollower(TERMINAL_41);
    		TERMINAL_129.addFollower(TERMINAL_42);
    		TERMINAL_129.addFollower(TERMINAL_43);
    		TERMINAL_129.addFollower(TERMINAL_44);
    		TERMINAL_129.addFollower(TERMINAL_45);
    		TERMINAL_129.addFollower(TERMINAL_46);
    		TERMINAL_129.addFollower(TERMINAL_47);
    		TERMINAL_129.addFollower(TERMINAL_48);
    		TERMINAL_129.addFollower(TERMINAL_49);
    		TERMINAL_129.addFollower(TERMINAL_50);
    		TERMINAL_129.addFollower(TERMINAL_51);
    		TERMINAL_129.addFollower(TERMINAL_52);
    		TERMINAL_129.addFollower(TERMINAL_53);
    		TERMINAL_129.addFollower(TERMINAL_54);
    		TERMINAL_7.addFollower(TERMINAL_130);
    		TERMINAL_130.addFollower(TERMINAL_1);
    		TERMINAL_130.addFollower(TERMINAL_3);
    		TERMINAL_130.addFollower(TERMINAL_5);
    		TERMINAL_130.addFollower(TERMINAL_6);
    		TERMINAL_131.addFollower(TERMINAL_7);
    		TERMINAL_131.addFollower(TERMINAL_1);
    		TERMINAL_131.addFollower(TERMINAL_8);
    		TERMINAL_131.addFollower(TERMINAL_9);
    		TERMINAL_131.addFollower(TERMINAL_10);
    		TERMINAL_131.addFollower(TERMINAL_11);
    		TERMINAL_131.addFollower(TERMINAL_12);
    		TERMINAL_131.addFollower(TERMINAL_13);
    		TERMINAL_131.addFollower(TERMINAL_14);
    		TERMINAL_131.addFollower(TERMINAL_15);
    		TERMINAL_131.addFollower(TERMINAL_16);
    		TERMINAL_131.addFollower(TERMINAL_17);
    		TERMINAL_131.addFollower(TERMINAL_18);
    		TERMINAL_131.addFollower(TERMINAL_19);
    		TERMINAL_131.addFollower(TERMINAL_20);
    		TERMINAL_131.addFollower(TERMINAL_21);
    		TERMINAL_131.addFollower(TERMINAL_22);
    		TERMINAL_131.addFollower(TERMINAL_23);
    		TERMINAL_131.addFollower(TERMINAL_24);
    		TERMINAL_131.addFollower(TERMINAL_25);
    		TERMINAL_131.addFollower(TERMINAL_26);
    		TERMINAL_131.addFollower(TERMINAL_27);
    		TERMINAL_131.addFollower(TERMINAL_28);
    		TERMINAL_131.addFollower(TERMINAL_29);
    		TERMINAL_131.addFollower(TERMINAL_30);
    		TERMINAL_131.addFollower(TERMINAL_31);
    		TERMINAL_131.addFollower(TERMINAL_32);
    		TERMINAL_131.addFollower(TERMINAL_33);
    		TERMINAL_131.addFollower(TERMINAL_34);
    		TERMINAL_131.addFollower(TERMINAL_35);
    		TERMINAL_131.addFollower(TERMINAL_36);
    		TERMINAL_131.addFollower(TERMINAL_37);
    		TERMINAL_131.addFollower(TERMINAL_38);
    		TERMINAL_131.addFollower(TERMINAL_39);
    		TERMINAL_131.addFollower(TERMINAL_40);
    		TERMINAL_131.addFollower(TERMINAL_41);
    		TERMINAL_131.addFollower(TERMINAL_42);
    		TERMINAL_131.addFollower(TERMINAL_43);
    		TERMINAL_131.addFollower(TERMINAL_44);
    		TERMINAL_131.addFollower(TERMINAL_45);
    		TERMINAL_131.addFollower(TERMINAL_46);
    		TERMINAL_131.addFollower(TERMINAL_47);
    		TERMINAL_131.addFollower(TERMINAL_48);
    		TERMINAL_131.addFollower(TERMINAL_49);
    		TERMINAL_131.addFollower(TERMINAL_50);
    		TERMINAL_131.addFollower(TERMINAL_51);
    		TERMINAL_131.addFollower(TERMINAL_52);
    		TERMINAL_131.addFollower(TERMINAL_53);
    		TERMINAL_131.addFollower(TERMINAL_54);
    		TERMINAL_54.addFollower(TERMINAL_1);
    		TERMINAL_1.addFollower(TERMINAL_0);
    		TERMINAL_1.addFollower(TERMINAL_1);
    		TERMINAL_1.addFollower(TERMINAL_2);
    		TERMINAL_1.addFollower(TERMINAL_3);
    		TERMINAL_1.addFollower(TERMINAL_5);
    		TERMINAL_1.addFollower(TERMINAL_6);
    		TERMINAL_1.addFollower(TERMINAL_7);
    		TERMINAL_1.addFollower(TERMINAL_8);
    		TERMINAL_1.addFollower(TERMINAL_9);
    		TERMINAL_1.addFollower(TERMINAL_10);
    		TERMINAL_1.addFollower(TERMINAL_11);
    		TERMINAL_1.addFollower(TERMINAL_12);
    		TERMINAL_1.addFollower(TERMINAL_13);
    		TERMINAL_1.addFollower(TERMINAL_14);
    		TERMINAL_1.addFollower(TERMINAL_15);
    		TERMINAL_1.addFollower(TERMINAL_16);
    		TERMINAL_1.addFollower(TERMINAL_17);
    		TERMINAL_1.addFollower(TERMINAL_18);
    		TERMINAL_1.addFollower(TERMINAL_19);
    		TERMINAL_1.addFollower(TERMINAL_20);
    		TERMINAL_1.addFollower(TERMINAL_21);
    		TERMINAL_1.addFollower(TERMINAL_22);
    		TERMINAL_1.addFollower(TERMINAL_23);
    		TERMINAL_1.addFollower(TERMINAL_24);
    		TERMINAL_1.addFollower(TERMINAL_25);
    		TERMINAL_1.addFollower(TERMINAL_26);
    		TERMINAL_1.addFollower(TERMINAL_27);
    		TERMINAL_1.addFollower(TERMINAL_28);
    		TERMINAL_1.addFollower(TERMINAL_29);
    		TERMINAL_1.addFollower(TERMINAL_30);
    		TERMINAL_1.addFollower(TERMINAL_31);
    		TERMINAL_1.addFollower(TERMINAL_32);
    		TERMINAL_1.addFollower(TERMINAL_33);
    		TERMINAL_1.addFollower(TERMINAL_34);
    		TERMINAL_1.addFollower(TERMINAL_35);
    		TERMINAL_1.addFollower(TERMINAL_36);
    		TERMINAL_1.addFollower(TERMINAL_37);
    		TERMINAL_1.addFollower(TERMINAL_38);
    		TERMINAL_1.addFollower(TERMINAL_39);
    		TERMINAL_1.addFollower(TERMINAL_40);
    		TERMINAL_1.addFollower(TERMINAL_41);
    		TERMINAL_1.addFollower(TERMINAL_42);
    		TERMINAL_1.addFollower(TERMINAL_43);
    		TERMINAL_1.addFollower(TERMINAL_44);
    		TERMINAL_1.addFollower(TERMINAL_45);
    		TERMINAL_1.addFollower(TERMINAL_46);
    		TERMINAL_1.addFollower(TERMINAL_47);
    		TERMINAL_1.addFollower(TERMINAL_48);
    		TERMINAL_1.addFollower(TERMINAL_49);
    		TERMINAL_1.addFollower(TERMINAL_50);
    		TERMINAL_1.addFollower(TERMINAL_51);
    		TERMINAL_1.addFollower(TERMINAL_52);
    		TERMINAL_1.addFollower(TERMINAL_53);
    		TERMINAL_1.addFollower(TERMINAL_54);
    		TERMINAL_9.addFollower(TERMINAL_132);
    		TERMINAL_132.addFollower(TERMINAL_8);
    		TERMINAL_132.addFollower(TERMINAL_133);
    		TERMINAL_133.addFollower(TERMINAL_134);
    		TERMINAL_134.addFollower(TERMINAL_3);
    		TERMINAL_134.addFollower(TERMINAL_5);
    		TERMINAL_134.addFollower(TERMINAL_6);
    		TERMINAL_55.addFollower(TERMINAL_135);
    		TERMINAL_135.addFollower(TERMINAL_1);
    		TERMINAL_135.addFollower(TERMINAL_9);
    		TERMINAL_135.addFollower(TERMINAL_10);
    		TERMINAL_135.addFollower(TERMINAL_11);
    		TERMINAL_135.addFollower(TERMINAL_12);
    		TERMINAL_135.addFollower(TERMINAL_13);
    		TERMINAL_135.addFollower(TERMINAL_14);
    		TERMINAL_135.addFollower(TERMINAL_15);
    		TERMINAL_135.addFollower(TERMINAL_16);
    		TERMINAL_135.addFollower(TERMINAL_17);
    		TERMINAL_135.addFollower(TERMINAL_18);
    		TERMINAL_135.addFollower(TERMINAL_19);
    		TERMINAL_135.addFollower(TERMINAL_20);
    		TERMINAL_135.addFollower(TERMINAL_21);
    		TERMINAL_135.addFollower(TERMINAL_22);
    		TERMINAL_135.addFollower(TERMINAL_23);
    		TERMINAL_135.addFollower(TERMINAL_24);
    		TERMINAL_135.addFollower(TERMINAL_25);
    		TERMINAL_135.addFollower(TERMINAL_26);
    		TERMINAL_135.addFollower(TERMINAL_27);
    		TERMINAL_135.addFollower(TERMINAL_28);
    		TERMINAL_135.addFollower(TERMINAL_29);
    		TERMINAL_135.addFollower(TERMINAL_30);
    		TERMINAL_135.addFollower(TERMINAL_31);
    		TERMINAL_135.addFollower(TERMINAL_32);
    		TERMINAL_135.addFollower(TERMINAL_33);
    		TERMINAL_135.addFollower(TERMINAL_34);
    		TERMINAL_135.addFollower(TERMINAL_35);
    		TERMINAL_135.addFollower(TERMINAL_36);
    		TERMINAL_135.addFollower(TERMINAL_37);
    		TERMINAL_135.addFollower(TERMINAL_38);
    		TERMINAL_135.addFollower(TERMINAL_39);
    		TERMINAL_135.addFollower(TERMINAL_40);
    		TERMINAL_135.addFollower(TERMINAL_41);
    		TERMINAL_135.addFollower(TERMINAL_42);
    		TERMINAL_135.addFollower(TERMINAL_43);
    		TERMINAL_135.addFollower(TERMINAL_44);
    		TERMINAL_135.addFollower(TERMINAL_45);
    		TERMINAL_135.addFollower(TERMINAL_46);
    		TERMINAL_135.addFollower(TERMINAL_47);
    		TERMINAL_135.addFollower(TERMINAL_48);
    		TERMINAL_135.addFollower(TERMINAL_49);
    		TERMINAL_135.addFollower(TERMINAL_50);
    		TERMINAL_135.addFollower(TERMINAL_51);
    		TERMINAL_135.addFollower(TERMINAL_52);
    		TERMINAL_135.addFollower(TERMINAL_53);
    		TERMINAL_135.addFollower(TERMINAL_54);
    		TERMINAL_10.addFollower(TERMINAL_136);
    		TERMINAL_136.addFollower(TERMINAL_8);
    		TERMINAL_136.addFollower(TERMINAL_137);
    		TERMINAL_137.addFollower(TERMINAL_138);
    		TERMINAL_138.addFollower(TERMINAL_3);
    		TERMINAL_138.addFollower(TERMINAL_5);
    		TERMINAL_138.addFollower(TERMINAL_6);
    		TERMINAL_86.addFollower(TERMINAL_139);
    		TERMINAL_139.addFollower(TERMINAL_1);
    		TERMINAL_139.addFollower(TERMINAL_9);
    		TERMINAL_139.addFollower(TERMINAL_10);
    		TERMINAL_139.addFollower(TERMINAL_11);
    		TERMINAL_139.addFollower(TERMINAL_12);
    		TERMINAL_139.addFollower(TERMINAL_13);
    		TERMINAL_139.addFollower(TERMINAL_14);
    		TERMINAL_139.addFollower(TERMINAL_15);
    		TERMINAL_139.addFollower(TERMINAL_16);
    		TERMINAL_139.addFollower(TERMINAL_17);
    		TERMINAL_139.addFollower(TERMINAL_18);
    		TERMINAL_139.addFollower(TERMINAL_19);
    		TERMINAL_139.addFollower(TERMINAL_20);
    		TERMINAL_139.addFollower(TERMINAL_21);
    		TERMINAL_139.addFollower(TERMINAL_22);
    		TERMINAL_139.addFollower(TERMINAL_23);
    		TERMINAL_139.addFollower(TERMINAL_24);
    		TERMINAL_139.addFollower(TERMINAL_25);
    		TERMINAL_139.addFollower(TERMINAL_26);
    		TERMINAL_139.addFollower(TERMINAL_27);
    		TERMINAL_139.addFollower(TERMINAL_28);
    		TERMINAL_139.addFollower(TERMINAL_29);
    		TERMINAL_139.addFollower(TERMINAL_30);
    		TERMINAL_139.addFollower(TERMINAL_31);
    		TERMINAL_139.addFollower(TERMINAL_32);
    		TERMINAL_139.addFollower(TERMINAL_33);
    		TERMINAL_139.addFollower(TERMINAL_34);
    		TERMINAL_139.addFollower(TERMINAL_35);
    		TERMINAL_139.addFollower(TERMINAL_36);
    		TERMINAL_139.addFollower(TERMINAL_37);
    		TERMINAL_139.addFollower(TERMINAL_38);
    		TERMINAL_139.addFollower(TERMINAL_39);
    		TERMINAL_139.addFollower(TERMINAL_40);
    		TERMINAL_139.addFollower(TERMINAL_41);
    		TERMINAL_139.addFollower(TERMINAL_42);
    		TERMINAL_139.addFollower(TERMINAL_43);
    		TERMINAL_139.addFollower(TERMINAL_44);
    		TERMINAL_139.addFollower(TERMINAL_45);
    		TERMINAL_139.addFollower(TERMINAL_46);
    		TERMINAL_139.addFollower(TERMINAL_47);
    		TERMINAL_139.addFollower(TERMINAL_48);
    		TERMINAL_139.addFollower(TERMINAL_49);
    		TERMINAL_139.addFollower(TERMINAL_50);
    		TERMINAL_139.addFollower(TERMINAL_51);
    		TERMINAL_139.addFollower(TERMINAL_52);
    		TERMINAL_139.addFollower(TERMINAL_53);
    		TERMINAL_139.addFollower(TERMINAL_54);
    		TERMINAL_11.addFollower(TERMINAL_140);
    		TERMINAL_140.addFollower(TERMINAL_8);
    		TERMINAL_140.addFollower(TERMINAL_141);
    		TERMINAL_141.addFollower(TERMINAL_142);
    		TERMINAL_142.addFollower(TERMINAL_3);
    		TERMINAL_142.addFollower(TERMINAL_5);
    		TERMINAL_142.addFollower(TERMINAL_6);
    		TERMINAL_108.addFollower(TERMINAL_143);
    		TERMINAL_143.addFollower(TERMINAL_1);
    		TERMINAL_143.addFollower(TERMINAL_9);
    		TERMINAL_143.addFollower(TERMINAL_10);
    		TERMINAL_143.addFollower(TERMINAL_11);
    		TERMINAL_143.addFollower(TERMINAL_12);
    		TERMINAL_143.addFollower(TERMINAL_13);
    		TERMINAL_143.addFollower(TERMINAL_14);
    		TERMINAL_143.addFollower(TERMINAL_15);
    		TERMINAL_143.addFollower(TERMINAL_16);
    		TERMINAL_143.addFollower(TERMINAL_17);
    		TERMINAL_143.addFollower(TERMINAL_18);
    		TERMINAL_143.addFollower(TERMINAL_19);
    		TERMINAL_143.addFollower(TERMINAL_20);
    		TERMINAL_143.addFollower(TERMINAL_21);
    		TERMINAL_143.addFollower(TERMINAL_22);
    		TERMINAL_143.addFollower(TERMINAL_23);
    		TERMINAL_143.addFollower(TERMINAL_24);
    		TERMINAL_143.addFollower(TERMINAL_25);
    		TERMINAL_143.addFollower(TERMINAL_26);
    		TERMINAL_143.addFollower(TERMINAL_27);
    		TERMINAL_143.addFollower(TERMINAL_28);
    		TERMINAL_143.addFollower(TERMINAL_29);
    		TERMINAL_143.addFollower(TERMINAL_30);
    		TERMINAL_143.addFollower(TERMINAL_31);
    		TERMINAL_143.addFollower(TERMINAL_32);
    		TERMINAL_143.addFollower(TERMINAL_33);
    		TERMINAL_143.addFollower(TERMINAL_34);
    		TERMINAL_143.addFollower(TERMINAL_35);
    		TERMINAL_143.addFollower(TERMINAL_36);
    		TERMINAL_143.addFollower(TERMINAL_37);
    		TERMINAL_143.addFollower(TERMINAL_38);
    		TERMINAL_143.addFollower(TERMINAL_39);
    		TERMINAL_143.addFollower(TERMINAL_40);
    		TERMINAL_143.addFollower(TERMINAL_41);
    		TERMINAL_143.addFollower(TERMINAL_42);
    		TERMINAL_143.addFollower(TERMINAL_43);
    		TERMINAL_143.addFollower(TERMINAL_44);
    		TERMINAL_143.addFollower(TERMINAL_45);
    		TERMINAL_143.addFollower(TERMINAL_46);
    		TERMINAL_143.addFollower(TERMINAL_47);
    		TERMINAL_143.addFollower(TERMINAL_48);
    		TERMINAL_143.addFollower(TERMINAL_49);
    		TERMINAL_143.addFollower(TERMINAL_50);
    		TERMINAL_143.addFollower(TERMINAL_51);
    		TERMINAL_143.addFollower(TERMINAL_52);
    		TERMINAL_143.addFollower(TERMINAL_53);
    		TERMINAL_143.addFollower(TERMINAL_54);
    		TERMINAL_12.addFollower(TERMINAL_144);
    		TERMINAL_144.addFollower(TERMINAL_8);
    		TERMINAL_144.addFollower(TERMINAL_145);
    		TERMINAL_145.addFollower(TERMINAL_146);
    		TERMINAL_146.addFollower(TERMINAL_3);
    		TERMINAL_146.addFollower(TERMINAL_5);
    		TERMINAL_146.addFollower(TERMINAL_6);
    		TERMINAL_119.addFollower(TERMINAL_147);
    		TERMINAL_147.addFollower(TERMINAL_1);
    		TERMINAL_147.addFollower(TERMINAL_9);
    		TERMINAL_147.addFollower(TERMINAL_10);
    		TERMINAL_147.addFollower(TERMINAL_11);
    		TERMINAL_147.addFollower(TERMINAL_12);
    		TERMINAL_147.addFollower(TERMINAL_13);
    		TERMINAL_147.addFollower(TERMINAL_14);
    		TERMINAL_147.addFollower(TERMINAL_15);
    		TERMINAL_147.addFollower(TERMINAL_16);
    		TERMINAL_147.addFollower(TERMINAL_17);
    		TERMINAL_147.addFollower(TERMINAL_18);
    		TERMINAL_147.addFollower(TERMINAL_19);
    		TERMINAL_147.addFollower(TERMINAL_20);
    		TERMINAL_147.addFollower(TERMINAL_21);
    		TERMINAL_147.addFollower(TERMINAL_22);
    		TERMINAL_147.addFollower(TERMINAL_23);
    		TERMINAL_147.addFollower(TERMINAL_24);
    		TERMINAL_147.addFollower(TERMINAL_25);
    		TERMINAL_147.addFollower(TERMINAL_26);
    		TERMINAL_147.addFollower(TERMINAL_27);
    		TERMINAL_147.addFollower(TERMINAL_28);
    		TERMINAL_147.addFollower(TERMINAL_29);
    		TERMINAL_147.addFollower(TERMINAL_30);
    		TERMINAL_147.addFollower(TERMINAL_31);
    		TERMINAL_147.addFollower(TERMINAL_32);
    		TERMINAL_147.addFollower(TERMINAL_33);
    		TERMINAL_147.addFollower(TERMINAL_34);
    		TERMINAL_147.addFollower(TERMINAL_35);
    		TERMINAL_147.addFollower(TERMINAL_36);
    		TERMINAL_147.addFollower(TERMINAL_37);
    		TERMINAL_147.addFollower(TERMINAL_38);
    		TERMINAL_147.addFollower(TERMINAL_39);
    		TERMINAL_147.addFollower(TERMINAL_40);
    		TERMINAL_147.addFollower(TERMINAL_41);
    		TERMINAL_147.addFollower(TERMINAL_42);
    		TERMINAL_147.addFollower(TERMINAL_43);
    		TERMINAL_147.addFollower(TERMINAL_44);
    		TERMINAL_147.addFollower(TERMINAL_45);
    		TERMINAL_147.addFollower(TERMINAL_46);
    		TERMINAL_147.addFollower(TERMINAL_47);
    		TERMINAL_147.addFollower(TERMINAL_48);
    		TERMINAL_147.addFollower(TERMINAL_49);
    		TERMINAL_147.addFollower(TERMINAL_50);
    		TERMINAL_147.addFollower(TERMINAL_51);
    		TERMINAL_147.addFollower(TERMINAL_52);
    		TERMINAL_147.addFollower(TERMINAL_53);
    		TERMINAL_147.addFollower(TERMINAL_54);
    		TERMINAL_13.addFollower(TERMINAL_148);
    		TERMINAL_148.addFollower(TERMINAL_8);
    		TERMINAL_148.addFollower(TERMINAL_149);
    		TERMINAL_149.addFollower(TERMINAL_150);
    		TERMINAL_150.addFollower(TERMINAL_3);
    		TERMINAL_150.addFollower(TERMINAL_5);
    		TERMINAL_150.addFollower(TERMINAL_6);
    		TERMINAL_121.addFollower(TERMINAL_151);
    		TERMINAL_151.addFollower(TERMINAL_1);
    		TERMINAL_151.addFollower(TERMINAL_9);
    		TERMINAL_151.addFollower(TERMINAL_10);
    		TERMINAL_151.addFollower(TERMINAL_11);
    		TERMINAL_151.addFollower(TERMINAL_12);
    		TERMINAL_151.addFollower(TERMINAL_13);
    		TERMINAL_151.addFollower(TERMINAL_14);
    		TERMINAL_151.addFollower(TERMINAL_15);
    		TERMINAL_151.addFollower(TERMINAL_16);
    		TERMINAL_151.addFollower(TERMINAL_17);
    		TERMINAL_151.addFollower(TERMINAL_18);
    		TERMINAL_151.addFollower(TERMINAL_19);
    		TERMINAL_151.addFollower(TERMINAL_20);
    		TERMINAL_151.addFollower(TERMINAL_21);
    		TERMINAL_151.addFollower(TERMINAL_22);
    		TERMINAL_151.addFollower(TERMINAL_23);
    		TERMINAL_151.addFollower(TERMINAL_24);
    		TERMINAL_151.addFollower(TERMINAL_25);
    		TERMINAL_151.addFollower(TERMINAL_26);
    		TERMINAL_151.addFollower(TERMINAL_27);
    		TERMINAL_151.addFollower(TERMINAL_28);
    		TERMINAL_151.addFollower(TERMINAL_29);
    		TERMINAL_151.addFollower(TERMINAL_30);
    		TERMINAL_151.addFollower(TERMINAL_31);
    		TERMINAL_151.addFollower(TERMINAL_32);
    		TERMINAL_151.addFollower(TERMINAL_33);
    		TERMINAL_151.addFollower(TERMINAL_34);
    		TERMINAL_151.addFollower(TERMINAL_35);
    		TERMINAL_151.addFollower(TERMINAL_36);
    		TERMINAL_151.addFollower(TERMINAL_37);
    		TERMINAL_151.addFollower(TERMINAL_38);
    		TERMINAL_151.addFollower(TERMINAL_39);
    		TERMINAL_151.addFollower(TERMINAL_40);
    		TERMINAL_151.addFollower(TERMINAL_41);
    		TERMINAL_151.addFollower(TERMINAL_42);
    		TERMINAL_151.addFollower(TERMINAL_43);
    		TERMINAL_151.addFollower(TERMINAL_44);
    		TERMINAL_151.addFollower(TERMINAL_45);
    		TERMINAL_151.addFollower(TERMINAL_46);
    		TERMINAL_151.addFollower(TERMINAL_47);
    		TERMINAL_151.addFollower(TERMINAL_48);
    		TERMINAL_151.addFollower(TERMINAL_49);
    		TERMINAL_151.addFollower(TERMINAL_50);
    		TERMINAL_151.addFollower(TERMINAL_51);
    		TERMINAL_151.addFollower(TERMINAL_52);
    		TERMINAL_151.addFollower(TERMINAL_53);
    		TERMINAL_151.addFollower(TERMINAL_54);
    		TERMINAL_14.addFollower(TERMINAL_152);
    		TERMINAL_152.addFollower(TERMINAL_8);
    		TERMINAL_152.addFollower(TERMINAL_153);
    		TERMINAL_153.addFollower(TERMINAL_154);
    		TERMINAL_154.addFollower(TERMINAL_3);
    		TERMINAL_154.addFollower(TERMINAL_5);
    		TERMINAL_154.addFollower(TERMINAL_6);
    		TERMINAL_122.addFollower(TERMINAL_155);
    		TERMINAL_155.addFollower(TERMINAL_1);
    		TERMINAL_155.addFollower(TERMINAL_9);
    		TERMINAL_155.addFollower(TERMINAL_10);
    		TERMINAL_155.addFollower(TERMINAL_11);
    		TERMINAL_155.addFollower(TERMINAL_12);
    		TERMINAL_155.addFollower(TERMINAL_13);
    		TERMINAL_155.addFollower(TERMINAL_14);
    		TERMINAL_155.addFollower(TERMINAL_15);
    		TERMINAL_155.addFollower(TERMINAL_16);
    		TERMINAL_155.addFollower(TERMINAL_17);
    		TERMINAL_155.addFollower(TERMINAL_18);
    		TERMINAL_155.addFollower(TERMINAL_19);
    		TERMINAL_155.addFollower(TERMINAL_20);
    		TERMINAL_155.addFollower(TERMINAL_21);
    		TERMINAL_155.addFollower(TERMINAL_22);
    		TERMINAL_155.addFollower(TERMINAL_23);
    		TERMINAL_155.addFollower(TERMINAL_24);
    		TERMINAL_155.addFollower(TERMINAL_25);
    		TERMINAL_155.addFollower(TERMINAL_26);
    		TERMINAL_155.addFollower(TERMINAL_27);
    		TERMINAL_155.addFollower(TERMINAL_28);
    		TERMINAL_155.addFollower(TERMINAL_29);
    		TERMINAL_155.addFollower(TERMINAL_30);
    		TERMINAL_155.addFollower(TERMINAL_31);
    		TERMINAL_155.addFollower(TERMINAL_32);
    		TERMINAL_155.addFollower(TERMINAL_33);
    		TERMINAL_155.addFollower(TERMINAL_34);
    		TERMINAL_155.addFollower(TERMINAL_35);
    		TERMINAL_155.addFollower(TERMINAL_36);
    		TERMINAL_155.addFollower(TERMINAL_37);
    		TERMINAL_155.addFollower(TERMINAL_38);
    		TERMINAL_155.addFollower(TERMINAL_39);
    		TERMINAL_155.addFollower(TERMINAL_40);
    		TERMINAL_155.addFollower(TERMINAL_41);
    		TERMINAL_155.addFollower(TERMINAL_42);
    		TERMINAL_155.addFollower(TERMINAL_43);
    		TERMINAL_155.addFollower(TERMINAL_44);
    		TERMINAL_155.addFollower(TERMINAL_45);
    		TERMINAL_155.addFollower(TERMINAL_46);
    		TERMINAL_155.addFollower(TERMINAL_47);
    		TERMINAL_155.addFollower(TERMINAL_48);
    		TERMINAL_155.addFollower(TERMINAL_49);
    		TERMINAL_155.addFollower(TERMINAL_50);
    		TERMINAL_155.addFollower(TERMINAL_51);
    		TERMINAL_155.addFollower(TERMINAL_52);
    		TERMINAL_155.addFollower(TERMINAL_53);
    		TERMINAL_155.addFollower(TERMINAL_54);
    		TERMINAL_15.addFollower(TERMINAL_161);
    		TERMINAL_161.addFollower(TERMINAL_8);
    		TERMINAL_161.addFollower(TERMINAL_3);
    		TERMINAL_161.addFollower(TERMINAL_5);
    		TERMINAL_161.addFollower(TERMINAL_6);
    		TERMINAL_87.addFollower(TERMINAL_1);
    		TERMINAL_87.addFollower(TERMINAL_9);
    		TERMINAL_87.addFollower(TERMINAL_10);
    		TERMINAL_87.addFollower(TERMINAL_11);
    		TERMINAL_87.addFollower(TERMINAL_12);
    		TERMINAL_87.addFollower(TERMINAL_13);
    		TERMINAL_87.addFollower(TERMINAL_14);
    		TERMINAL_87.addFollower(TERMINAL_15);
    		TERMINAL_87.addFollower(TERMINAL_16);
    		TERMINAL_87.addFollower(TERMINAL_17);
    		TERMINAL_87.addFollower(TERMINAL_18);
    		TERMINAL_87.addFollower(TERMINAL_19);
    		TERMINAL_87.addFollower(TERMINAL_20);
    		TERMINAL_87.addFollower(TERMINAL_21);
    		TERMINAL_87.addFollower(TERMINAL_22);
    		TERMINAL_87.addFollower(TERMINAL_23);
    		TERMINAL_87.addFollower(TERMINAL_24);
    		TERMINAL_87.addFollower(TERMINAL_25);
    		TERMINAL_87.addFollower(TERMINAL_26);
    		TERMINAL_87.addFollower(TERMINAL_27);
    		TERMINAL_87.addFollower(TERMINAL_28);
    		TERMINAL_87.addFollower(TERMINAL_29);
    		TERMINAL_87.addFollower(TERMINAL_30);
    		TERMINAL_87.addFollower(TERMINAL_31);
    		TERMINAL_87.addFollower(TERMINAL_32);
    		TERMINAL_87.addFollower(TERMINAL_33);
    		TERMINAL_87.addFollower(TERMINAL_34);
    		TERMINAL_87.addFollower(TERMINAL_35);
    		TERMINAL_87.addFollower(TERMINAL_36);
    		TERMINAL_87.addFollower(TERMINAL_37);
    		TERMINAL_87.addFollower(TERMINAL_38);
    		TERMINAL_87.addFollower(TERMINAL_39);
    		TERMINAL_87.addFollower(TERMINAL_40);
    		TERMINAL_87.addFollower(TERMINAL_41);
    		TERMINAL_87.addFollower(TERMINAL_42);
    		TERMINAL_87.addFollower(TERMINAL_43);
    		TERMINAL_87.addFollower(TERMINAL_44);
    		TERMINAL_87.addFollower(TERMINAL_45);
    		TERMINAL_87.addFollower(TERMINAL_46);
    		TERMINAL_87.addFollower(TERMINAL_47);
    		TERMINAL_87.addFollower(TERMINAL_48);
    		TERMINAL_87.addFollower(TERMINAL_49);
    		TERMINAL_87.addFollower(TERMINAL_50);
    		TERMINAL_87.addFollower(TERMINAL_51);
    		TERMINAL_87.addFollower(TERMINAL_52);
    		TERMINAL_87.addFollower(TERMINAL_53);
    		TERMINAL_87.addFollower(TERMINAL_54);
    		TERMINAL_16.addFollower(TERMINAL_162);
    		TERMINAL_162.addFollower(TERMINAL_8);
    		TERMINAL_162.addFollower(TERMINAL_3);
    		TERMINAL_162.addFollower(TERMINAL_5);
    		TERMINAL_162.addFollower(TERMINAL_6);
    		TERMINAL_163.addFollower(TERMINAL_1);
    		TERMINAL_163.addFollower(TERMINAL_9);
    		TERMINAL_163.addFollower(TERMINAL_10);
    		TERMINAL_163.addFollower(TERMINAL_11);
    		TERMINAL_163.addFollower(TERMINAL_12);
    		TERMINAL_163.addFollower(TERMINAL_13);
    		TERMINAL_163.addFollower(TERMINAL_14);
    		TERMINAL_163.addFollower(TERMINAL_15);
    		TERMINAL_163.addFollower(TERMINAL_16);
    		TERMINAL_163.addFollower(TERMINAL_17);
    		TERMINAL_163.addFollower(TERMINAL_18);
    		TERMINAL_163.addFollower(TERMINAL_19);
    		TERMINAL_163.addFollower(TERMINAL_20);
    		TERMINAL_163.addFollower(TERMINAL_21);
    		TERMINAL_163.addFollower(TERMINAL_22);
    		TERMINAL_163.addFollower(TERMINAL_23);
    		TERMINAL_163.addFollower(TERMINAL_24);
    		TERMINAL_163.addFollower(TERMINAL_25);
    		TERMINAL_163.addFollower(TERMINAL_26);
    		TERMINAL_163.addFollower(TERMINAL_27);
    		TERMINAL_163.addFollower(TERMINAL_28);
    		TERMINAL_163.addFollower(TERMINAL_29);
    		TERMINAL_163.addFollower(TERMINAL_30);
    		TERMINAL_163.addFollower(TERMINAL_31);
    		TERMINAL_163.addFollower(TERMINAL_32);
    		TERMINAL_163.addFollower(TERMINAL_33);
    		TERMINAL_163.addFollower(TERMINAL_34);
    		TERMINAL_163.addFollower(TERMINAL_35);
    		TERMINAL_163.addFollower(TERMINAL_36);
    		TERMINAL_163.addFollower(TERMINAL_37);
    		TERMINAL_163.addFollower(TERMINAL_38);
    		TERMINAL_163.addFollower(TERMINAL_39);
    		TERMINAL_163.addFollower(TERMINAL_40);
    		TERMINAL_163.addFollower(TERMINAL_41);
    		TERMINAL_163.addFollower(TERMINAL_42);
    		TERMINAL_163.addFollower(TERMINAL_43);
    		TERMINAL_163.addFollower(TERMINAL_44);
    		TERMINAL_163.addFollower(TERMINAL_45);
    		TERMINAL_163.addFollower(TERMINAL_46);
    		TERMINAL_163.addFollower(TERMINAL_47);
    		TERMINAL_163.addFollower(TERMINAL_48);
    		TERMINAL_163.addFollower(TERMINAL_49);
    		TERMINAL_163.addFollower(TERMINAL_50);
    		TERMINAL_163.addFollower(TERMINAL_51);
    		TERMINAL_163.addFollower(TERMINAL_52);
    		TERMINAL_163.addFollower(TERMINAL_53);
    		TERMINAL_163.addFollower(TERMINAL_54);
    		TERMINAL_17.addFollower(TERMINAL_164);
    		TERMINAL_164.addFollower(TERMINAL_8);
    		TERMINAL_164.addFollower(TERMINAL_3);
    		TERMINAL_164.addFollower(TERMINAL_5);
    		TERMINAL_164.addFollower(TERMINAL_6);
    		TERMINAL_165.addFollower(TERMINAL_1);
    		TERMINAL_165.addFollower(TERMINAL_9);
    		TERMINAL_165.addFollower(TERMINAL_10);
    		TERMINAL_165.addFollower(TERMINAL_11);
    		TERMINAL_165.addFollower(TERMINAL_12);
    		TERMINAL_165.addFollower(TERMINAL_13);
    		TERMINAL_165.addFollower(TERMINAL_14);
    		TERMINAL_165.addFollower(TERMINAL_15);
    		TERMINAL_165.addFollower(TERMINAL_16);
    		TERMINAL_165.addFollower(TERMINAL_17);
    		TERMINAL_165.addFollower(TERMINAL_18);
    		TERMINAL_165.addFollower(TERMINAL_19);
    		TERMINAL_165.addFollower(TERMINAL_20);
    		TERMINAL_165.addFollower(TERMINAL_21);
    		TERMINAL_165.addFollower(TERMINAL_22);
    		TERMINAL_165.addFollower(TERMINAL_23);
    		TERMINAL_165.addFollower(TERMINAL_24);
    		TERMINAL_165.addFollower(TERMINAL_25);
    		TERMINAL_165.addFollower(TERMINAL_26);
    		TERMINAL_165.addFollower(TERMINAL_27);
    		TERMINAL_165.addFollower(TERMINAL_28);
    		TERMINAL_165.addFollower(TERMINAL_29);
    		TERMINAL_165.addFollower(TERMINAL_30);
    		TERMINAL_165.addFollower(TERMINAL_31);
    		TERMINAL_165.addFollower(TERMINAL_32);
    		TERMINAL_165.addFollower(TERMINAL_33);
    		TERMINAL_165.addFollower(TERMINAL_34);
    		TERMINAL_165.addFollower(TERMINAL_35);
    		TERMINAL_165.addFollower(TERMINAL_36);
    		TERMINAL_165.addFollower(TERMINAL_37);
    		TERMINAL_165.addFollower(TERMINAL_38);
    		TERMINAL_165.addFollower(TERMINAL_39);
    		TERMINAL_165.addFollower(TERMINAL_40);
    		TERMINAL_165.addFollower(TERMINAL_41);
    		TERMINAL_165.addFollower(TERMINAL_42);
    		TERMINAL_165.addFollower(TERMINAL_43);
    		TERMINAL_165.addFollower(TERMINAL_44);
    		TERMINAL_165.addFollower(TERMINAL_45);
    		TERMINAL_165.addFollower(TERMINAL_46);
    		TERMINAL_165.addFollower(TERMINAL_47);
    		TERMINAL_165.addFollower(TERMINAL_48);
    		TERMINAL_165.addFollower(TERMINAL_49);
    		TERMINAL_165.addFollower(TERMINAL_50);
    		TERMINAL_165.addFollower(TERMINAL_51);
    		TERMINAL_165.addFollower(TERMINAL_52);
    		TERMINAL_165.addFollower(TERMINAL_53);
    		TERMINAL_165.addFollower(TERMINAL_54);
    		TERMINAL_18.addFollower(TERMINAL_166);
    		TERMINAL_166.addFollower(TERMINAL_8);
    		TERMINAL_166.addFollower(TERMINAL_3);
    		TERMINAL_166.addFollower(TERMINAL_5);
    		TERMINAL_166.addFollower(TERMINAL_6);
    		TERMINAL_167.addFollower(TERMINAL_1);
    		TERMINAL_167.addFollower(TERMINAL_9);
    		TERMINAL_167.addFollower(TERMINAL_10);
    		TERMINAL_167.addFollower(TERMINAL_11);
    		TERMINAL_167.addFollower(TERMINAL_12);
    		TERMINAL_167.addFollower(TERMINAL_13);
    		TERMINAL_167.addFollower(TERMINAL_14);
    		TERMINAL_167.addFollower(TERMINAL_15);
    		TERMINAL_167.addFollower(TERMINAL_16);
    		TERMINAL_167.addFollower(TERMINAL_17);
    		TERMINAL_167.addFollower(TERMINAL_18);
    		TERMINAL_167.addFollower(TERMINAL_19);
    		TERMINAL_167.addFollower(TERMINAL_20);
    		TERMINAL_167.addFollower(TERMINAL_21);
    		TERMINAL_167.addFollower(TERMINAL_22);
    		TERMINAL_167.addFollower(TERMINAL_23);
    		TERMINAL_167.addFollower(TERMINAL_24);
    		TERMINAL_167.addFollower(TERMINAL_25);
    		TERMINAL_167.addFollower(TERMINAL_26);
    		TERMINAL_167.addFollower(TERMINAL_27);
    		TERMINAL_167.addFollower(TERMINAL_28);
    		TERMINAL_167.addFollower(TERMINAL_29);
    		TERMINAL_167.addFollower(TERMINAL_30);
    		TERMINAL_167.addFollower(TERMINAL_31);
    		TERMINAL_167.addFollower(TERMINAL_32);
    		TERMINAL_167.addFollower(TERMINAL_33);
    		TERMINAL_167.addFollower(TERMINAL_34);
    		TERMINAL_167.addFollower(TERMINAL_35);
    		TERMINAL_167.addFollower(TERMINAL_36);
    		TERMINAL_167.addFollower(TERMINAL_37);
    		TERMINAL_167.addFollower(TERMINAL_38);
    		TERMINAL_167.addFollower(TERMINAL_39);
    		TERMINAL_167.addFollower(TERMINAL_40);
    		TERMINAL_167.addFollower(TERMINAL_41);
    		TERMINAL_167.addFollower(TERMINAL_42);
    		TERMINAL_167.addFollower(TERMINAL_43);
    		TERMINAL_167.addFollower(TERMINAL_44);
    		TERMINAL_167.addFollower(TERMINAL_45);
    		TERMINAL_167.addFollower(TERMINAL_46);
    		TERMINAL_167.addFollower(TERMINAL_47);
    		TERMINAL_167.addFollower(TERMINAL_48);
    		TERMINAL_167.addFollower(TERMINAL_49);
    		TERMINAL_167.addFollower(TERMINAL_50);
    		TERMINAL_167.addFollower(TERMINAL_51);
    		TERMINAL_167.addFollower(TERMINAL_52);
    		TERMINAL_167.addFollower(TERMINAL_53);
    		TERMINAL_167.addFollower(TERMINAL_54);
    		TERMINAL_8.addFollower(TERMINAL_168);
    		TERMINAL_168.addFollower(TERMINAL_8);
    		TERMINAL_168.addFollower(TERMINAL_3);
    		TERMINAL_168.addFollower(TERMINAL_5);
    		TERMINAL_168.addFollower(TERMINAL_6);
    		TERMINAL_88.addFollower(TERMINAL_1);
    		TERMINAL_88.addFollower(TERMINAL_8);
    		TERMINAL_88.addFollower(TERMINAL_9);
    		TERMINAL_88.addFollower(TERMINAL_10);
    		TERMINAL_88.addFollower(TERMINAL_11);
    		TERMINAL_88.addFollower(TERMINAL_12);
    		TERMINAL_88.addFollower(TERMINAL_13);
    		TERMINAL_88.addFollower(TERMINAL_14);
    		TERMINAL_88.addFollower(TERMINAL_15);
    		TERMINAL_88.addFollower(TERMINAL_16);
    		TERMINAL_88.addFollower(TERMINAL_17);
    		TERMINAL_88.addFollower(TERMINAL_18);
    		TERMINAL_88.addFollower(TERMINAL_19);
    		TERMINAL_88.addFollower(TERMINAL_20);
    		TERMINAL_88.addFollower(TERMINAL_21);
    		TERMINAL_88.addFollower(TERMINAL_22);
    		TERMINAL_88.addFollower(TERMINAL_23);
    		TERMINAL_88.addFollower(TERMINAL_24);
    		TERMINAL_88.addFollower(TERMINAL_25);
    		TERMINAL_88.addFollower(TERMINAL_26);
    		TERMINAL_88.addFollower(TERMINAL_27);
    		TERMINAL_88.addFollower(TERMINAL_28);
    		TERMINAL_88.addFollower(TERMINAL_29);
    		TERMINAL_88.addFollower(TERMINAL_30);
    		TERMINAL_88.addFollower(TERMINAL_31);
    		TERMINAL_88.addFollower(TERMINAL_32);
    		TERMINAL_88.addFollower(TERMINAL_33);
    		TERMINAL_88.addFollower(TERMINAL_34);
    		TERMINAL_88.addFollower(TERMINAL_35);
    		TERMINAL_88.addFollower(TERMINAL_36);
    		TERMINAL_88.addFollower(TERMINAL_37);
    		TERMINAL_88.addFollower(TERMINAL_38);
    		TERMINAL_88.addFollower(TERMINAL_39);
    		TERMINAL_88.addFollower(TERMINAL_40);
    		TERMINAL_88.addFollower(TERMINAL_41);
    		TERMINAL_88.addFollower(TERMINAL_42);
    		TERMINAL_88.addFollower(TERMINAL_43);
    		TERMINAL_88.addFollower(TERMINAL_44);
    		TERMINAL_88.addFollower(TERMINAL_45);
    		TERMINAL_88.addFollower(TERMINAL_46);
    		TERMINAL_88.addFollower(TERMINAL_47);
    		TERMINAL_88.addFollower(TERMINAL_48);
    		TERMINAL_88.addFollower(TERMINAL_49);
    		TERMINAL_88.addFollower(TERMINAL_50);
    		TERMINAL_88.addFollower(TERMINAL_51);
    		TERMINAL_88.addFollower(TERMINAL_52);
    		TERMINAL_88.addFollower(TERMINAL_53);
    		TERMINAL_88.addFollower(TERMINAL_54);
    		TERMINAL_88.addFollower(TERMINAL_133);
    		TERMINAL_88.addFollower(TERMINAL_137);
    		TERMINAL_88.addFollower(TERMINAL_141);
    		TERMINAL_88.addFollower(TERMINAL_145);
    		TERMINAL_88.addFollower(TERMINAL_149);
    		TERMINAL_88.addFollower(TERMINAL_153);
    		TERMINAL_88.addFollower(TERMINAL_3);
    		TERMINAL_88.addFollower(TERMINAL_5);
    		TERMINAL_88.addFollower(TERMINAL_6);
    		TERMINAL_88.addFollower(TERMINAL_56);
    		TERMINAL_88.addFollower(TERMINAL_57);
    		TERMINAL_88.addFollower(TERMINAL_58);
    		TERMINAL_88.addFollower(TERMINAL_59);
    		TERMINAL_88.addFollower(TERMINAL_60);
    		TERMINAL_88.addFollower(TERMINAL_61);
    		TERMINAL_88.addFollower(TERMINAL_62);
    		TERMINAL_88.addFollower(TERMINAL_63);
    		TERMINAL_88.addFollower(TERMINAL_64);
    		TERMINAL_88.addFollower(TERMINAL_65);
    		TERMINAL_88.addFollower(TERMINAL_66);
    		TERMINAL_88.addFollower(TERMINAL_67);
    		TERMINAL_88.addFollower(TERMINAL_68);
    		TERMINAL_88.addFollower(TERMINAL_69);
    		TERMINAL_88.addFollower(TERMINAL_70);
    		TERMINAL_88.addFollower(TERMINAL_71);
    		TERMINAL_88.addFollower(TERMINAL_72);
    		TERMINAL_88.addFollower(TERMINAL_111);
    		TERMINAL_88.addFollower(TERMINAL_169);
    		TERMINAL_88.addFollower(TERMINAL_156);
    		TERMINAL_88.addFollower(TERMINAL_170);
    		TERMINAL_88.addFollower(TERMINAL_171);
    		TERMINAL_88.addFollower(TERMINAL_172);
    		TERMINAL_83.addFollower(TERMINAL_3);
    		TERMINAL_83.addFollower(TERMINAL_5);
    		TERMINAL_83.addFollower(TERMINAL_6);
    		TERMINAL_83.addFollower(TERMINAL_83);
    		TERMINAL_83.addFollower(TERMINAL_89);
    		TERMINAL_83.addFollower(TERMINAL_88);
    		TERMINAL_83.addFollower(TERMINAL_123);
    		TERMINAL_83.addFollower(TERMINAL_158);
    		TERMINAL_83.addFollower(TERMINAL_160);
    		TERMINAL_83.addFollower(TERMINAL_84);
    		TERMINAL_89.addFollower(TERMINAL_173);
    		TERMINAL_89.addFollower(TERMINAL_174);
    		TERMINAL_89.addFollower(TERMINAL_87);
    		TERMINAL_89.addFollower(TERMINAL_88);
    		TERMINAL_89.addFollower(TERMINAL_89);
    		TERMINAL_89.addFollower(TERMINAL_90);
    		TERMINAL_89.addFollower(TERMINAL_3);
    		TERMINAL_89.addFollower(TERMINAL_5);
    		TERMINAL_89.addFollower(TERMINAL_6);
    		TERMINAL_89.addFollower(TERMINAL_91);
    		TERMINAL_89.addFollower(TERMINAL_92);
    		TERMINAL_89.addFollower(TERMINAL_93);
    		TERMINAL_89.addFollower(TERMINAL_94);
    		TERMINAL_89.addFollower(TERMINAL_95);
    		TERMINAL_89.addFollower(TERMINAL_96);
    		TERMINAL_89.addFollower(TERMINAL_84);
    		TERMINAL_89.addFollower(TERMINAL_97);
    		TERMINAL_173.addFollower(TERMINAL_3);
    		TERMINAL_173.addFollower(TERMINAL_5);
    		TERMINAL_173.addFollower(TERMINAL_6);
    		TERMINAL_174.addFollower(TERMINAL_87);
    		TERMINAL_174.addFollower(TERMINAL_88);
    		TERMINAL_174.addFollower(TERMINAL_89);
    		TERMINAL_174.addFollower(TERMINAL_90);
    		TERMINAL_174.addFollower(TERMINAL_3);
    		TERMINAL_174.addFollower(TERMINAL_5);
    		TERMINAL_174.addFollower(TERMINAL_6);
    		TERMINAL_174.addFollower(TERMINAL_91);
    		TERMINAL_174.addFollower(TERMINAL_92);
    		TERMINAL_174.addFollower(TERMINAL_93);
    		TERMINAL_174.addFollower(TERMINAL_94);
    		TERMINAL_174.addFollower(TERMINAL_95);
    		TERMINAL_174.addFollower(TERMINAL_96);
    		TERMINAL_174.addFollower(TERMINAL_84);
    		TERMINAL_174.addFollower(TERMINAL_97);
    		TERMINAL_111.addFollower(TERMINAL_175);
    		TERMINAL_175.addFollower(TERMINAL_3);
    		TERMINAL_175.addFollower(TERMINAL_5);
    		TERMINAL_175.addFollower(TERMINAL_6);
    		TERMINAL_109.addFollower(TERMINAL_3);
    		TERMINAL_109.addFollower(TERMINAL_5);
    		TERMINAL_109.addFollower(TERMINAL_6);
    		TERMINAL_109.addFollower(TERMINAL_56);
    		TERMINAL_109.addFollower(TERMINAL_57);
    		TERMINAL_109.addFollower(TERMINAL_58);
    		TERMINAL_109.addFollower(TERMINAL_59);
    		TERMINAL_109.addFollower(TERMINAL_60);
    		TERMINAL_109.addFollower(TERMINAL_61);
    		TERMINAL_109.addFollower(TERMINAL_62);
    		TERMINAL_109.addFollower(TERMINAL_63);
    		TERMINAL_109.addFollower(TERMINAL_64);
    		TERMINAL_109.addFollower(TERMINAL_65);
    		TERMINAL_109.addFollower(TERMINAL_66);
    		TERMINAL_109.addFollower(TERMINAL_67);
    		TERMINAL_109.addFollower(TERMINAL_68);
    		TERMINAL_109.addFollower(TERMINAL_69);
    		TERMINAL_109.addFollower(TERMINAL_70);
    		TERMINAL_109.addFollower(TERMINAL_71);
    		TERMINAL_109.addFollower(TERMINAL_72);
    		TERMINAL_109.addFollower(TERMINAL_83);
    		TERMINAL_109.addFollower(TERMINAL_110);
    		TERMINAL_109.addFollower(TERMINAL_76);
    		TERMINAL_109.addFollower(TERMINAL_77);
    		TERMINAL_109.addFollower(TERMINAL_78);
    		TERMINAL_109.addFollower(TERMINAL_111);
    		TERMINAL_109.addFollower(TERMINAL_112);
    		TERMINAL_109.addFollower(TERMINAL_113);
    		TERMINAL_109.addFollower(TERMINAL_114);
    		TERMINAL_109.addFollower(TERMINAL_115);
    		TERMINAL_109.addFollower(TERMINAL_116);
    		TERMINAL_109.addFollower(TERMINAL_117);
    		TERMINAL_109.addFollower(TERMINAL_118);
    		TERMINAL_109.addFollower(TERMINAL_156);
    		TERMINAL_109.addFollower(TERMINAL_84);
    		TERMINAL_105.addFollower(TERMINAL_176);
    		TERMINAL_176.addFollower(TERMINAL_3);
    		TERMINAL_176.addFollower(TERMINAL_5);
    		TERMINAL_176.addFollower(TERMINAL_6);
    		TERMINAL_176.addFollower(TERMINAL_105);
    		TERMINAL_176.addFollower(TERMINAL_106);
    		TERMINAL_176.addFollower(TERMINAL_107);
    		TERMINAL_98.addFollower(TERMINAL_98);
    		TERMINAL_98.addFollower(TERMINAL_99);
    		TERMINAL_98.addFollower(TERMINAL_100);
    		TERMINAL_98.addFollower(TERMINAL_101);
    		TERMINAL_98.addFollower(TERMINAL_102);
    		TERMINAL_98.addFollower(TERMINAL_103);
    		TERMINAL_98.addFollower(TERMINAL_104);
    		TERMINAL_98.addFollower(TERMINAL_177);
    		TERMINAL_98.addFollower(TERMINAL_89);
    		TERMINAL_98.addFollower(TERMINAL_84);
    		TERMINAL_106.addFollower(TERMINAL_178);
    		TERMINAL_178.addFollower(TERMINAL_89);
    		TERMINAL_90.addFollower(TERMINAL_98);
    		TERMINAL_90.addFollower(TERMINAL_99);
    		TERMINAL_90.addFollower(TERMINAL_100);
    		TERMINAL_90.addFollower(TERMINAL_101);
    		TERMINAL_90.addFollower(TERMINAL_102);
    		TERMINAL_90.addFollower(TERMINAL_103);
    		TERMINAL_90.addFollower(TERMINAL_104);
    		TERMINAL_90.addFollower(TERMINAL_177);
    		TERMINAL_90.addFollower(TERMINAL_89);
    		TERMINAL_90.addFollower(TERMINAL_84);
    		TERMINAL_107.addFollower(TERMINAL_179);
    		TERMINAL_179.addFollower(TERMINAL_3);
    		TERMINAL_179.addFollower(TERMINAL_5);
    		TERMINAL_179.addFollower(TERMINAL_6);
    		TERMINAL_91.addFollower(TERMINAL_98);
    		TERMINAL_91.addFollower(TERMINAL_99);
    		TERMINAL_91.addFollower(TERMINAL_100);
    		TERMINAL_91.addFollower(TERMINAL_101);
    		TERMINAL_91.addFollower(TERMINAL_102);
    		TERMINAL_91.addFollower(TERMINAL_103);
    		TERMINAL_91.addFollower(TERMINAL_104);
    		TERMINAL_91.addFollower(TERMINAL_177);
    		TERMINAL_91.addFollower(TERMINAL_89);
    		TERMINAL_91.addFollower(TERMINAL_84);
    		TERMINAL_56.addFollower(TERMINAL_180);
    		TERMINAL_180.addFollower(TERMINAL_3);
    		TERMINAL_180.addFollower(TERMINAL_5);
    		TERMINAL_180.addFollower(TERMINAL_6);
    		TERMINAL_180.addFollower(TERMINAL_56);
    		TERMINAL_180.addFollower(TERMINAL_57);
    		TERMINAL_180.addFollower(TERMINAL_58);
    		TERMINAL_180.addFollower(TERMINAL_59);
    		TERMINAL_180.addFollower(TERMINAL_60);
    		TERMINAL_180.addFollower(TERMINAL_61);
    		TERMINAL_180.addFollower(TERMINAL_62);
    		TERMINAL_180.addFollower(TERMINAL_63);
    		TERMINAL_180.addFollower(TERMINAL_64);
    		TERMINAL_180.addFollower(TERMINAL_65);
    		TERMINAL_180.addFollower(TERMINAL_66);
    		TERMINAL_180.addFollower(TERMINAL_67);
    		TERMINAL_180.addFollower(TERMINAL_68);
    		TERMINAL_180.addFollower(TERMINAL_69);
    		TERMINAL_180.addFollower(TERMINAL_70);
    		TERMINAL_180.addFollower(TERMINAL_71);
    		TERMINAL_180.addFollower(TERMINAL_72);
    		TERMINAL_181.addFollower(TERMINAL_3);
    		TERMINAL_181.addFollower(TERMINAL_5);
    		TERMINAL_181.addFollower(TERMINAL_6);
    		TERMINAL_181.addFollower(TERMINAL_56);
    		TERMINAL_181.addFollower(TERMINAL_57);
    		TERMINAL_181.addFollower(TERMINAL_58);
    		TERMINAL_181.addFollower(TERMINAL_59);
    		TERMINAL_181.addFollower(TERMINAL_60);
    		TERMINAL_181.addFollower(TERMINAL_61);
    		TERMINAL_181.addFollower(TERMINAL_62);
    		TERMINAL_181.addFollower(TERMINAL_63);
    		TERMINAL_181.addFollower(TERMINAL_64);
    		TERMINAL_181.addFollower(TERMINAL_65);
    		TERMINAL_181.addFollower(TERMINAL_66);
    		TERMINAL_181.addFollower(TERMINAL_67);
    		TERMINAL_181.addFollower(TERMINAL_68);
    		TERMINAL_181.addFollower(TERMINAL_69);
    		TERMINAL_181.addFollower(TERMINAL_70);
    		TERMINAL_181.addFollower(TERMINAL_71);
    		TERMINAL_181.addFollower(TERMINAL_72);
    		TERMINAL_181.addFollower(TERMINAL_73);
    		TERMINAL_181.addFollower(TERMINAL_74);
    		TERMINAL_181.addFollower(TERMINAL_75);
    		TERMINAL_181.addFollower(TERMINAL_76);
    		TERMINAL_181.addFollower(TERMINAL_77);
    		TERMINAL_181.addFollower(TERMINAL_78);
    		TERMINAL_181.addFollower(TERMINAL_79);
    		TERMINAL_181.addFollower(TERMINAL_80);
    		TERMINAL_181.addFollower(TERMINAL_81);
    		TERMINAL_181.addFollower(TERMINAL_82);
    		TERMINAL_181.addFollower(TERMINAL_83);
    		TERMINAL_181.addFollower(TERMINAL_84);
    		TERMINAL_57.addFollower(TERMINAL_182);
    		TERMINAL_182.addFollower(TERMINAL_3);
    		TERMINAL_182.addFollower(TERMINAL_5);
    		TERMINAL_182.addFollower(TERMINAL_6);
    		TERMINAL_182.addFollower(TERMINAL_56);
    		TERMINAL_182.addFollower(TERMINAL_57);
    		TERMINAL_182.addFollower(TERMINAL_58);
    		TERMINAL_182.addFollower(TERMINAL_59);
    		TERMINAL_182.addFollower(TERMINAL_60);
    		TERMINAL_182.addFollower(TERMINAL_61);
    		TERMINAL_182.addFollower(TERMINAL_62);
    		TERMINAL_182.addFollower(TERMINAL_63);
    		TERMINAL_182.addFollower(TERMINAL_64);
    		TERMINAL_182.addFollower(TERMINAL_65);
    		TERMINAL_182.addFollower(TERMINAL_66);
    		TERMINAL_182.addFollower(TERMINAL_67);
    		TERMINAL_182.addFollower(TERMINAL_68);
    		TERMINAL_182.addFollower(TERMINAL_69);
    		TERMINAL_182.addFollower(TERMINAL_70);
    		TERMINAL_182.addFollower(TERMINAL_71);
    		TERMINAL_182.addFollower(TERMINAL_72);
    		TERMINAL_183.addFollower(TERMINAL_3);
    		TERMINAL_183.addFollower(TERMINAL_5);
    		TERMINAL_183.addFollower(TERMINAL_6);
    		TERMINAL_183.addFollower(TERMINAL_56);
    		TERMINAL_183.addFollower(TERMINAL_57);
    		TERMINAL_183.addFollower(TERMINAL_58);
    		TERMINAL_183.addFollower(TERMINAL_59);
    		TERMINAL_183.addFollower(TERMINAL_60);
    		TERMINAL_183.addFollower(TERMINAL_61);
    		TERMINAL_183.addFollower(TERMINAL_62);
    		TERMINAL_183.addFollower(TERMINAL_63);
    		TERMINAL_183.addFollower(TERMINAL_64);
    		TERMINAL_183.addFollower(TERMINAL_65);
    		TERMINAL_183.addFollower(TERMINAL_66);
    		TERMINAL_183.addFollower(TERMINAL_67);
    		TERMINAL_183.addFollower(TERMINAL_68);
    		TERMINAL_183.addFollower(TERMINAL_69);
    		TERMINAL_183.addFollower(TERMINAL_70);
    		TERMINAL_183.addFollower(TERMINAL_71);
    		TERMINAL_183.addFollower(TERMINAL_72);
    		TERMINAL_183.addFollower(TERMINAL_73);
    		TERMINAL_183.addFollower(TERMINAL_74);
    		TERMINAL_183.addFollower(TERMINAL_75);
    		TERMINAL_183.addFollower(TERMINAL_76);
    		TERMINAL_183.addFollower(TERMINAL_77);
    		TERMINAL_183.addFollower(TERMINAL_78);
    		TERMINAL_183.addFollower(TERMINAL_79);
    		TERMINAL_183.addFollower(TERMINAL_80);
    		TERMINAL_183.addFollower(TERMINAL_81);
    		TERMINAL_183.addFollower(TERMINAL_82);
    		TERMINAL_183.addFollower(TERMINAL_83);
    		TERMINAL_183.addFollower(TERMINAL_84);
    		TERMINAL_58.addFollower(TERMINAL_184);
    		TERMINAL_184.addFollower(TERMINAL_3);
    		TERMINAL_184.addFollower(TERMINAL_5);
    		TERMINAL_184.addFollower(TERMINAL_6);
    		TERMINAL_184.addFollower(TERMINAL_56);
    		TERMINAL_184.addFollower(TERMINAL_57);
    		TERMINAL_184.addFollower(TERMINAL_58);
    		TERMINAL_184.addFollower(TERMINAL_59);
    		TERMINAL_184.addFollower(TERMINAL_60);
    		TERMINAL_184.addFollower(TERMINAL_61);
    		TERMINAL_184.addFollower(TERMINAL_62);
    		TERMINAL_184.addFollower(TERMINAL_63);
    		TERMINAL_184.addFollower(TERMINAL_64);
    		TERMINAL_184.addFollower(TERMINAL_65);
    		TERMINAL_184.addFollower(TERMINAL_66);
    		TERMINAL_184.addFollower(TERMINAL_67);
    		TERMINAL_184.addFollower(TERMINAL_68);
    		TERMINAL_184.addFollower(TERMINAL_69);
    		TERMINAL_184.addFollower(TERMINAL_70);
    		TERMINAL_184.addFollower(TERMINAL_71);
    		TERMINAL_184.addFollower(TERMINAL_72);
    		TERMINAL_73.addFollower(TERMINAL_3);
    		TERMINAL_73.addFollower(TERMINAL_5);
    		TERMINAL_73.addFollower(TERMINAL_6);
    		TERMINAL_73.addFollower(TERMINAL_56);
    		TERMINAL_73.addFollower(TERMINAL_57);
    		TERMINAL_73.addFollower(TERMINAL_58);
    		TERMINAL_73.addFollower(TERMINAL_59);
    		TERMINAL_73.addFollower(TERMINAL_60);
    		TERMINAL_73.addFollower(TERMINAL_61);
    		TERMINAL_73.addFollower(TERMINAL_62);
    		TERMINAL_73.addFollower(TERMINAL_63);
    		TERMINAL_73.addFollower(TERMINAL_64);
    		TERMINAL_73.addFollower(TERMINAL_65);
    		TERMINAL_73.addFollower(TERMINAL_66);
    		TERMINAL_73.addFollower(TERMINAL_67);
    		TERMINAL_73.addFollower(TERMINAL_68);
    		TERMINAL_73.addFollower(TERMINAL_69);
    		TERMINAL_73.addFollower(TERMINAL_70);
    		TERMINAL_73.addFollower(TERMINAL_71);
    		TERMINAL_73.addFollower(TERMINAL_72);
    		TERMINAL_73.addFollower(TERMINAL_73);
    		TERMINAL_73.addFollower(TERMINAL_74);
    		TERMINAL_73.addFollower(TERMINAL_75);
    		TERMINAL_73.addFollower(TERMINAL_76);
    		TERMINAL_73.addFollower(TERMINAL_77);
    		TERMINAL_73.addFollower(TERMINAL_78);
    		TERMINAL_73.addFollower(TERMINAL_79);
    		TERMINAL_73.addFollower(TERMINAL_80);
    		TERMINAL_73.addFollower(TERMINAL_81);
    		TERMINAL_73.addFollower(TERMINAL_82);
    		TERMINAL_73.addFollower(TERMINAL_83);
    		TERMINAL_73.addFollower(TERMINAL_84);
    		TERMINAL_59.addFollower(TERMINAL_185);
    		TERMINAL_185.addFollower(TERMINAL_3);
    		TERMINAL_185.addFollower(TERMINAL_5);
    		TERMINAL_185.addFollower(TERMINAL_6);
    		TERMINAL_185.addFollower(TERMINAL_83);
    		TERMINAL_123.addFollower(TERMINAL_3);
    		TERMINAL_123.addFollower(TERMINAL_5);
    		TERMINAL_123.addFollower(TERMINAL_6);
    		TERMINAL_123.addFollower(TERMINAL_56);
    		TERMINAL_123.addFollower(TERMINAL_57);
    		TERMINAL_123.addFollower(TERMINAL_58);
    		TERMINAL_123.addFollower(TERMINAL_59);
    		TERMINAL_123.addFollower(TERMINAL_60);
    		TERMINAL_123.addFollower(TERMINAL_61);
    		TERMINAL_123.addFollower(TERMINAL_62);
    		TERMINAL_123.addFollower(TERMINAL_63);
    		TERMINAL_123.addFollower(TERMINAL_64);
    		TERMINAL_123.addFollower(TERMINAL_65);
    		TERMINAL_123.addFollower(TERMINAL_66);
    		TERMINAL_123.addFollower(TERMINAL_67);
    		TERMINAL_123.addFollower(TERMINAL_68);
    		TERMINAL_123.addFollower(TERMINAL_69);
    		TERMINAL_123.addFollower(TERMINAL_70);
    		TERMINAL_123.addFollower(TERMINAL_71);
    		TERMINAL_123.addFollower(TERMINAL_72);
    		TERMINAL_123.addFollower(TERMINAL_73);
    		TERMINAL_123.addFollower(TERMINAL_74);
    		TERMINAL_123.addFollower(TERMINAL_75);
    		TERMINAL_123.addFollower(TERMINAL_76);
    		TERMINAL_123.addFollower(TERMINAL_77);
    		TERMINAL_123.addFollower(TERMINAL_78);
    		TERMINAL_123.addFollower(TERMINAL_79);
    		TERMINAL_123.addFollower(TERMINAL_80);
    		TERMINAL_123.addFollower(TERMINAL_81);
    		TERMINAL_123.addFollower(TERMINAL_82);
    		TERMINAL_123.addFollower(TERMINAL_83);
    		TERMINAL_123.addFollower(TERMINAL_84);
    		TERMINAL_60.addFollower(TERMINAL_186);
    		TERMINAL_186.addFollower(TERMINAL_3);
    		TERMINAL_186.addFollower(TERMINAL_5);
    		TERMINAL_186.addFollower(TERMINAL_6);
    		TERMINAL_186.addFollower(TERMINAL_111);
    		TERMINAL_74.addFollower(TERMINAL_3);
    		TERMINAL_74.addFollower(TERMINAL_5);
    		TERMINAL_74.addFollower(TERMINAL_6);
    		TERMINAL_74.addFollower(TERMINAL_56);
    		TERMINAL_74.addFollower(TERMINAL_57);
    		TERMINAL_74.addFollower(TERMINAL_58);
    		TERMINAL_74.addFollower(TERMINAL_59);
    		TERMINAL_74.addFollower(TERMINAL_60);
    		TERMINAL_74.addFollower(TERMINAL_61);
    		TERMINAL_74.addFollower(TERMINAL_62);
    		TERMINAL_74.addFollower(TERMINAL_63);
    		TERMINAL_74.addFollower(TERMINAL_64);
    		TERMINAL_74.addFollower(TERMINAL_65);
    		TERMINAL_74.addFollower(TERMINAL_66);
    		TERMINAL_74.addFollower(TERMINAL_67);
    		TERMINAL_74.addFollower(TERMINAL_68);
    		TERMINAL_74.addFollower(TERMINAL_69);
    		TERMINAL_74.addFollower(TERMINAL_70);
    		TERMINAL_74.addFollower(TERMINAL_71);
    		TERMINAL_74.addFollower(TERMINAL_72);
    		TERMINAL_74.addFollower(TERMINAL_73);
    		TERMINAL_74.addFollower(TERMINAL_74);
    		TERMINAL_74.addFollower(TERMINAL_75);
    		TERMINAL_74.addFollower(TERMINAL_76);
    		TERMINAL_74.addFollower(TERMINAL_77);
    		TERMINAL_74.addFollower(TERMINAL_78);
    		TERMINAL_74.addFollower(TERMINAL_79);
    		TERMINAL_74.addFollower(TERMINAL_80);
    		TERMINAL_74.addFollower(TERMINAL_81);
    		TERMINAL_74.addFollower(TERMINAL_82);
    		TERMINAL_74.addFollower(TERMINAL_83);
    		TERMINAL_74.addFollower(TERMINAL_84);
    		TERMINAL_61.addFollower(TERMINAL_187);
    		TERMINAL_187.addFollower(TERMINAL_3);
    		TERMINAL_187.addFollower(TERMINAL_5);
    		TERMINAL_187.addFollower(TERMINAL_6);
    		TERMINAL_187.addFollower(TERMINAL_111);
    	}
    	public static void wire1() {
    		TERMINAL_75.addFollower(TERMINAL_3);
    		TERMINAL_75.addFollower(TERMINAL_5);
    		TERMINAL_75.addFollower(TERMINAL_6);
    		TERMINAL_75.addFollower(TERMINAL_56);
    		TERMINAL_75.addFollower(TERMINAL_57);
    		TERMINAL_75.addFollower(TERMINAL_58);
    		TERMINAL_75.addFollower(TERMINAL_59);
    		TERMINAL_75.addFollower(TERMINAL_60);
    		TERMINAL_75.addFollower(TERMINAL_61);
    		TERMINAL_75.addFollower(TERMINAL_62);
    		TERMINAL_75.addFollower(TERMINAL_63);
    		TERMINAL_75.addFollower(TERMINAL_64);
    		TERMINAL_75.addFollower(TERMINAL_65);
    		TERMINAL_75.addFollower(TERMINAL_66);
    		TERMINAL_75.addFollower(TERMINAL_67);
    		TERMINAL_75.addFollower(TERMINAL_68);
    		TERMINAL_75.addFollower(TERMINAL_69);
    		TERMINAL_75.addFollower(TERMINAL_70);
    		TERMINAL_75.addFollower(TERMINAL_71);
    		TERMINAL_75.addFollower(TERMINAL_72);
    		TERMINAL_75.addFollower(TERMINAL_73);
    		TERMINAL_75.addFollower(TERMINAL_74);
    		TERMINAL_75.addFollower(TERMINAL_75);
    		TERMINAL_75.addFollower(TERMINAL_76);
    		TERMINAL_75.addFollower(TERMINAL_77);
    		TERMINAL_75.addFollower(TERMINAL_78);
    		TERMINAL_75.addFollower(TERMINAL_79);
    		TERMINAL_75.addFollower(TERMINAL_80);
    		TERMINAL_75.addFollower(TERMINAL_81);
    		TERMINAL_75.addFollower(TERMINAL_82);
    		TERMINAL_75.addFollower(TERMINAL_83);
    		TERMINAL_75.addFollower(TERMINAL_84);
    		TERMINAL_62.addFollower(TERMINAL_188);
    		TERMINAL_188.addFollower(TERMINAL_3);
    		TERMINAL_188.addFollower(TERMINAL_5);
    		TERMINAL_188.addFollower(TERMINAL_6);
    		TERMINAL_188.addFollower(TERMINAL_111);
    		TERMINAL_158.addFollower(TERMINAL_3);
    		TERMINAL_158.addFollower(TERMINAL_5);
    		TERMINAL_158.addFollower(TERMINAL_6);
    		TERMINAL_158.addFollower(TERMINAL_56);
    		TERMINAL_158.addFollower(TERMINAL_57);
    		TERMINAL_158.addFollower(TERMINAL_58);
    		TERMINAL_158.addFollower(TERMINAL_59);
    		TERMINAL_158.addFollower(TERMINAL_60);
    		TERMINAL_158.addFollower(TERMINAL_61);
    		TERMINAL_158.addFollower(TERMINAL_62);
    		TERMINAL_158.addFollower(TERMINAL_63);
    		TERMINAL_158.addFollower(TERMINAL_64);
    		TERMINAL_158.addFollower(TERMINAL_65);
    		TERMINAL_158.addFollower(TERMINAL_66);
    		TERMINAL_158.addFollower(TERMINAL_67);
    		TERMINAL_158.addFollower(TERMINAL_68);
    		TERMINAL_158.addFollower(TERMINAL_69);
    		TERMINAL_158.addFollower(TERMINAL_70);
    		TERMINAL_158.addFollower(TERMINAL_71);
    		TERMINAL_158.addFollower(TERMINAL_72);
    		TERMINAL_158.addFollower(TERMINAL_73);
    		TERMINAL_158.addFollower(TERMINAL_74);
    		TERMINAL_158.addFollower(TERMINAL_75);
    		TERMINAL_158.addFollower(TERMINAL_76);
    		TERMINAL_158.addFollower(TERMINAL_77);
    		TERMINAL_158.addFollower(TERMINAL_78);
    		TERMINAL_158.addFollower(TERMINAL_79);
    		TERMINAL_158.addFollower(TERMINAL_80);
    		TERMINAL_158.addFollower(TERMINAL_81);
    		TERMINAL_158.addFollower(TERMINAL_82);
    		TERMINAL_158.addFollower(TERMINAL_83);
    		TERMINAL_158.addFollower(TERMINAL_84);
    		TERMINAL_63.addFollower(TERMINAL_189);
    		TERMINAL_189.addFollower(TERMINAL_3);
    		TERMINAL_189.addFollower(TERMINAL_5);
    		TERMINAL_189.addFollower(TERMINAL_6);
    		TERMINAL_189.addFollower(TERMINAL_111);
    		TERMINAL_110.addFollower(TERMINAL_3);
    		TERMINAL_110.addFollower(TERMINAL_5);
    		TERMINAL_110.addFollower(TERMINAL_6);
    		TERMINAL_110.addFollower(TERMINAL_56);
    		TERMINAL_110.addFollower(TERMINAL_57);
    		TERMINAL_110.addFollower(TERMINAL_58);
    		TERMINAL_110.addFollower(TERMINAL_59);
    		TERMINAL_110.addFollower(TERMINAL_60);
    		TERMINAL_110.addFollower(TERMINAL_61);
    		TERMINAL_110.addFollower(TERMINAL_62);
    		TERMINAL_110.addFollower(TERMINAL_63);
    		TERMINAL_110.addFollower(TERMINAL_64);
    		TERMINAL_110.addFollower(TERMINAL_65);
    		TERMINAL_110.addFollower(TERMINAL_66);
    		TERMINAL_110.addFollower(TERMINAL_67);
    		TERMINAL_110.addFollower(TERMINAL_68);
    		TERMINAL_110.addFollower(TERMINAL_69);
    		TERMINAL_110.addFollower(TERMINAL_70);
    		TERMINAL_110.addFollower(TERMINAL_71);
    		TERMINAL_110.addFollower(TERMINAL_72);
    		TERMINAL_110.addFollower(TERMINAL_73);
    		TERMINAL_110.addFollower(TERMINAL_74);
    		TERMINAL_110.addFollower(TERMINAL_75);
    		TERMINAL_110.addFollower(TERMINAL_76);
    		TERMINAL_110.addFollower(TERMINAL_77);
    		TERMINAL_110.addFollower(TERMINAL_78);
    		TERMINAL_110.addFollower(TERMINAL_79);
    		TERMINAL_110.addFollower(TERMINAL_80);
    		TERMINAL_110.addFollower(TERMINAL_81);
    		TERMINAL_110.addFollower(TERMINAL_82);
    		TERMINAL_110.addFollower(TERMINAL_83);
    		TERMINAL_110.addFollower(TERMINAL_84);
    		TERMINAL_64.addFollower(TERMINAL_190);
    		TERMINAL_190.addFollower(TERMINAL_191);
    		TERMINAL_191.addFollower(TERMINAL_3);
    		TERMINAL_191.addFollower(TERMINAL_5);
    		TERMINAL_191.addFollower(TERMINAL_6);
    		TERMINAL_191.addFollower(TERMINAL_111);
    		TERMINAL_76.addFollower(TERMINAL_3);
    		TERMINAL_76.addFollower(TERMINAL_5);
    		TERMINAL_76.addFollower(TERMINAL_6);
    		TERMINAL_76.addFollower(TERMINAL_56);
    		TERMINAL_76.addFollower(TERMINAL_57);
    		TERMINAL_76.addFollower(TERMINAL_58);
    		TERMINAL_76.addFollower(TERMINAL_59);
    		TERMINAL_76.addFollower(TERMINAL_60);
    		TERMINAL_76.addFollower(TERMINAL_61);
    		TERMINAL_76.addFollower(TERMINAL_62);
    		TERMINAL_76.addFollower(TERMINAL_63);
    		TERMINAL_76.addFollower(TERMINAL_64);
    		TERMINAL_76.addFollower(TERMINAL_65);
    		TERMINAL_76.addFollower(TERMINAL_66);
    		TERMINAL_76.addFollower(TERMINAL_67);
    		TERMINAL_76.addFollower(TERMINAL_68);
    		TERMINAL_76.addFollower(TERMINAL_69);
    		TERMINAL_76.addFollower(TERMINAL_70);
    		TERMINAL_76.addFollower(TERMINAL_71);
    		TERMINAL_76.addFollower(TERMINAL_72);
    		TERMINAL_76.addFollower(TERMINAL_73);
    		TERMINAL_76.addFollower(TERMINAL_74);
    		TERMINAL_76.addFollower(TERMINAL_75);
    		TERMINAL_76.addFollower(TERMINAL_76);
    		TERMINAL_76.addFollower(TERMINAL_77);
    		TERMINAL_76.addFollower(TERMINAL_78);
    		TERMINAL_76.addFollower(TERMINAL_79);
    		TERMINAL_76.addFollower(TERMINAL_80);
    		TERMINAL_76.addFollower(TERMINAL_81);
    		TERMINAL_76.addFollower(TERMINAL_82);
    		TERMINAL_76.addFollower(TERMINAL_83);
    		TERMINAL_76.addFollower(TERMINAL_84);
    		TERMINAL_65.addFollower(TERMINAL_192);
    		TERMINAL_192.addFollower(TERMINAL_193);
    		TERMINAL_193.addFollower(TERMINAL_3);
    		TERMINAL_193.addFollower(TERMINAL_5);
    		TERMINAL_193.addFollower(TERMINAL_6);
    		TERMINAL_193.addFollower(TERMINAL_111);
    		TERMINAL_77.addFollower(TERMINAL_3);
    		TERMINAL_77.addFollower(TERMINAL_5);
    		TERMINAL_77.addFollower(TERMINAL_6);
    		TERMINAL_77.addFollower(TERMINAL_56);
    		TERMINAL_77.addFollower(TERMINAL_57);
    		TERMINAL_77.addFollower(TERMINAL_58);
    		TERMINAL_77.addFollower(TERMINAL_59);
    		TERMINAL_77.addFollower(TERMINAL_60);
    		TERMINAL_77.addFollower(TERMINAL_61);
    		TERMINAL_77.addFollower(TERMINAL_62);
    		TERMINAL_77.addFollower(TERMINAL_63);
    		TERMINAL_77.addFollower(TERMINAL_64);
    		TERMINAL_77.addFollower(TERMINAL_65);
    		TERMINAL_77.addFollower(TERMINAL_66);
    		TERMINAL_77.addFollower(TERMINAL_67);
    		TERMINAL_77.addFollower(TERMINAL_68);
    		TERMINAL_77.addFollower(TERMINAL_69);
    		TERMINAL_77.addFollower(TERMINAL_70);
    		TERMINAL_77.addFollower(TERMINAL_71);
    		TERMINAL_77.addFollower(TERMINAL_72);
    		TERMINAL_77.addFollower(TERMINAL_73);
    		TERMINAL_77.addFollower(TERMINAL_74);
    		TERMINAL_77.addFollower(TERMINAL_75);
    		TERMINAL_77.addFollower(TERMINAL_76);
    		TERMINAL_77.addFollower(TERMINAL_77);
    		TERMINAL_77.addFollower(TERMINAL_78);
    		TERMINAL_77.addFollower(TERMINAL_79);
    		TERMINAL_77.addFollower(TERMINAL_80);
    		TERMINAL_77.addFollower(TERMINAL_81);
    		TERMINAL_77.addFollower(TERMINAL_82);
    		TERMINAL_77.addFollower(TERMINAL_83);
    		TERMINAL_77.addFollower(TERMINAL_84);
    		TERMINAL_66.addFollower(TERMINAL_194);
    		TERMINAL_194.addFollower(TERMINAL_195);
    		TERMINAL_195.addFollower(TERMINAL_3);
    		TERMINAL_195.addFollower(TERMINAL_5);
    		TERMINAL_195.addFollower(TERMINAL_6);
    		TERMINAL_195.addFollower(TERMINAL_111);
    		TERMINAL_78.addFollower(TERMINAL_3);
    		TERMINAL_78.addFollower(TERMINAL_5);
    		TERMINAL_78.addFollower(TERMINAL_6);
    		TERMINAL_78.addFollower(TERMINAL_56);
    		TERMINAL_78.addFollower(TERMINAL_57);
    		TERMINAL_78.addFollower(TERMINAL_58);
    		TERMINAL_78.addFollower(TERMINAL_59);
    		TERMINAL_78.addFollower(TERMINAL_60);
    		TERMINAL_78.addFollower(TERMINAL_61);
    		TERMINAL_78.addFollower(TERMINAL_62);
    		TERMINAL_78.addFollower(TERMINAL_63);
    		TERMINAL_78.addFollower(TERMINAL_64);
    		TERMINAL_78.addFollower(TERMINAL_65);
    		TERMINAL_78.addFollower(TERMINAL_66);
    		TERMINAL_78.addFollower(TERMINAL_67);
    		TERMINAL_78.addFollower(TERMINAL_68);
    		TERMINAL_78.addFollower(TERMINAL_69);
    		TERMINAL_78.addFollower(TERMINAL_70);
    		TERMINAL_78.addFollower(TERMINAL_71);
    		TERMINAL_78.addFollower(TERMINAL_72);
    		TERMINAL_78.addFollower(TERMINAL_73);
    		TERMINAL_78.addFollower(TERMINAL_74);
    		TERMINAL_78.addFollower(TERMINAL_75);
    		TERMINAL_78.addFollower(TERMINAL_76);
    		TERMINAL_78.addFollower(TERMINAL_77);
    		TERMINAL_78.addFollower(TERMINAL_78);
    		TERMINAL_78.addFollower(TERMINAL_79);
    		TERMINAL_78.addFollower(TERMINAL_80);
    		TERMINAL_78.addFollower(TERMINAL_81);
    		TERMINAL_78.addFollower(TERMINAL_82);
    		TERMINAL_78.addFollower(TERMINAL_83);
    		TERMINAL_78.addFollower(TERMINAL_84);
    		TERMINAL_67.addFollower(TERMINAL_196);
    		TERMINAL_196.addFollower(TERMINAL_3);
    		TERMINAL_196.addFollower(TERMINAL_5);
    		TERMINAL_196.addFollower(TERMINAL_6);
    		TERMINAL_99.addFollower(TERMINAL_3);
    		TERMINAL_99.addFollower(TERMINAL_5);
    		TERMINAL_99.addFollower(TERMINAL_6);
    		TERMINAL_99.addFollower(TERMINAL_56);
    		TERMINAL_99.addFollower(TERMINAL_57);
    		TERMINAL_99.addFollower(TERMINAL_58);
    		TERMINAL_99.addFollower(TERMINAL_59);
    		TERMINAL_99.addFollower(TERMINAL_60);
    		TERMINAL_99.addFollower(TERMINAL_61);
    		TERMINAL_99.addFollower(TERMINAL_62);
    		TERMINAL_99.addFollower(TERMINAL_63);
    		TERMINAL_99.addFollower(TERMINAL_64);
    		TERMINAL_99.addFollower(TERMINAL_65);
    		TERMINAL_99.addFollower(TERMINAL_66);
    		TERMINAL_99.addFollower(TERMINAL_67);
    		TERMINAL_99.addFollower(TERMINAL_68);
    		TERMINAL_99.addFollower(TERMINAL_69);
    		TERMINAL_99.addFollower(TERMINAL_70);
    		TERMINAL_99.addFollower(TERMINAL_71);
    		TERMINAL_99.addFollower(TERMINAL_72);
    		TERMINAL_99.addFollower(TERMINAL_73);
    		TERMINAL_99.addFollower(TERMINAL_74);
    		TERMINAL_99.addFollower(TERMINAL_75);
    		TERMINAL_99.addFollower(TERMINAL_76);
    		TERMINAL_99.addFollower(TERMINAL_77);
    		TERMINAL_99.addFollower(TERMINAL_78);
    		TERMINAL_99.addFollower(TERMINAL_79);
    		TERMINAL_99.addFollower(TERMINAL_80);
    		TERMINAL_99.addFollower(TERMINAL_81);
    		TERMINAL_99.addFollower(TERMINAL_82);
    		TERMINAL_99.addFollower(TERMINAL_83);
    		TERMINAL_99.addFollower(TERMINAL_84);
    		TERMINAL_68.addFollower(TERMINAL_197);
    		TERMINAL_197.addFollower(TERMINAL_3);
    		TERMINAL_197.addFollower(TERMINAL_5);
    		TERMINAL_197.addFollower(TERMINAL_6);
    		TERMINAL_100.addFollower(TERMINAL_3);
    		TERMINAL_100.addFollower(TERMINAL_5);
    		TERMINAL_100.addFollower(TERMINAL_6);
    		TERMINAL_100.addFollower(TERMINAL_56);
    		TERMINAL_100.addFollower(TERMINAL_57);
    		TERMINAL_100.addFollower(TERMINAL_58);
    		TERMINAL_100.addFollower(TERMINAL_59);
    		TERMINAL_100.addFollower(TERMINAL_60);
    		TERMINAL_100.addFollower(TERMINAL_61);
    		TERMINAL_100.addFollower(TERMINAL_62);
    		TERMINAL_100.addFollower(TERMINAL_63);
    		TERMINAL_100.addFollower(TERMINAL_64);
    		TERMINAL_100.addFollower(TERMINAL_65);
    		TERMINAL_100.addFollower(TERMINAL_66);
    		TERMINAL_100.addFollower(TERMINAL_67);
    		TERMINAL_100.addFollower(TERMINAL_68);
    		TERMINAL_100.addFollower(TERMINAL_69);
    		TERMINAL_100.addFollower(TERMINAL_70);
    		TERMINAL_100.addFollower(TERMINAL_71);
    		TERMINAL_100.addFollower(TERMINAL_72);
    		TERMINAL_100.addFollower(TERMINAL_73);
    		TERMINAL_100.addFollower(TERMINAL_74);
    		TERMINAL_100.addFollower(TERMINAL_75);
    		TERMINAL_100.addFollower(TERMINAL_76);
    		TERMINAL_100.addFollower(TERMINAL_77);
    		TERMINAL_100.addFollower(TERMINAL_78);
    		TERMINAL_100.addFollower(TERMINAL_79);
    		TERMINAL_100.addFollower(TERMINAL_80);
    		TERMINAL_100.addFollower(TERMINAL_81);
    		TERMINAL_100.addFollower(TERMINAL_82);
    		TERMINAL_100.addFollower(TERMINAL_83);
    		TERMINAL_100.addFollower(TERMINAL_84);
    		TERMINAL_69.addFollower(TERMINAL_198);
    		TERMINAL_198.addFollower(TERMINAL_3);
    		TERMINAL_198.addFollower(TERMINAL_5);
    		TERMINAL_198.addFollower(TERMINAL_6);
    		TERMINAL_92.addFollower(TERMINAL_3);
    		TERMINAL_92.addFollower(TERMINAL_5);
    		TERMINAL_92.addFollower(TERMINAL_6);
    		TERMINAL_92.addFollower(TERMINAL_56);
    		TERMINAL_92.addFollower(TERMINAL_57);
    		TERMINAL_92.addFollower(TERMINAL_58);
    		TERMINAL_92.addFollower(TERMINAL_59);
    		TERMINAL_92.addFollower(TERMINAL_60);
    		TERMINAL_92.addFollower(TERMINAL_61);
    		TERMINAL_92.addFollower(TERMINAL_62);
    		TERMINAL_92.addFollower(TERMINAL_63);
    		TERMINAL_92.addFollower(TERMINAL_64);
    		TERMINAL_92.addFollower(TERMINAL_65);
    		TERMINAL_92.addFollower(TERMINAL_66);
    		TERMINAL_92.addFollower(TERMINAL_67);
    		TERMINAL_92.addFollower(TERMINAL_68);
    		TERMINAL_92.addFollower(TERMINAL_69);
    		TERMINAL_92.addFollower(TERMINAL_70);
    		TERMINAL_92.addFollower(TERMINAL_71);
    		TERMINAL_92.addFollower(TERMINAL_72);
    		TERMINAL_92.addFollower(TERMINAL_73);
    		TERMINAL_92.addFollower(TERMINAL_74);
    		TERMINAL_92.addFollower(TERMINAL_75);
    		TERMINAL_92.addFollower(TERMINAL_76);
    		TERMINAL_92.addFollower(TERMINAL_77);
    		TERMINAL_92.addFollower(TERMINAL_78);
    		TERMINAL_92.addFollower(TERMINAL_79);
    		TERMINAL_92.addFollower(TERMINAL_80);
    		TERMINAL_92.addFollower(TERMINAL_81);
    		TERMINAL_92.addFollower(TERMINAL_82);
    		TERMINAL_92.addFollower(TERMINAL_83);
    		TERMINAL_92.addFollower(TERMINAL_84);
    		TERMINAL_70.addFollower(TERMINAL_199);
    		TERMINAL_199.addFollower(TERMINAL_200);
    		TERMINAL_200.addFollower(TERMINAL_3);
    		TERMINAL_200.addFollower(TERMINAL_5);
    		TERMINAL_200.addFollower(TERMINAL_6);
    		TERMINAL_101.addFollower(TERMINAL_3);
    		TERMINAL_101.addFollower(TERMINAL_5);
    		TERMINAL_101.addFollower(TERMINAL_6);
    		TERMINAL_101.addFollower(TERMINAL_56);
    		TERMINAL_101.addFollower(TERMINAL_57);
    		TERMINAL_101.addFollower(TERMINAL_58);
    		TERMINAL_101.addFollower(TERMINAL_59);
    		TERMINAL_101.addFollower(TERMINAL_60);
    		TERMINAL_101.addFollower(TERMINAL_61);
    		TERMINAL_101.addFollower(TERMINAL_62);
    		TERMINAL_101.addFollower(TERMINAL_63);
    		TERMINAL_101.addFollower(TERMINAL_64);
    		TERMINAL_101.addFollower(TERMINAL_65);
    		TERMINAL_101.addFollower(TERMINAL_66);
    		TERMINAL_101.addFollower(TERMINAL_67);
    		TERMINAL_101.addFollower(TERMINAL_68);
    		TERMINAL_101.addFollower(TERMINAL_69);
    		TERMINAL_101.addFollower(TERMINAL_70);
    		TERMINAL_101.addFollower(TERMINAL_71);
    		TERMINAL_101.addFollower(TERMINAL_72);
    		TERMINAL_101.addFollower(TERMINAL_73);
    		TERMINAL_101.addFollower(TERMINAL_74);
    		TERMINAL_101.addFollower(TERMINAL_75);
    		TERMINAL_101.addFollower(TERMINAL_76);
    		TERMINAL_101.addFollower(TERMINAL_77);
    		TERMINAL_101.addFollower(TERMINAL_78);
    		TERMINAL_101.addFollower(TERMINAL_79);
    		TERMINAL_101.addFollower(TERMINAL_80);
    		TERMINAL_101.addFollower(TERMINAL_81);
    		TERMINAL_101.addFollower(TERMINAL_82);
    		TERMINAL_101.addFollower(TERMINAL_83);
    		TERMINAL_101.addFollower(TERMINAL_84);
    		TERMINAL_71.addFollower(TERMINAL_201);
    		TERMINAL_201.addFollower(TERMINAL_202);
    		TERMINAL_202.addFollower(TERMINAL_3);
    		TERMINAL_202.addFollower(TERMINAL_5);
    		TERMINAL_202.addFollower(TERMINAL_6);
    		TERMINAL_102.addFollower(TERMINAL_3);
    		TERMINAL_102.addFollower(TERMINAL_5);
    		TERMINAL_102.addFollower(TERMINAL_6);
    		TERMINAL_102.addFollower(TERMINAL_56);
    		TERMINAL_102.addFollower(TERMINAL_57);
    		TERMINAL_102.addFollower(TERMINAL_58);
    		TERMINAL_102.addFollower(TERMINAL_59);
    		TERMINAL_102.addFollower(TERMINAL_60);
    		TERMINAL_102.addFollower(TERMINAL_61);
    		TERMINAL_102.addFollower(TERMINAL_62);
    		TERMINAL_102.addFollower(TERMINAL_63);
    		TERMINAL_102.addFollower(TERMINAL_64);
    		TERMINAL_102.addFollower(TERMINAL_65);
    		TERMINAL_102.addFollower(TERMINAL_66);
    		TERMINAL_102.addFollower(TERMINAL_67);
    		TERMINAL_102.addFollower(TERMINAL_68);
    		TERMINAL_102.addFollower(TERMINAL_69);
    		TERMINAL_102.addFollower(TERMINAL_70);
    		TERMINAL_102.addFollower(TERMINAL_71);
    		TERMINAL_102.addFollower(TERMINAL_72);
    		TERMINAL_102.addFollower(TERMINAL_73);
    		TERMINAL_102.addFollower(TERMINAL_74);
    		TERMINAL_102.addFollower(TERMINAL_75);
    		TERMINAL_102.addFollower(TERMINAL_76);
    		TERMINAL_102.addFollower(TERMINAL_77);
    		TERMINAL_102.addFollower(TERMINAL_78);
    		TERMINAL_102.addFollower(TERMINAL_79);
    		TERMINAL_102.addFollower(TERMINAL_80);
    		TERMINAL_102.addFollower(TERMINAL_81);
    		TERMINAL_102.addFollower(TERMINAL_82);
    		TERMINAL_102.addFollower(TERMINAL_83);
    		TERMINAL_102.addFollower(TERMINAL_84);
    		TERMINAL_72.addFollower(TERMINAL_203);
    		TERMINAL_203.addFollower(TERMINAL_204);
    		TERMINAL_204.addFollower(TERMINAL_3);
    		TERMINAL_204.addFollower(TERMINAL_5);
    		TERMINAL_204.addFollower(TERMINAL_6);
    		TERMINAL_103.addFollower(TERMINAL_3);
    		TERMINAL_103.addFollower(TERMINAL_5);
    		TERMINAL_103.addFollower(TERMINAL_6);
    		TERMINAL_103.addFollower(TERMINAL_56);
    		TERMINAL_103.addFollower(TERMINAL_57);
    		TERMINAL_103.addFollower(TERMINAL_58);
    		TERMINAL_103.addFollower(TERMINAL_59);
    		TERMINAL_103.addFollower(TERMINAL_60);
    		TERMINAL_103.addFollower(TERMINAL_61);
    		TERMINAL_103.addFollower(TERMINAL_62);
    		TERMINAL_103.addFollower(TERMINAL_63);
    		TERMINAL_103.addFollower(TERMINAL_64);
    		TERMINAL_103.addFollower(TERMINAL_65);
    		TERMINAL_103.addFollower(TERMINAL_66);
    		TERMINAL_103.addFollower(TERMINAL_67);
    		TERMINAL_103.addFollower(TERMINAL_68);
    		TERMINAL_103.addFollower(TERMINAL_69);
    		TERMINAL_103.addFollower(TERMINAL_70);
    		TERMINAL_103.addFollower(TERMINAL_71);
    		TERMINAL_103.addFollower(TERMINAL_72);
    		TERMINAL_103.addFollower(TERMINAL_73);
    		TERMINAL_103.addFollower(TERMINAL_74);
    		TERMINAL_103.addFollower(TERMINAL_75);
    		TERMINAL_103.addFollower(TERMINAL_76);
    		TERMINAL_103.addFollower(TERMINAL_77);
    		TERMINAL_103.addFollower(TERMINAL_78);
    		TERMINAL_103.addFollower(TERMINAL_79);
    		TERMINAL_103.addFollower(TERMINAL_80);
    		TERMINAL_103.addFollower(TERMINAL_81);
    		TERMINAL_103.addFollower(TERMINAL_82);
    		TERMINAL_103.addFollower(TERMINAL_83);
    		TERMINAL_103.addFollower(TERMINAL_84);
    		TERMINAL_19.addFollower(TERMINAL_205);
    		TERMINAL_205.addFollower(TERMINAL_8);
    		TERMINAL_205.addFollower(TERMINAL_3);
    		TERMINAL_205.addFollower(TERMINAL_5);
    		TERMINAL_205.addFollower(TERMINAL_6);
    		TERMINAL_205.addFollower(TERMINAL_56);
    		TERMINAL_205.addFollower(TERMINAL_57);
    		TERMINAL_205.addFollower(TERMINAL_58);
    		TERMINAL_205.addFollower(TERMINAL_59);
    		TERMINAL_205.addFollower(TERMINAL_60);
    		TERMINAL_205.addFollower(TERMINAL_61);
    		TERMINAL_205.addFollower(TERMINAL_62);
    		TERMINAL_205.addFollower(TERMINAL_63);
    		TERMINAL_205.addFollower(TERMINAL_64);
    		TERMINAL_205.addFollower(TERMINAL_65);
    		TERMINAL_205.addFollower(TERMINAL_66);
    		TERMINAL_205.addFollower(TERMINAL_67);
    		TERMINAL_205.addFollower(TERMINAL_68);
    		TERMINAL_205.addFollower(TERMINAL_69);
    		TERMINAL_205.addFollower(TERMINAL_70);
    		TERMINAL_205.addFollower(TERMINAL_71);
    		TERMINAL_205.addFollower(TERMINAL_72);
    		TERMINAL_206.addFollower(TERMINAL_1);
    		TERMINAL_206.addFollower(TERMINAL_9);
    		TERMINAL_206.addFollower(TERMINAL_10);
    		TERMINAL_206.addFollower(TERMINAL_11);
    		TERMINAL_206.addFollower(TERMINAL_12);
    		TERMINAL_206.addFollower(TERMINAL_13);
    		TERMINAL_206.addFollower(TERMINAL_14);
    		TERMINAL_206.addFollower(TERMINAL_15);
    		TERMINAL_206.addFollower(TERMINAL_16);
    		TERMINAL_206.addFollower(TERMINAL_17);
    		TERMINAL_206.addFollower(TERMINAL_18);
    		TERMINAL_206.addFollower(TERMINAL_19);
    		TERMINAL_206.addFollower(TERMINAL_20);
    		TERMINAL_206.addFollower(TERMINAL_21);
    		TERMINAL_206.addFollower(TERMINAL_22);
    		TERMINAL_206.addFollower(TERMINAL_23);
    		TERMINAL_206.addFollower(TERMINAL_24);
    		TERMINAL_206.addFollower(TERMINAL_25);
    		TERMINAL_206.addFollower(TERMINAL_26);
    		TERMINAL_206.addFollower(TERMINAL_27);
    		TERMINAL_206.addFollower(TERMINAL_28);
    		TERMINAL_206.addFollower(TERMINAL_29);
    		TERMINAL_206.addFollower(TERMINAL_30);
    		TERMINAL_206.addFollower(TERMINAL_31);
    		TERMINAL_206.addFollower(TERMINAL_32);
    		TERMINAL_206.addFollower(TERMINAL_33);
    		TERMINAL_206.addFollower(TERMINAL_34);
    		TERMINAL_206.addFollower(TERMINAL_35);
    		TERMINAL_206.addFollower(TERMINAL_36);
    		TERMINAL_206.addFollower(TERMINAL_37);
    		TERMINAL_206.addFollower(TERMINAL_38);
    		TERMINAL_206.addFollower(TERMINAL_39);
    		TERMINAL_206.addFollower(TERMINAL_40);
    		TERMINAL_206.addFollower(TERMINAL_41);
    		TERMINAL_206.addFollower(TERMINAL_42);
    		TERMINAL_206.addFollower(TERMINAL_43);
    		TERMINAL_206.addFollower(TERMINAL_44);
    		TERMINAL_206.addFollower(TERMINAL_45);
    		TERMINAL_206.addFollower(TERMINAL_46);
    		TERMINAL_206.addFollower(TERMINAL_47);
    		TERMINAL_206.addFollower(TERMINAL_48);
    		TERMINAL_206.addFollower(TERMINAL_49);
    		TERMINAL_206.addFollower(TERMINAL_50);
    		TERMINAL_206.addFollower(TERMINAL_51);
    		TERMINAL_206.addFollower(TERMINAL_52);
    		TERMINAL_206.addFollower(TERMINAL_53);
    		TERMINAL_206.addFollower(TERMINAL_54);
    		TERMINAL_20.addFollower(TERMINAL_207);
    		TERMINAL_207.addFollower(TERMINAL_8);
    		TERMINAL_207.addFollower(TERMINAL_3);
    		TERMINAL_207.addFollower(TERMINAL_5);
    		TERMINAL_207.addFollower(TERMINAL_6);
    		TERMINAL_207.addFollower(TERMINAL_56);
    		TERMINAL_207.addFollower(TERMINAL_57);
    		TERMINAL_207.addFollower(TERMINAL_58);
    		TERMINAL_207.addFollower(TERMINAL_59);
    		TERMINAL_207.addFollower(TERMINAL_60);
    		TERMINAL_207.addFollower(TERMINAL_61);
    		TERMINAL_207.addFollower(TERMINAL_62);
    		TERMINAL_207.addFollower(TERMINAL_63);
    		TERMINAL_207.addFollower(TERMINAL_64);
    		TERMINAL_207.addFollower(TERMINAL_65);
    		TERMINAL_207.addFollower(TERMINAL_66);
    		TERMINAL_207.addFollower(TERMINAL_67);
    		TERMINAL_207.addFollower(TERMINAL_68);
    		TERMINAL_207.addFollower(TERMINAL_69);
    		TERMINAL_207.addFollower(TERMINAL_70);
    		TERMINAL_207.addFollower(TERMINAL_71);
    		TERMINAL_207.addFollower(TERMINAL_72);
    		TERMINAL_208.addFollower(TERMINAL_1);
    		TERMINAL_208.addFollower(TERMINAL_9);
    		TERMINAL_208.addFollower(TERMINAL_10);
    		TERMINAL_208.addFollower(TERMINAL_11);
    		TERMINAL_208.addFollower(TERMINAL_12);
    		TERMINAL_208.addFollower(TERMINAL_13);
    		TERMINAL_208.addFollower(TERMINAL_14);
    		TERMINAL_208.addFollower(TERMINAL_15);
    		TERMINAL_208.addFollower(TERMINAL_16);
    		TERMINAL_208.addFollower(TERMINAL_17);
    		TERMINAL_208.addFollower(TERMINAL_18);
    		TERMINAL_208.addFollower(TERMINAL_19);
    		TERMINAL_208.addFollower(TERMINAL_20);
    		TERMINAL_208.addFollower(TERMINAL_21);
    		TERMINAL_208.addFollower(TERMINAL_22);
    		TERMINAL_208.addFollower(TERMINAL_23);
    		TERMINAL_208.addFollower(TERMINAL_24);
    		TERMINAL_208.addFollower(TERMINAL_25);
    		TERMINAL_208.addFollower(TERMINAL_26);
    		TERMINAL_208.addFollower(TERMINAL_27);
    		TERMINAL_208.addFollower(TERMINAL_28);
    		TERMINAL_208.addFollower(TERMINAL_29);
    		TERMINAL_208.addFollower(TERMINAL_30);
    		TERMINAL_208.addFollower(TERMINAL_31);
    		TERMINAL_208.addFollower(TERMINAL_32);
    		TERMINAL_208.addFollower(TERMINAL_33);
    		TERMINAL_208.addFollower(TERMINAL_34);
    		TERMINAL_208.addFollower(TERMINAL_35);
    		TERMINAL_208.addFollower(TERMINAL_36);
    		TERMINAL_208.addFollower(TERMINAL_37);
    		TERMINAL_208.addFollower(TERMINAL_38);
    		TERMINAL_208.addFollower(TERMINAL_39);
    		TERMINAL_208.addFollower(TERMINAL_40);
    		TERMINAL_208.addFollower(TERMINAL_41);
    		TERMINAL_208.addFollower(TERMINAL_42);
    		TERMINAL_208.addFollower(TERMINAL_43);
    		TERMINAL_208.addFollower(TERMINAL_44);
    		TERMINAL_208.addFollower(TERMINAL_45);
    		TERMINAL_208.addFollower(TERMINAL_46);
    		TERMINAL_208.addFollower(TERMINAL_47);
    		TERMINAL_208.addFollower(TERMINAL_48);
    		TERMINAL_208.addFollower(TERMINAL_49);
    		TERMINAL_208.addFollower(TERMINAL_50);
    		TERMINAL_208.addFollower(TERMINAL_51);
    		TERMINAL_208.addFollower(TERMINAL_52);
    		TERMINAL_208.addFollower(TERMINAL_53);
    		TERMINAL_208.addFollower(TERMINAL_54);
    		TERMINAL_21.addFollower(TERMINAL_209);
    		TERMINAL_209.addFollower(TERMINAL_8);
    		TERMINAL_209.addFollower(TERMINAL_3);
    		TERMINAL_209.addFollower(TERMINAL_5);
    		TERMINAL_209.addFollower(TERMINAL_6);
    		TERMINAL_209.addFollower(TERMINAL_56);
    		TERMINAL_209.addFollower(TERMINAL_57);
    		TERMINAL_209.addFollower(TERMINAL_58);
    		TERMINAL_209.addFollower(TERMINAL_59);
    		TERMINAL_209.addFollower(TERMINAL_60);
    		TERMINAL_209.addFollower(TERMINAL_61);
    		TERMINAL_209.addFollower(TERMINAL_62);
    		TERMINAL_209.addFollower(TERMINAL_63);
    		TERMINAL_209.addFollower(TERMINAL_64);
    		TERMINAL_209.addFollower(TERMINAL_65);
    		TERMINAL_209.addFollower(TERMINAL_66);
    		TERMINAL_209.addFollower(TERMINAL_67);
    		TERMINAL_209.addFollower(TERMINAL_68);
    		TERMINAL_209.addFollower(TERMINAL_69);
    		TERMINAL_209.addFollower(TERMINAL_70);
    		TERMINAL_209.addFollower(TERMINAL_71);
    		TERMINAL_209.addFollower(TERMINAL_72);
    		TERMINAL_210.addFollower(TERMINAL_1);
    		TERMINAL_210.addFollower(TERMINAL_9);
    		TERMINAL_210.addFollower(TERMINAL_10);
    		TERMINAL_210.addFollower(TERMINAL_11);
    		TERMINAL_210.addFollower(TERMINAL_12);
    		TERMINAL_210.addFollower(TERMINAL_13);
    		TERMINAL_210.addFollower(TERMINAL_14);
    		TERMINAL_210.addFollower(TERMINAL_15);
    		TERMINAL_210.addFollower(TERMINAL_16);
    		TERMINAL_210.addFollower(TERMINAL_17);
    		TERMINAL_210.addFollower(TERMINAL_18);
    		TERMINAL_210.addFollower(TERMINAL_19);
    		TERMINAL_210.addFollower(TERMINAL_20);
    		TERMINAL_210.addFollower(TERMINAL_21);
    		TERMINAL_210.addFollower(TERMINAL_22);
    		TERMINAL_210.addFollower(TERMINAL_23);
    		TERMINAL_210.addFollower(TERMINAL_24);
    		TERMINAL_210.addFollower(TERMINAL_25);
    		TERMINAL_210.addFollower(TERMINAL_26);
    		TERMINAL_210.addFollower(TERMINAL_27);
    		TERMINAL_210.addFollower(TERMINAL_28);
    		TERMINAL_210.addFollower(TERMINAL_29);
    		TERMINAL_210.addFollower(TERMINAL_30);
    		TERMINAL_210.addFollower(TERMINAL_31);
    		TERMINAL_210.addFollower(TERMINAL_32);
    		TERMINAL_210.addFollower(TERMINAL_33);
    		TERMINAL_210.addFollower(TERMINAL_34);
    		TERMINAL_210.addFollower(TERMINAL_35);
    		TERMINAL_210.addFollower(TERMINAL_36);
    		TERMINAL_210.addFollower(TERMINAL_37);
    		TERMINAL_210.addFollower(TERMINAL_38);
    		TERMINAL_210.addFollower(TERMINAL_39);
    		TERMINAL_210.addFollower(TERMINAL_40);
    		TERMINAL_210.addFollower(TERMINAL_41);
    		TERMINAL_210.addFollower(TERMINAL_42);
    		TERMINAL_210.addFollower(TERMINAL_43);
    		TERMINAL_210.addFollower(TERMINAL_44);
    		TERMINAL_210.addFollower(TERMINAL_45);
    		TERMINAL_210.addFollower(TERMINAL_46);
    		TERMINAL_210.addFollower(TERMINAL_47);
    		TERMINAL_210.addFollower(TERMINAL_48);
    		TERMINAL_210.addFollower(TERMINAL_49);
    		TERMINAL_210.addFollower(TERMINAL_50);
    		TERMINAL_210.addFollower(TERMINAL_51);
    		TERMINAL_210.addFollower(TERMINAL_52);
    		TERMINAL_210.addFollower(TERMINAL_53);
    		TERMINAL_210.addFollower(TERMINAL_54);
    		TERMINAL_22.addFollower(TERMINAL_211);
    		TERMINAL_211.addFollower(TERMINAL_8);
    		TERMINAL_211.addFollower(TERMINAL_3);
    		TERMINAL_211.addFollower(TERMINAL_5);
    		TERMINAL_211.addFollower(TERMINAL_6);
    		TERMINAL_212.addFollower(TERMINAL_1);
    		TERMINAL_212.addFollower(TERMINAL_9);
    		TERMINAL_212.addFollower(TERMINAL_10);
    		TERMINAL_212.addFollower(TERMINAL_11);
    		TERMINAL_212.addFollower(TERMINAL_12);
    		TERMINAL_212.addFollower(TERMINAL_13);
    		TERMINAL_212.addFollower(TERMINAL_14);
    		TERMINAL_212.addFollower(TERMINAL_15);
    		TERMINAL_212.addFollower(TERMINAL_16);
    		TERMINAL_212.addFollower(TERMINAL_17);
    		TERMINAL_212.addFollower(TERMINAL_18);
    		TERMINAL_212.addFollower(TERMINAL_19);
    		TERMINAL_212.addFollower(TERMINAL_20);
    		TERMINAL_212.addFollower(TERMINAL_21);
    		TERMINAL_212.addFollower(TERMINAL_22);
    		TERMINAL_212.addFollower(TERMINAL_23);
    		TERMINAL_212.addFollower(TERMINAL_24);
    		TERMINAL_212.addFollower(TERMINAL_25);
    		TERMINAL_212.addFollower(TERMINAL_26);
    		TERMINAL_212.addFollower(TERMINAL_27);
    		TERMINAL_212.addFollower(TERMINAL_28);
    		TERMINAL_212.addFollower(TERMINAL_29);
    		TERMINAL_212.addFollower(TERMINAL_30);
    		TERMINAL_212.addFollower(TERMINAL_31);
    		TERMINAL_212.addFollower(TERMINAL_32);
    		TERMINAL_212.addFollower(TERMINAL_33);
    		TERMINAL_212.addFollower(TERMINAL_34);
    		TERMINAL_212.addFollower(TERMINAL_35);
    		TERMINAL_212.addFollower(TERMINAL_36);
    		TERMINAL_212.addFollower(TERMINAL_37);
    		TERMINAL_212.addFollower(TERMINAL_38);
    		TERMINAL_212.addFollower(TERMINAL_39);
    		TERMINAL_212.addFollower(TERMINAL_40);
    		TERMINAL_212.addFollower(TERMINAL_41);
    		TERMINAL_212.addFollower(TERMINAL_42);
    		TERMINAL_212.addFollower(TERMINAL_43);
    		TERMINAL_212.addFollower(TERMINAL_44);
    		TERMINAL_212.addFollower(TERMINAL_45);
    		TERMINAL_212.addFollower(TERMINAL_46);
    		TERMINAL_212.addFollower(TERMINAL_47);
    		TERMINAL_212.addFollower(TERMINAL_48);
    		TERMINAL_212.addFollower(TERMINAL_49);
    		TERMINAL_212.addFollower(TERMINAL_50);
    		TERMINAL_212.addFollower(TERMINAL_51);
    		TERMINAL_212.addFollower(TERMINAL_52);
    		TERMINAL_212.addFollower(TERMINAL_53);
    		TERMINAL_212.addFollower(TERMINAL_54);
    		TERMINAL_23.addFollower(TERMINAL_213);
    		TERMINAL_213.addFollower(TERMINAL_8);
    		TERMINAL_213.addFollower(TERMINAL_3);
    		TERMINAL_213.addFollower(TERMINAL_5);
    		TERMINAL_213.addFollower(TERMINAL_6);
    		TERMINAL_213.addFollower(TERMINAL_111);
    		TERMINAL_213.addFollower(TERMINAL_169);
    		TERMINAL_214.addFollower(TERMINAL_1);
    		TERMINAL_214.addFollower(TERMINAL_9);
    		TERMINAL_214.addFollower(TERMINAL_10);
    		TERMINAL_214.addFollower(TERMINAL_11);
    		TERMINAL_214.addFollower(TERMINAL_12);
    		TERMINAL_214.addFollower(TERMINAL_13);
    		TERMINAL_214.addFollower(TERMINAL_14);
    		TERMINAL_214.addFollower(TERMINAL_15);
    		TERMINAL_214.addFollower(TERMINAL_16);
    		TERMINAL_214.addFollower(TERMINAL_17);
    		TERMINAL_214.addFollower(TERMINAL_18);
    		TERMINAL_214.addFollower(TERMINAL_19);
    		TERMINAL_214.addFollower(TERMINAL_20);
    		TERMINAL_214.addFollower(TERMINAL_21);
    		TERMINAL_214.addFollower(TERMINAL_22);
    		TERMINAL_214.addFollower(TERMINAL_23);
    		TERMINAL_214.addFollower(TERMINAL_24);
    		TERMINAL_214.addFollower(TERMINAL_25);
    		TERMINAL_214.addFollower(TERMINAL_26);
    		TERMINAL_214.addFollower(TERMINAL_27);
    		TERMINAL_214.addFollower(TERMINAL_28);
    		TERMINAL_214.addFollower(TERMINAL_29);
    		TERMINAL_214.addFollower(TERMINAL_30);
    		TERMINAL_214.addFollower(TERMINAL_31);
    		TERMINAL_214.addFollower(TERMINAL_32);
    		TERMINAL_214.addFollower(TERMINAL_33);
    		TERMINAL_214.addFollower(TERMINAL_34);
    		TERMINAL_214.addFollower(TERMINAL_35);
    		TERMINAL_214.addFollower(TERMINAL_36);
    		TERMINAL_214.addFollower(TERMINAL_37);
    		TERMINAL_214.addFollower(TERMINAL_38);
    		TERMINAL_214.addFollower(TERMINAL_39);
    		TERMINAL_214.addFollower(TERMINAL_40);
    		TERMINAL_214.addFollower(TERMINAL_41);
    		TERMINAL_214.addFollower(TERMINAL_42);
    		TERMINAL_214.addFollower(TERMINAL_43);
    		TERMINAL_214.addFollower(TERMINAL_44);
    		TERMINAL_214.addFollower(TERMINAL_45);
    		TERMINAL_214.addFollower(TERMINAL_46);
    		TERMINAL_214.addFollower(TERMINAL_47);
    		TERMINAL_214.addFollower(TERMINAL_48);
    		TERMINAL_214.addFollower(TERMINAL_49);
    		TERMINAL_214.addFollower(TERMINAL_50);
    		TERMINAL_214.addFollower(TERMINAL_51);
    		TERMINAL_214.addFollower(TERMINAL_52);
    		TERMINAL_214.addFollower(TERMINAL_53);
    		TERMINAL_214.addFollower(TERMINAL_54);
    		TERMINAL_169.addFollower(TERMINAL_215);
    		TERMINAL_215.addFollower(TERMINAL_3);
    		TERMINAL_215.addFollower(TERMINAL_5);
    		TERMINAL_215.addFollower(TERMINAL_6);
    		TERMINAL_215.addFollower(TERMINAL_111);
    		TERMINAL_216.addFollower(TERMINAL_3);
    		TERMINAL_216.addFollower(TERMINAL_5);
    		TERMINAL_216.addFollower(TERMINAL_6);
    		TERMINAL_216.addFollower(TERMINAL_111);
    		TERMINAL_24.addFollower(TERMINAL_217);
    		TERMINAL_217.addFollower(TERMINAL_8);
    		TERMINAL_217.addFollower(TERMINAL_3);
    		TERMINAL_217.addFollower(TERMINAL_5);
    		TERMINAL_217.addFollower(TERMINAL_6);
    		TERMINAL_217.addFollower(TERMINAL_111);
    		TERMINAL_218.addFollower(TERMINAL_1);
    		TERMINAL_218.addFollower(TERMINAL_9);
    		TERMINAL_218.addFollower(TERMINAL_10);
    		TERMINAL_218.addFollower(TERMINAL_11);
    		TERMINAL_218.addFollower(TERMINAL_12);
    		TERMINAL_218.addFollower(TERMINAL_13);
    		TERMINAL_218.addFollower(TERMINAL_14);
    		TERMINAL_218.addFollower(TERMINAL_15);
    		TERMINAL_218.addFollower(TERMINAL_16);
    		TERMINAL_218.addFollower(TERMINAL_17);
    		TERMINAL_218.addFollower(TERMINAL_18);
    		TERMINAL_218.addFollower(TERMINAL_19);
    		TERMINAL_218.addFollower(TERMINAL_20);
    		TERMINAL_218.addFollower(TERMINAL_21);
    		TERMINAL_218.addFollower(TERMINAL_22);
    		TERMINAL_218.addFollower(TERMINAL_23);
    		TERMINAL_218.addFollower(TERMINAL_24);
    		TERMINAL_218.addFollower(TERMINAL_25);
    		TERMINAL_218.addFollower(TERMINAL_26);
    		TERMINAL_218.addFollower(TERMINAL_27);
    		TERMINAL_218.addFollower(TERMINAL_28);
    		TERMINAL_218.addFollower(TERMINAL_29);
    		TERMINAL_218.addFollower(TERMINAL_30);
    		TERMINAL_218.addFollower(TERMINAL_31);
    		TERMINAL_218.addFollower(TERMINAL_32);
    		TERMINAL_218.addFollower(TERMINAL_33);
    		TERMINAL_218.addFollower(TERMINAL_34);
    		TERMINAL_218.addFollower(TERMINAL_35);
    		TERMINAL_218.addFollower(TERMINAL_36);
    		TERMINAL_218.addFollower(TERMINAL_37);
    		TERMINAL_218.addFollower(TERMINAL_38);
    		TERMINAL_218.addFollower(TERMINAL_39);
    		TERMINAL_218.addFollower(TERMINAL_40);
    		TERMINAL_218.addFollower(TERMINAL_41);
    		TERMINAL_218.addFollower(TERMINAL_42);
    		TERMINAL_218.addFollower(TERMINAL_43);
    		TERMINAL_218.addFollower(TERMINAL_44);
    		TERMINAL_218.addFollower(TERMINAL_45);
    		TERMINAL_218.addFollower(TERMINAL_46);
    		TERMINAL_218.addFollower(TERMINAL_47);
    		TERMINAL_218.addFollower(TERMINAL_48);
    		TERMINAL_218.addFollower(TERMINAL_49);
    		TERMINAL_218.addFollower(TERMINAL_50);
    		TERMINAL_218.addFollower(TERMINAL_51);
    		TERMINAL_218.addFollower(TERMINAL_52);
    		TERMINAL_218.addFollower(TERMINAL_53);
    		TERMINAL_218.addFollower(TERMINAL_54);
    		TERMINAL_25.addFollower(TERMINAL_219);
    		TERMINAL_219.addFollower(TERMINAL_8);
    		TERMINAL_219.addFollower(TERMINAL_3);
    		TERMINAL_219.addFollower(TERMINAL_5);
    		TERMINAL_219.addFollower(TERMINAL_6);
    		TERMINAL_219.addFollower(TERMINAL_111);
    		TERMINAL_220.addFollower(TERMINAL_1);
    		TERMINAL_220.addFollower(TERMINAL_9);
    		TERMINAL_220.addFollower(TERMINAL_10);
    		TERMINAL_220.addFollower(TERMINAL_11);
    		TERMINAL_220.addFollower(TERMINAL_12);
    		TERMINAL_220.addFollower(TERMINAL_13);
    		TERMINAL_220.addFollower(TERMINAL_14);
    		TERMINAL_220.addFollower(TERMINAL_15);
    		TERMINAL_220.addFollower(TERMINAL_16);
    		TERMINAL_220.addFollower(TERMINAL_17);
    		TERMINAL_220.addFollower(TERMINAL_18);
    		TERMINAL_220.addFollower(TERMINAL_19);
    		TERMINAL_220.addFollower(TERMINAL_20);
    		TERMINAL_220.addFollower(TERMINAL_21);
    		TERMINAL_220.addFollower(TERMINAL_22);
    		TERMINAL_220.addFollower(TERMINAL_23);
    		TERMINAL_220.addFollower(TERMINAL_24);
    		TERMINAL_220.addFollower(TERMINAL_25);
    		TERMINAL_220.addFollower(TERMINAL_26);
    		TERMINAL_220.addFollower(TERMINAL_27);
    		TERMINAL_220.addFollower(TERMINAL_28);
    		TERMINAL_220.addFollower(TERMINAL_29);
    		TERMINAL_220.addFollower(TERMINAL_30);
    		TERMINAL_220.addFollower(TERMINAL_31);
    		TERMINAL_220.addFollower(TERMINAL_32);
    		TERMINAL_220.addFollower(TERMINAL_33);
    		TERMINAL_220.addFollower(TERMINAL_34);
    		TERMINAL_220.addFollower(TERMINAL_35);
    		TERMINAL_220.addFollower(TERMINAL_36);
    		TERMINAL_220.addFollower(TERMINAL_37);
    		TERMINAL_220.addFollower(TERMINAL_38);
    		TERMINAL_220.addFollower(TERMINAL_39);
    		TERMINAL_220.addFollower(TERMINAL_40);
    		TERMINAL_220.addFollower(TERMINAL_41);
    		TERMINAL_220.addFollower(TERMINAL_42);
    		TERMINAL_220.addFollower(TERMINAL_43);
    		TERMINAL_220.addFollower(TERMINAL_44);
    		TERMINAL_220.addFollower(TERMINAL_45);
    		TERMINAL_220.addFollower(TERMINAL_46);
    		TERMINAL_220.addFollower(TERMINAL_47);
    		TERMINAL_220.addFollower(TERMINAL_48);
    		TERMINAL_220.addFollower(TERMINAL_49);
    		TERMINAL_220.addFollower(TERMINAL_50);
    		TERMINAL_220.addFollower(TERMINAL_51);
    		TERMINAL_220.addFollower(TERMINAL_52);
    		TERMINAL_220.addFollower(TERMINAL_53);
    		TERMINAL_220.addFollower(TERMINAL_54);
    		TERMINAL_26.addFollower(TERMINAL_221);
    		TERMINAL_221.addFollower(TERMINAL_8);
    		TERMINAL_221.addFollower(TERMINAL_3);
    		TERMINAL_221.addFollower(TERMINAL_5);
    		TERMINAL_221.addFollower(TERMINAL_6);
    		TERMINAL_221.addFollower(TERMINAL_111);
    		TERMINAL_79.addFollower(TERMINAL_1);
    		TERMINAL_79.addFollower(TERMINAL_9);
    		TERMINAL_79.addFollower(TERMINAL_10);
    		TERMINAL_79.addFollower(TERMINAL_11);
    		TERMINAL_79.addFollower(TERMINAL_12);
    		TERMINAL_79.addFollower(TERMINAL_13);
    		TERMINAL_79.addFollower(TERMINAL_14);
    		TERMINAL_79.addFollower(TERMINAL_15);
    		TERMINAL_79.addFollower(TERMINAL_16);
    		TERMINAL_79.addFollower(TERMINAL_17);
    		TERMINAL_79.addFollower(TERMINAL_18);
    		TERMINAL_79.addFollower(TERMINAL_19);
    		TERMINAL_79.addFollower(TERMINAL_20);
    		TERMINAL_79.addFollower(TERMINAL_21);
    		TERMINAL_79.addFollower(TERMINAL_22);
    		TERMINAL_79.addFollower(TERMINAL_23);
    		TERMINAL_79.addFollower(TERMINAL_24);
    		TERMINAL_79.addFollower(TERMINAL_25);
    		TERMINAL_79.addFollower(TERMINAL_26);
    		TERMINAL_79.addFollower(TERMINAL_27);
    		TERMINAL_79.addFollower(TERMINAL_28);
    		TERMINAL_79.addFollower(TERMINAL_29);
    		TERMINAL_79.addFollower(TERMINAL_30);
    		TERMINAL_79.addFollower(TERMINAL_31);
    		TERMINAL_79.addFollower(TERMINAL_32);
    		TERMINAL_79.addFollower(TERMINAL_33);
    		TERMINAL_79.addFollower(TERMINAL_34);
    		TERMINAL_79.addFollower(TERMINAL_35);
    		TERMINAL_79.addFollower(TERMINAL_36);
    		TERMINAL_79.addFollower(TERMINAL_37);
    		TERMINAL_79.addFollower(TERMINAL_38);
    		TERMINAL_79.addFollower(TERMINAL_39);
    		TERMINAL_79.addFollower(TERMINAL_40);
    		TERMINAL_79.addFollower(TERMINAL_41);
    		TERMINAL_79.addFollower(TERMINAL_42);
    		TERMINAL_79.addFollower(TERMINAL_43);
    		TERMINAL_79.addFollower(TERMINAL_44);
    		TERMINAL_79.addFollower(TERMINAL_45);
    		TERMINAL_79.addFollower(TERMINAL_46);
    		TERMINAL_79.addFollower(TERMINAL_47);
    		TERMINAL_79.addFollower(TERMINAL_48);
    		TERMINAL_79.addFollower(TERMINAL_49);
    		TERMINAL_79.addFollower(TERMINAL_50);
    		TERMINAL_79.addFollower(TERMINAL_51);
    		TERMINAL_79.addFollower(TERMINAL_52);
    		TERMINAL_79.addFollower(TERMINAL_53);
    		TERMINAL_79.addFollower(TERMINAL_54);
    		TERMINAL_27.addFollower(TERMINAL_222);
    		TERMINAL_222.addFollower(TERMINAL_8);
    		TERMINAL_222.addFollower(TERMINAL_3);
    		TERMINAL_222.addFollower(TERMINAL_5);
    		TERMINAL_222.addFollower(TERMINAL_6);
    		TERMINAL_222.addFollower(TERMINAL_111);
    		TERMINAL_80.addFollower(TERMINAL_1);
    		TERMINAL_80.addFollower(TERMINAL_9);
    		TERMINAL_80.addFollower(TERMINAL_10);
    		TERMINAL_80.addFollower(TERMINAL_11);
    		TERMINAL_80.addFollower(TERMINAL_12);
    		TERMINAL_80.addFollower(TERMINAL_13);
    		TERMINAL_80.addFollower(TERMINAL_14);
    		TERMINAL_80.addFollower(TERMINAL_15);
    		TERMINAL_80.addFollower(TERMINAL_16);
    		TERMINAL_80.addFollower(TERMINAL_17);
    		TERMINAL_80.addFollower(TERMINAL_18);
    		TERMINAL_80.addFollower(TERMINAL_19);
    		TERMINAL_80.addFollower(TERMINAL_20);
    		TERMINAL_80.addFollower(TERMINAL_21);
    		TERMINAL_80.addFollower(TERMINAL_22);
    		TERMINAL_80.addFollower(TERMINAL_23);
    		TERMINAL_80.addFollower(TERMINAL_24);
    		TERMINAL_80.addFollower(TERMINAL_25);
    		TERMINAL_80.addFollower(TERMINAL_26);
    		TERMINAL_80.addFollower(TERMINAL_27);
    		TERMINAL_80.addFollower(TERMINAL_28);
    		TERMINAL_80.addFollower(TERMINAL_29);
    		TERMINAL_80.addFollower(TERMINAL_30);
    		TERMINAL_80.addFollower(TERMINAL_31);
    		TERMINAL_80.addFollower(TERMINAL_32);
    		TERMINAL_80.addFollower(TERMINAL_33);
    		TERMINAL_80.addFollower(TERMINAL_34);
    		TERMINAL_80.addFollower(TERMINAL_35);
    		TERMINAL_80.addFollower(TERMINAL_36);
    		TERMINAL_80.addFollower(TERMINAL_37);
    		TERMINAL_80.addFollower(TERMINAL_38);
    		TERMINAL_80.addFollower(TERMINAL_39);
    		TERMINAL_80.addFollower(TERMINAL_40);
    		TERMINAL_80.addFollower(TERMINAL_41);
    		TERMINAL_80.addFollower(TERMINAL_42);
    		TERMINAL_80.addFollower(TERMINAL_43);
    		TERMINAL_80.addFollower(TERMINAL_44);
    		TERMINAL_80.addFollower(TERMINAL_45);
    		TERMINAL_80.addFollower(TERMINAL_46);
    		TERMINAL_80.addFollower(TERMINAL_47);
    		TERMINAL_80.addFollower(TERMINAL_48);
    		TERMINAL_80.addFollower(TERMINAL_49);
    		TERMINAL_80.addFollower(TERMINAL_50);
    		TERMINAL_80.addFollower(TERMINAL_51);
    		TERMINAL_80.addFollower(TERMINAL_52);
    		TERMINAL_80.addFollower(TERMINAL_53);
    		TERMINAL_80.addFollower(TERMINAL_54);
    		TERMINAL_28.addFollower(TERMINAL_223);
    		TERMINAL_223.addFollower(TERMINAL_8);
    		TERMINAL_223.addFollower(TERMINAL_3);
    		TERMINAL_223.addFollower(TERMINAL_5);
    		TERMINAL_223.addFollower(TERMINAL_6);
    		TERMINAL_223.addFollower(TERMINAL_111);
    		TERMINAL_224.addFollower(TERMINAL_1);
    		TERMINAL_224.addFollower(TERMINAL_9);
    		TERMINAL_224.addFollower(TERMINAL_10);
    		TERMINAL_224.addFollower(TERMINAL_11);
    		TERMINAL_224.addFollower(TERMINAL_12);
    		TERMINAL_224.addFollower(TERMINAL_13);
    		TERMINAL_224.addFollower(TERMINAL_14);
    		TERMINAL_224.addFollower(TERMINAL_15);
    		TERMINAL_224.addFollower(TERMINAL_16);
    		TERMINAL_224.addFollower(TERMINAL_17);
    		TERMINAL_224.addFollower(TERMINAL_18);
    		TERMINAL_224.addFollower(TERMINAL_19);
    		TERMINAL_224.addFollower(TERMINAL_20);
    		TERMINAL_224.addFollower(TERMINAL_21);
    		TERMINAL_224.addFollower(TERMINAL_22);
    		TERMINAL_224.addFollower(TERMINAL_23);
    		TERMINAL_224.addFollower(TERMINAL_24);
    		TERMINAL_224.addFollower(TERMINAL_25);
    		TERMINAL_224.addFollower(TERMINAL_26);
    		TERMINAL_224.addFollower(TERMINAL_27);
    		TERMINAL_224.addFollower(TERMINAL_28);
    		TERMINAL_224.addFollower(TERMINAL_29);
    		TERMINAL_224.addFollower(TERMINAL_30);
    		TERMINAL_224.addFollower(TERMINAL_31);
    		TERMINAL_224.addFollower(TERMINAL_32);
    		TERMINAL_224.addFollower(TERMINAL_33);
    		TERMINAL_224.addFollower(TERMINAL_34);
    		TERMINAL_224.addFollower(TERMINAL_35);
    		TERMINAL_224.addFollower(TERMINAL_36);
    		TERMINAL_224.addFollower(TERMINAL_37);
    		TERMINAL_224.addFollower(TERMINAL_38);
    		TERMINAL_224.addFollower(TERMINAL_39);
    		TERMINAL_224.addFollower(TERMINAL_40);
    		TERMINAL_224.addFollower(TERMINAL_41);
    		TERMINAL_224.addFollower(TERMINAL_42);
    		TERMINAL_224.addFollower(TERMINAL_43);
    		TERMINAL_224.addFollower(TERMINAL_44);
    		TERMINAL_224.addFollower(TERMINAL_45);
    		TERMINAL_224.addFollower(TERMINAL_46);
    		TERMINAL_224.addFollower(TERMINAL_47);
    		TERMINAL_224.addFollower(TERMINAL_48);
    		TERMINAL_224.addFollower(TERMINAL_49);
    		TERMINAL_224.addFollower(TERMINAL_50);
    		TERMINAL_224.addFollower(TERMINAL_51);
    		TERMINAL_224.addFollower(TERMINAL_52);
    		TERMINAL_224.addFollower(TERMINAL_53);
    		TERMINAL_224.addFollower(TERMINAL_54);
    		TERMINAL_29.addFollower(TERMINAL_225);
    		TERMINAL_225.addFollower(TERMINAL_8);
    		TERMINAL_225.addFollower(TERMINAL_3);
    		TERMINAL_225.addFollower(TERMINAL_5);
    		TERMINAL_225.addFollower(TERMINAL_6);
    		TERMINAL_225.addFollower(TERMINAL_111);
    		TERMINAL_112.addFollower(TERMINAL_1);
    		TERMINAL_112.addFollower(TERMINAL_9);
    		TERMINAL_112.addFollower(TERMINAL_10);
    		TERMINAL_112.addFollower(TERMINAL_11);
    		TERMINAL_112.addFollower(TERMINAL_12);
    		TERMINAL_112.addFollower(TERMINAL_13);
    		TERMINAL_112.addFollower(TERMINAL_14);
    		TERMINAL_112.addFollower(TERMINAL_15);
    		TERMINAL_112.addFollower(TERMINAL_16);
    		TERMINAL_112.addFollower(TERMINAL_17);
    		TERMINAL_112.addFollower(TERMINAL_18);
    		TERMINAL_112.addFollower(TERMINAL_19);
    		TERMINAL_112.addFollower(TERMINAL_20);
    		TERMINAL_112.addFollower(TERMINAL_21);
    		TERMINAL_112.addFollower(TERMINAL_22);
    		TERMINAL_112.addFollower(TERMINAL_23);
    		TERMINAL_112.addFollower(TERMINAL_24);
    		TERMINAL_112.addFollower(TERMINAL_25);
    		TERMINAL_112.addFollower(TERMINAL_26);
    		TERMINAL_112.addFollower(TERMINAL_27);
    		TERMINAL_112.addFollower(TERMINAL_28);
    		TERMINAL_112.addFollower(TERMINAL_29);
    		TERMINAL_112.addFollower(TERMINAL_30);
    		TERMINAL_112.addFollower(TERMINAL_31);
    		TERMINAL_112.addFollower(TERMINAL_32);
    		TERMINAL_112.addFollower(TERMINAL_33);
    		TERMINAL_112.addFollower(TERMINAL_34);
    		TERMINAL_112.addFollower(TERMINAL_35);
    		TERMINAL_112.addFollower(TERMINAL_36);
    		TERMINAL_112.addFollower(TERMINAL_37);
    		TERMINAL_112.addFollower(TERMINAL_38);
    		TERMINAL_112.addFollower(TERMINAL_39);
    		TERMINAL_112.addFollower(TERMINAL_40);
    		TERMINAL_112.addFollower(TERMINAL_41);
    		TERMINAL_112.addFollower(TERMINAL_42);
    		TERMINAL_112.addFollower(TERMINAL_43);
    		TERMINAL_112.addFollower(TERMINAL_44);
    		TERMINAL_112.addFollower(TERMINAL_45);
    		TERMINAL_112.addFollower(TERMINAL_46);
    		TERMINAL_112.addFollower(TERMINAL_47);
    		TERMINAL_112.addFollower(TERMINAL_48);
    		TERMINAL_112.addFollower(TERMINAL_49);
    		TERMINAL_112.addFollower(TERMINAL_50);
    		TERMINAL_112.addFollower(TERMINAL_51);
    		TERMINAL_112.addFollower(TERMINAL_52);
    		TERMINAL_112.addFollower(TERMINAL_53);
    		TERMINAL_112.addFollower(TERMINAL_54);
    		TERMINAL_30.addFollower(TERMINAL_226);
    		TERMINAL_226.addFollower(TERMINAL_8);
    		TERMINAL_226.addFollower(TERMINAL_3);
    		TERMINAL_226.addFollower(TERMINAL_5);
    		TERMINAL_226.addFollower(TERMINAL_6);
    		TERMINAL_226.addFollower(TERMINAL_111);
    		TERMINAL_113.addFollower(TERMINAL_1);
    		TERMINAL_113.addFollower(TERMINAL_9);
    		TERMINAL_113.addFollower(TERMINAL_10);
    		TERMINAL_113.addFollower(TERMINAL_11);
    		TERMINAL_113.addFollower(TERMINAL_12);
    		TERMINAL_113.addFollower(TERMINAL_13);
    		TERMINAL_113.addFollower(TERMINAL_14);
    		TERMINAL_113.addFollower(TERMINAL_15);
    		TERMINAL_113.addFollower(TERMINAL_16);
    		TERMINAL_113.addFollower(TERMINAL_17);
    		TERMINAL_113.addFollower(TERMINAL_18);
    		TERMINAL_113.addFollower(TERMINAL_19);
    		TERMINAL_113.addFollower(TERMINAL_20);
    		TERMINAL_113.addFollower(TERMINAL_21);
    		TERMINAL_113.addFollower(TERMINAL_22);
    		TERMINAL_113.addFollower(TERMINAL_23);
    		TERMINAL_113.addFollower(TERMINAL_24);
    		TERMINAL_113.addFollower(TERMINAL_25);
    		TERMINAL_113.addFollower(TERMINAL_26);
    		TERMINAL_113.addFollower(TERMINAL_27);
    		TERMINAL_113.addFollower(TERMINAL_28);
    		TERMINAL_113.addFollower(TERMINAL_29);
    		TERMINAL_113.addFollower(TERMINAL_30);
    		TERMINAL_113.addFollower(TERMINAL_31);
    		TERMINAL_113.addFollower(TERMINAL_32);
    		TERMINAL_113.addFollower(TERMINAL_33);
    		TERMINAL_113.addFollower(TERMINAL_34);
    		TERMINAL_113.addFollower(TERMINAL_35);
    		TERMINAL_113.addFollower(TERMINAL_36);
    		TERMINAL_113.addFollower(TERMINAL_37);
    		TERMINAL_113.addFollower(TERMINAL_38);
    		TERMINAL_113.addFollower(TERMINAL_39);
    		TERMINAL_113.addFollower(TERMINAL_40);
    		TERMINAL_113.addFollower(TERMINAL_41);
    		TERMINAL_113.addFollower(TERMINAL_42);
    		TERMINAL_113.addFollower(TERMINAL_43);
    		TERMINAL_113.addFollower(TERMINAL_44);
    		TERMINAL_113.addFollower(TERMINAL_45);
    		TERMINAL_113.addFollower(TERMINAL_46);
    		TERMINAL_113.addFollower(TERMINAL_47);
    		TERMINAL_113.addFollower(TERMINAL_48);
    		TERMINAL_113.addFollower(TERMINAL_49);
    		TERMINAL_113.addFollower(TERMINAL_50);
    		TERMINAL_113.addFollower(TERMINAL_51);
    		TERMINAL_113.addFollower(TERMINAL_52);
    		TERMINAL_113.addFollower(TERMINAL_53);
    		TERMINAL_113.addFollower(TERMINAL_54);
    		TERMINAL_31.addFollower(TERMINAL_227);
    		TERMINAL_227.addFollower(TERMINAL_8);
    		TERMINAL_227.addFollower(TERMINAL_3);
    		TERMINAL_227.addFollower(TERMINAL_5);
    		TERMINAL_227.addFollower(TERMINAL_6);
    		TERMINAL_227.addFollower(TERMINAL_111);
    		TERMINAL_114.addFollower(TERMINAL_1);
    		TERMINAL_114.addFollower(TERMINAL_9);
    		TERMINAL_114.addFollower(TERMINAL_10);
    		TERMINAL_114.addFollower(TERMINAL_11);
    		TERMINAL_114.addFollower(TERMINAL_12);
    		TERMINAL_114.addFollower(TERMINAL_13);
    		TERMINAL_114.addFollower(TERMINAL_14);
    		TERMINAL_114.addFollower(TERMINAL_15);
    		TERMINAL_114.addFollower(TERMINAL_16);
    		TERMINAL_114.addFollower(TERMINAL_17);
    		TERMINAL_114.addFollower(TERMINAL_18);
    		TERMINAL_114.addFollower(TERMINAL_19);
    		TERMINAL_114.addFollower(TERMINAL_20);
    		TERMINAL_114.addFollower(TERMINAL_21);
    		TERMINAL_114.addFollower(TERMINAL_22);
    		TERMINAL_114.addFollower(TERMINAL_23);
    		TERMINAL_114.addFollower(TERMINAL_24);
    		TERMINAL_114.addFollower(TERMINAL_25);
    		TERMINAL_114.addFollower(TERMINAL_26);
    		TERMINAL_114.addFollower(TERMINAL_27);
    		TERMINAL_114.addFollower(TERMINAL_28);
    		TERMINAL_114.addFollower(TERMINAL_29);
    		TERMINAL_114.addFollower(TERMINAL_30);
    		TERMINAL_114.addFollower(TERMINAL_31);
    		TERMINAL_114.addFollower(TERMINAL_32);
    		TERMINAL_114.addFollower(TERMINAL_33);
    		TERMINAL_114.addFollower(TERMINAL_34);
    		TERMINAL_114.addFollower(TERMINAL_35);
    		TERMINAL_114.addFollower(TERMINAL_36);
    		TERMINAL_114.addFollower(TERMINAL_37);
    		TERMINAL_114.addFollower(TERMINAL_38);
    		TERMINAL_114.addFollower(TERMINAL_39);
    		TERMINAL_114.addFollower(TERMINAL_40);
    		TERMINAL_114.addFollower(TERMINAL_41);
    		TERMINAL_114.addFollower(TERMINAL_42);
    		TERMINAL_114.addFollower(TERMINAL_43);
    		TERMINAL_114.addFollower(TERMINAL_44);
    		TERMINAL_114.addFollower(TERMINAL_45);
    		TERMINAL_114.addFollower(TERMINAL_46);
    		TERMINAL_114.addFollower(TERMINAL_47);
    		TERMINAL_114.addFollower(TERMINAL_48);
    		TERMINAL_114.addFollower(TERMINAL_49);
    		TERMINAL_114.addFollower(TERMINAL_50);
    		TERMINAL_114.addFollower(TERMINAL_51);
    		TERMINAL_114.addFollower(TERMINAL_52);
    		TERMINAL_114.addFollower(TERMINAL_53);
    		TERMINAL_114.addFollower(TERMINAL_54);
    		TERMINAL_32.addFollower(TERMINAL_228);
    		TERMINAL_228.addFollower(TERMINAL_8);
    		TERMINAL_228.addFollower(TERMINAL_3);
    		TERMINAL_228.addFollower(TERMINAL_5);
    		TERMINAL_228.addFollower(TERMINAL_6);
    		TERMINAL_228.addFollower(TERMINAL_111);
    		TERMINAL_115.addFollower(TERMINAL_1);
    		TERMINAL_115.addFollower(TERMINAL_9);
    		TERMINAL_115.addFollower(TERMINAL_10);
    		TERMINAL_115.addFollower(TERMINAL_11);
    		TERMINAL_115.addFollower(TERMINAL_12);
    		TERMINAL_115.addFollower(TERMINAL_13);
    		TERMINAL_115.addFollower(TERMINAL_14);
    		TERMINAL_115.addFollower(TERMINAL_15);
    		TERMINAL_115.addFollower(TERMINAL_16);
    		TERMINAL_115.addFollower(TERMINAL_17);
    		TERMINAL_115.addFollower(TERMINAL_18);
    		TERMINAL_115.addFollower(TERMINAL_19);
    		TERMINAL_115.addFollower(TERMINAL_20);
    		TERMINAL_115.addFollower(TERMINAL_21);
    		TERMINAL_115.addFollower(TERMINAL_22);
    		TERMINAL_115.addFollower(TERMINAL_23);
    		TERMINAL_115.addFollower(TERMINAL_24);
    		TERMINAL_115.addFollower(TERMINAL_25);
    		TERMINAL_115.addFollower(TERMINAL_26);
    		TERMINAL_115.addFollower(TERMINAL_27);
    		TERMINAL_115.addFollower(TERMINAL_28);
    		TERMINAL_115.addFollower(TERMINAL_29);
    		TERMINAL_115.addFollower(TERMINAL_30);
    		TERMINAL_115.addFollower(TERMINAL_31);
    		TERMINAL_115.addFollower(TERMINAL_32);
    		TERMINAL_115.addFollower(TERMINAL_33);
    		TERMINAL_115.addFollower(TERMINAL_34);
    		TERMINAL_115.addFollower(TERMINAL_35);
    		TERMINAL_115.addFollower(TERMINAL_36);
    		TERMINAL_115.addFollower(TERMINAL_37);
    		TERMINAL_115.addFollower(TERMINAL_38);
    		TERMINAL_115.addFollower(TERMINAL_39);
    		TERMINAL_115.addFollower(TERMINAL_40);
    		TERMINAL_115.addFollower(TERMINAL_41);
    		TERMINAL_115.addFollower(TERMINAL_42);
    		TERMINAL_115.addFollower(TERMINAL_43);
    		TERMINAL_115.addFollower(TERMINAL_44);
    		TERMINAL_115.addFollower(TERMINAL_45);
    		TERMINAL_115.addFollower(TERMINAL_46);
    		TERMINAL_115.addFollower(TERMINAL_47);
    		TERMINAL_115.addFollower(TERMINAL_48);
    		TERMINAL_115.addFollower(TERMINAL_49);
    		TERMINAL_115.addFollower(TERMINAL_50);
    		TERMINAL_115.addFollower(TERMINAL_51);
    		TERMINAL_115.addFollower(TERMINAL_52);
    		TERMINAL_115.addFollower(TERMINAL_53);
    		TERMINAL_115.addFollower(TERMINAL_54);
    		TERMINAL_33.addFollower(TERMINAL_229);
    		TERMINAL_229.addFollower(TERMINAL_8);
    		TERMINAL_229.addFollower(TERMINAL_3);
    		TERMINAL_229.addFollower(TERMINAL_5);
    		TERMINAL_229.addFollower(TERMINAL_6);
    		TERMINAL_229.addFollower(TERMINAL_111);
    		TERMINAL_116.addFollower(TERMINAL_1);
    		TERMINAL_116.addFollower(TERMINAL_9);
    		TERMINAL_116.addFollower(TERMINAL_10);
    		TERMINAL_116.addFollower(TERMINAL_11);
    		TERMINAL_116.addFollower(TERMINAL_12);
    		TERMINAL_116.addFollower(TERMINAL_13);
    		TERMINAL_116.addFollower(TERMINAL_14);
    		TERMINAL_116.addFollower(TERMINAL_15);
    		TERMINAL_116.addFollower(TERMINAL_16);
    		TERMINAL_116.addFollower(TERMINAL_17);
    		TERMINAL_116.addFollower(TERMINAL_18);
    		TERMINAL_116.addFollower(TERMINAL_19);
    		TERMINAL_116.addFollower(TERMINAL_20);
    		TERMINAL_116.addFollower(TERMINAL_21);
    		TERMINAL_116.addFollower(TERMINAL_22);
    		TERMINAL_116.addFollower(TERMINAL_23);
    		TERMINAL_116.addFollower(TERMINAL_24);
    		TERMINAL_116.addFollower(TERMINAL_25);
    		TERMINAL_116.addFollower(TERMINAL_26);
    		TERMINAL_116.addFollower(TERMINAL_27);
    		TERMINAL_116.addFollower(TERMINAL_28);
    		TERMINAL_116.addFollower(TERMINAL_29);
    		TERMINAL_116.addFollower(TERMINAL_30);
    		TERMINAL_116.addFollower(TERMINAL_31);
    		TERMINAL_116.addFollower(TERMINAL_32);
    		TERMINAL_116.addFollower(TERMINAL_33);
    		TERMINAL_116.addFollower(TERMINAL_34);
    		TERMINAL_116.addFollower(TERMINAL_35);
    		TERMINAL_116.addFollower(TERMINAL_36);
    		TERMINAL_116.addFollower(TERMINAL_37);
    		TERMINAL_116.addFollower(TERMINAL_38);
    		TERMINAL_116.addFollower(TERMINAL_39);
    		TERMINAL_116.addFollower(TERMINAL_40);
    		TERMINAL_116.addFollower(TERMINAL_41);
    		TERMINAL_116.addFollower(TERMINAL_42);
    		TERMINAL_116.addFollower(TERMINAL_43);
    		TERMINAL_116.addFollower(TERMINAL_44);
    		TERMINAL_116.addFollower(TERMINAL_45);
    		TERMINAL_116.addFollower(TERMINAL_46);
    		TERMINAL_116.addFollower(TERMINAL_47);
    		TERMINAL_116.addFollower(TERMINAL_48);
    		TERMINAL_116.addFollower(TERMINAL_49);
    		TERMINAL_116.addFollower(TERMINAL_50);
    		TERMINAL_116.addFollower(TERMINAL_51);
    		TERMINAL_116.addFollower(TERMINAL_52);
    		TERMINAL_116.addFollower(TERMINAL_53);
    		TERMINAL_116.addFollower(TERMINAL_54);
    		TERMINAL_34.addFollower(TERMINAL_230);
    		TERMINAL_230.addFollower(TERMINAL_8);
    		TERMINAL_230.addFollower(TERMINAL_3);
    		TERMINAL_230.addFollower(TERMINAL_5);
    		TERMINAL_230.addFollower(TERMINAL_6);
    		TERMINAL_230.addFollower(TERMINAL_111);
    		TERMINAL_117.addFollower(TERMINAL_1);
    		TERMINAL_117.addFollower(TERMINAL_9);
    		TERMINAL_117.addFollower(TERMINAL_10);
    		TERMINAL_117.addFollower(TERMINAL_11);
    		TERMINAL_117.addFollower(TERMINAL_12);
    		TERMINAL_117.addFollower(TERMINAL_13);
    		TERMINAL_117.addFollower(TERMINAL_14);
    		TERMINAL_117.addFollower(TERMINAL_15);
    		TERMINAL_117.addFollower(TERMINAL_16);
    		TERMINAL_117.addFollower(TERMINAL_17);
    		TERMINAL_117.addFollower(TERMINAL_18);
    		TERMINAL_117.addFollower(TERMINAL_19);
    		TERMINAL_117.addFollower(TERMINAL_20);
    		TERMINAL_117.addFollower(TERMINAL_21);
    		TERMINAL_117.addFollower(TERMINAL_22);
    		TERMINAL_117.addFollower(TERMINAL_23);
    		TERMINAL_117.addFollower(TERMINAL_24);
    		TERMINAL_117.addFollower(TERMINAL_25);
    		TERMINAL_117.addFollower(TERMINAL_26);
    		TERMINAL_117.addFollower(TERMINAL_27);
    		TERMINAL_117.addFollower(TERMINAL_28);
    		TERMINAL_117.addFollower(TERMINAL_29);
    		TERMINAL_117.addFollower(TERMINAL_30);
    		TERMINAL_117.addFollower(TERMINAL_31);
    		TERMINAL_117.addFollower(TERMINAL_32);
    		TERMINAL_117.addFollower(TERMINAL_33);
    		TERMINAL_117.addFollower(TERMINAL_34);
    		TERMINAL_117.addFollower(TERMINAL_35);
    		TERMINAL_117.addFollower(TERMINAL_36);
    		TERMINAL_117.addFollower(TERMINAL_37);
    		TERMINAL_117.addFollower(TERMINAL_38);
    		TERMINAL_117.addFollower(TERMINAL_39);
    		TERMINAL_117.addFollower(TERMINAL_40);
    		TERMINAL_117.addFollower(TERMINAL_41);
    		TERMINAL_117.addFollower(TERMINAL_42);
    		TERMINAL_117.addFollower(TERMINAL_43);
    		TERMINAL_117.addFollower(TERMINAL_44);
    		TERMINAL_117.addFollower(TERMINAL_45);
    		TERMINAL_117.addFollower(TERMINAL_46);
    		TERMINAL_117.addFollower(TERMINAL_47);
    		TERMINAL_117.addFollower(TERMINAL_48);
    		TERMINAL_117.addFollower(TERMINAL_49);
    		TERMINAL_117.addFollower(TERMINAL_50);
    		TERMINAL_117.addFollower(TERMINAL_51);
    		TERMINAL_117.addFollower(TERMINAL_52);
    		TERMINAL_117.addFollower(TERMINAL_53);
    		TERMINAL_117.addFollower(TERMINAL_54);
    		TERMINAL_35.addFollower(TERMINAL_231);
    		TERMINAL_231.addFollower(TERMINAL_8);
    		TERMINAL_231.addFollower(TERMINAL_3);
    		TERMINAL_231.addFollower(TERMINAL_5);
    		TERMINAL_231.addFollower(TERMINAL_6);
    		TERMINAL_231.addFollower(TERMINAL_111);
    		TERMINAL_118.addFollower(TERMINAL_1);
    		TERMINAL_118.addFollower(TERMINAL_9);
    		TERMINAL_118.addFollower(TERMINAL_10);
    		TERMINAL_118.addFollower(TERMINAL_11);
    		TERMINAL_118.addFollower(TERMINAL_12);
    		TERMINAL_118.addFollower(TERMINAL_13);
    		TERMINAL_118.addFollower(TERMINAL_14);
    		TERMINAL_118.addFollower(TERMINAL_15);
    		TERMINAL_118.addFollower(TERMINAL_16);
    		TERMINAL_118.addFollower(TERMINAL_17);
    		TERMINAL_118.addFollower(TERMINAL_18);
    		TERMINAL_118.addFollower(TERMINAL_19);
    		TERMINAL_118.addFollower(TERMINAL_20);
    		TERMINAL_118.addFollower(TERMINAL_21);
    		TERMINAL_118.addFollower(TERMINAL_22);
    		TERMINAL_118.addFollower(TERMINAL_23);
    		TERMINAL_118.addFollower(TERMINAL_24);
    		TERMINAL_118.addFollower(TERMINAL_25);
    		TERMINAL_118.addFollower(TERMINAL_26);
    		TERMINAL_118.addFollower(TERMINAL_27);
    		TERMINAL_118.addFollower(TERMINAL_28);
    		TERMINAL_118.addFollower(TERMINAL_29);
    		TERMINAL_118.addFollower(TERMINAL_30);
    		TERMINAL_118.addFollower(TERMINAL_31);
    		TERMINAL_118.addFollower(TERMINAL_32);
    		TERMINAL_118.addFollower(TERMINAL_33);
    		TERMINAL_118.addFollower(TERMINAL_34);
    		TERMINAL_118.addFollower(TERMINAL_35);
    		TERMINAL_118.addFollower(TERMINAL_36);
    		TERMINAL_118.addFollower(TERMINAL_37);
    		TERMINAL_118.addFollower(TERMINAL_38);
    		TERMINAL_118.addFollower(TERMINAL_39);
    		TERMINAL_118.addFollower(TERMINAL_40);
    		TERMINAL_118.addFollower(TERMINAL_41);
    		TERMINAL_118.addFollower(TERMINAL_42);
    		TERMINAL_118.addFollower(TERMINAL_43);
    		TERMINAL_118.addFollower(TERMINAL_44);
    		TERMINAL_118.addFollower(TERMINAL_45);
    		TERMINAL_118.addFollower(TERMINAL_46);
    		TERMINAL_118.addFollower(TERMINAL_47);
    		TERMINAL_118.addFollower(TERMINAL_48);
    		TERMINAL_118.addFollower(TERMINAL_49);
    		TERMINAL_118.addFollower(TERMINAL_50);
    		TERMINAL_118.addFollower(TERMINAL_51);
    		TERMINAL_118.addFollower(TERMINAL_52);
    		TERMINAL_118.addFollower(TERMINAL_53);
    		TERMINAL_118.addFollower(TERMINAL_54);
    		TERMINAL_36.addFollower(TERMINAL_232);
    		TERMINAL_232.addFollower(TERMINAL_8);
    		TERMINAL_232.addFollower(TERMINAL_3);
    		TERMINAL_232.addFollower(TERMINAL_5);
    		TERMINAL_232.addFollower(TERMINAL_6);
    		TERMINAL_233.addFollower(TERMINAL_1);
    		TERMINAL_233.addFollower(TERMINAL_9);
    		TERMINAL_233.addFollower(TERMINAL_10);
    		TERMINAL_233.addFollower(TERMINAL_11);
    		TERMINAL_233.addFollower(TERMINAL_12);
    		TERMINAL_233.addFollower(TERMINAL_13);
    		TERMINAL_233.addFollower(TERMINAL_14);
    		TERMINAL_233.addFollower(TERMINAL_15);
    		TERMINAL_233.addFollower(TERMINAL_16);
    		TERMINAL_233.addFollower(TERMINAL_17);
    		TERMINAL_233.addFollower(TERMINAL_18);
    		TERMINAL_233.addFollower(TERMINAL_19);
    		TERMINAL_233.addFollower(TERMINAL_20);
    		TERMINAL_233.addFollower(TERMINAL_21);
    		TERMINAL_233.addFollower(TERMINAL_22);
    		TERMINAL_233.addFollower(TERMINAL_23);
    		TERMINAL_233.addFollower(TERMINAL_24);
    		TERMINAL_233.addFollower(TERMINAL_25);
    		TERMINAL_233.addFollower(TERMINAL_26);
    		TERMINAL_233.addFollower(TERMINAL_27);
    		TERMINAL_233.addFollower(TERMINAL_28);
    		TERMINAL_233.addFollower(TERMINAL_29);
    		TERMINAL_233.addFollower(TERMINAL_30);
    		TERMINAL_233.addFollower(TERMINAL_31);
    		TERMINAL_233.addFollower(TERMINAL_32);
    		TERMINAL_233.addFollower(TERMINAL_33);
    		TERMINAL_233.addFollower(TERMINAL_34);
    		TERMINAL_233.addFollower(TERMINAL_35);
    		TERMINAL_233.addFollower(TERMINAL_36);
    		TERMINAL_233.addFollower(TERMINAL_37);
    		TERMINAL_233.addFollower(TERMINAL_38);
    		TERMINAL_233.addFollower(TERMINAL_39);
    		TERMINAL_233.addFollower(TERMINAL_40);
    		TERMINAL_233.addFollower(TERMINAL_41);
    		TERMINAL_233.addFollower(TERMINAL_42);
    		TERMINAL_233.addFollower(TERMINAL_43);
    		TERMINAL_233.addFollower(TERMINAL_44);
    		TERMINAL_233.addFollower(TERMINAL_45);
    		TERMINAL_233.addFollower(TERMINAL_46);
    		TERMINAL_233.addFollower(TERMINAL_47);
    		TERMINAL_233.addFollower(TERMINAL_48);
    		TERMINAL_233.addFollower(TERMINAL_49);
    		TERMINAL_233.addFollower(TERMINAL_50);
    		TERMINAL_233.addFollower(TERMINAL_51);
    		TERMINAL_233.addFollower(TERMINAL_52);
    		TERMINAL_233.addFollower(TERMINAL_53);
    		TERMINAL_233.addFollower(TERMINAL_54);
    		TERMINAL_37.addFollower(TERMINAL_234);
    		TERMINAL_234.addFollower(TERMINAL_8);
    		TERMINAL_234.addFollower(TERMINAL_3);
    		TERMINAL_234.addFollower(TERMINAL_5);
    		TERMINAL_234.addFollower(TERMINAL_6);
    		TERMINAL_235.addFollower(TERMINAL_1);
    		TERMINAL_235.addFollower(TERMINAL_9);
    		TERMINAL_235.addFollower(TERMINAL_10);
    		TERMINAL_235.addFollower(TERMINAL_11);
    		TERMINAL_235.addFollower(TERMINAL_12);
    		TERMINAL_235.addFollower(TERMINAL_13);
    		TERMINAL_235.addFollower(TERMINAL_14);
    		TERMINAL_235.addFollower(TERMINAL_15);
    		TERMINAL_235.addFollower(TERMINAL_16);
    		TERMINAL_235.addFollower(TERMINAL_17);
    		TERMINAL_235.addFollower(TERMINAL_18);
    		TERMINAL_235.addFollower(TERMINAL_19);
    		TERMINAL_235.addFollower(TERMINAL_20);
    		TERMINAL_235.addFollower(TERMINAL_21);
    		TERMINAL_235.addFollower(TERMINAL_22);
    		TERMINAL_235.addFollower(TERMINAL_23);
    		TERMINAL_235.addFollower(TERMINAL_24);
    		TERMINAL_235.addFollower(TERMINAL_25);
    		TERMINAL_235.addFollower(TERMINAL_26);
    		TERMINAL_235.addFollower(TERMINAL_27);
    		TERMINAL_235.addFollower(TERMINAL_28);
    		TERMINAL_235.addFollower(TERMINAL_29);
    		TERMINAL_235.addFollower(TERMINAL_30);
    		TERMINAL_235.addFollower(TERMINAL_31);
    		TERMINAL_235.addFollower(TERMINAL_32);
    		TERMINAL_235.addFollower(TERMINAL_33);
    		TERMINAL_235.addFollower(TERMINAL_34);
    		TERMINAL_235.addFollower(TERMINAL_35);
    		TERMINAL_235.addFollower(TERMINAL_36);
    		TERMINAL_235.addFollower(TERMINAL_37);
    		TERMINAL_235.addFollower(TERMINAL_38);
    		TERMINAL_235.addFollower(TERMINAL_39);
    		TERMINAL_235.addFollower(TERMINAL_40);
    		TERMINAL_235.addFollower(TERMINAL_41);
    		TERMINAL_235.addFollower(TERMINAL_42);
    		TERMINAL_235.addFollower(TERMINAL_43);
    		TERMINAL_235.addFollower(TERMINAL_44);
    		TERMINAL_235.addFollower(TERMINAL_45);
    		TERMINAL_235.addFollower(TERMINAL_46);
    		TERMINAL_235.addFollower(TERMINAL_47);
    		TERMINAL_235.addFollower(TERMINAL_48);
    		TERMINAL_235.addFollower(TERMINAL_49);
    		TERMINAL_235.addFollower(TERMINAL_50);
    		TERMINAL_235.addFollower(TERMINAL_51);
    		TERMINAL_235.addFollower(TERMINAL_52);
    		TERMINAL_235.addFollower(TERMINAL_53);
    		TERMINAL_235.addFollower(TERMINAL_54);
    	}
    	public static void wire2() {
    		TERMINAL_38.addFollower(TERMINAL_236);
    		TERMINAL_236.addFollower(TERMINAL_8);
    		TERMINAL_236.addFollower(TERMINAL_3);
    		TERMINAL_236.addFollower(TERMINAL_5);
    		TERMINAL_236.addFollower(TERMINAL_6);
    		TERMINAL_237.addFollower(TERMINAL_1);
    		TERMINAL_237.addFollower(TERMINAL_9);
    		TERMINAL_237.addFollower(TERMINAL_10);
    		TERMINAL_237.addFollower(TERMINAL_11);
    		TERMINAL_237.addFollower(TERMINAL_12);
    		TERMINAL_237.addFollower(TERMINAL_13);
    		TERMINAL_237.addFollower(TERMINAL_14);
    		TERMINAL_237.addFollower(TERMINAL_15);
    		TERMINAL_237.addFollower(TERMINAL_16);
    		TERMINAL_237.addFollower(TERMINAL_17);
    		TERMINAL_237.addFollower(TERMINAL_18);
    		TERMINAL_237.addFollower(TERMINAL_19);
    		TERMINAL_237.addFollower(TERMINAL_20);
    		TERMINAL_237.addFollower(TERMINAL_21);
    		TERMINAL_237.addFollower(TERMINAL_22);
    		TERMINAL_237.addFollower(TERMINAL_23);
    		TERMINAL_237.addFollower(TERMINAL_24);
    		TERMINAL_237.addFollower(TERMINAL_25);
    		TERMINAL_237.addFollower(TERMINAL_26);
    		TERMINAL_237.addFollower(TERMINAL_27);
    		TERMINAL_237.addFollower(TERMINAL_28);
    		TERMINAL_237.addFollower(TERMINAL_29);
    		TERMINAL_237.addFollower(TERMINAL_30);
    		TERMINAL_237.addFollower(TERMINAL_31);
    		TERMINAL_237.addFollower(TERMINAL_32);
    		TERMINAL_237.addFollower(TERMINAL_33);
    		TERMINAL_237.addFollower(TERMINAL_34);
    		TERMINAL_237.addFollower(TERMINAL_35);
    		TERMINAL_237.addFollower(TERMINAL_36);
    		TERMINAL_237.addFollower(TERMINAL_37);
    		TERMINAL_237.addFollower(TERMINAL_38);
    		TERMINAL_237.addFollower(TERMINAL_39);
    		TERMINAL_237.addFollower(TERMINAL_40);
    		TERMINAL_237.addFollower(TERMINAL_41);
    		TERMINAL_237.addFollower(TERMINAL_42);
    		TERMINAL_237.addFollower(TERMINAL_43);
    		TERMINAL_237.addFollower(TERMINAL_44);
    		TERMINAL_237.addFollower(TERMINAL_45);
    		TERMINAL_237.addFollower(TERMINAL_46);
    		TERMINAL_237.addFollower(TERMINAL_47);
    		TERMINAL_237.addFollower(TERMINAL_48);
    		TERMINAL_237.addFollower(TERMINAL_49);
    		TERMINAL_237.addFollower(TERMINAL_50);
    		TERMINAL_237.addFollower(TERMINAL_51);
    		TERMINAL_237.addFollower(TERMINAL_52);
    		TERMINAL_237.addFollower(TERMINAL_53);
    		TERMINAL_237.addFollower(TERMINAL_54);
    		TERMINAL_39.addFollower(TERMINAL_238);
    		TERMINAL_238.addFollower(TERMINAL_8);
    		TERMINAL_238.addFollower(TERMINAL_3);
    		TERMINAL_238.addFollower(TERMINAL_5);
    		TERMINAL_238.addFollower(TERMINAL_6);
    		TERMINAL_81.addFollower(TERMINAL_1);
    		TERMINAL_81.addFollower(TERMINAL_9);
    		TERMINAL_81.addFollower(TERMINAL_10);
    		TERMINAL_81.addFollower(TERMINAL_11);
    		TERMINAL_81.addFollower(TERMINAL_12);
    		TERMINAL_81.addFollower(TERMINAL_13);
    		TERMINAL_81.addFollower(TERMINAL_14);
    		TERMINAL_81.addFollower(TERMINAL_15);
    		TERMINAL_81.addFollower(TERMINAL_16);
    		TERMINAL_81.addFollower(TERMINAL_17);
    		TERMINAL_81.addFollower(TERMINAL_18);
    		TERMINAL_81.addFollower(TERMINAL_19);
    		TERMINAL_81.addFollower(TERMINAL_20);
    		TERMINAL_81.addFollower(TERMINAL_21);
    		TERMINAL_81.addFollower(TERMINAL_22);
    		TERMINAL_81.addFollower(TERMINAL_23);
    		TERMINAL_81.addFollower(TERMINAL_24);
    		TERMINAL_81.addFollower(TERMINAL_25);
    		TERMINAL_81.addFollower(TERMINAL_26);
    		TERMINAL_81.addFollower(TERMINAL_27);
    		TERMINAL_81.addFollower(TERMINAL_28);
    		TERMINAL_81.addFollower(TERMINAL_29);
    		TERMINAL_81.addFollower(TERMINAL_30);
    		TERMINAL_81.addFollower(TERMINAL_31);
    		TERMINAL_81.addFollower(TERMINAL_32);
    		TERMINAL_81.addFollower(TERMINAL_33);
    		TERMINAL_81.addFollower(TERMINAL_34);
    		TERMINAL_81.addFollower(TERMINAL_35);
    		TERMINAL_81.addFollower(TERMINAL_36);
    		TERMINAL_81.addFollower(TERMINAL_37);
    		TERMINAL_81.addFollower(TERMINAL_38);
    		TERMINAL_81.addFollower(TERMINAL_39);
    		TERMINAL_81.addFollower(TERMINAL_40);
    		TERMINAL_81.addFollower(TERMINAL_41);
    		TERMINAL_81.addFollower(TERMINAL_42);
    		TERMINAL_81.addFollower(TERMINAL_43);
    		TERMINAL_81.addFollower(TERMINAL_44);
    		TERMINAL_81.addFollower(TERMINAL_45);
    		TERMINAL_81.addFollower(TERMINAL_46);
    		TERMINAL_81.addFollower(TERMINAL_47);
    		TERMINAL_81.addFollower(TERMINAL_48);
    		TERMINAL_81.addFollower(TERMINAL_49);
    		TERMINAL_81.addFollower(TERMINAL_50);
    		TERMINAL_81.addFollower(TERMINAL_51);
    		TERMINAL_81.addFollower(TERMINAL_52);
    		TERMINAL_81.addFollower(TERMINAL_53);
    		TERMINAL_81.addFollower(TERMINAL_54);
    		TERMINAL_40.addFollower(TERMINAL_239);
    		TERMINAL_239.addFollower(TERMINAL_8);
    		TERMINAL_239.addFollower(TERMINAL_3);
    		TERMINAL_239.addFollower(TERMINAL_5);
    		TERMINAL_239.addFollower(TERMINAL_6);
    		TERMINAL_104.addFollower(TERMINAL_1);
    		TERMINAL_104.addFollower(TERMINAL_9);
    		TERMINAL_104.addFollower(TERMINAL_10);
    		TERMINAL_104.addFollower(TERMINAL_11);
    		TERMINAL_104.addFollower(TERMINAL_12);
    		TERMINAL_104.addFollower(TERMINAL_13);
    		TERMINAL_104.addFollower(TERMINAL_14);
    		TERMINAL_104.addFollower(TERMINAL_15);
    		TERMINAL_104.addFollower(TERMINAL_16);
    		TERMINAL_104.addFollower(TERMINAL_17);
    		TERMINAL_104.addFollower(TERMINAL_18);
    		TERMINAL_104.addFollower(TERMINAL_19);
    		TERMINAL_104.addFollower(TERMINAL_20);
    		TERMINAL_104.addFollower(TERMINAL_21);
    		TERMINAL_104.addFollower(TERMINAL_22);
    		TERMINAL_104.addFollower(TERMINAL_23);
    		TERMINAL_104.addFollower(TERMINAL_24);
    		TERMINAL_104.addFollower(TERMINAL_25);
    		TERMINAL_104.addFollower(TERMINAL_26);
    		TERMINAL_104.addFollower(TERMINAL_27);
    		TERMINAL_104.addFollower(TERMINAL_28);
    		TERMINAL_104.addFollower(TERMINAL_29);
    		TERMINAL_104.addFollower(TERMINAL_30);
    		TERMINAL_104.addFollower(TERMINAL_31);
    		TERMINAL_104.addFollower(TERMINAL_32);
    		TERMINAL_104.addFollower(TERMINAL_33);
    		TERMINAL_104.addFollower(TERMINAL_34);
    		TERMINAL_104.addFollower(TERMINAL_35);
    		TERMINAL_104.addFollower(TERMINAL_36);
    		TERMINAL_104.addFollower(TERMINAL_37);
    		TERMINAL_104.addFollower(TERMINAL_38);
    		TERMINAL_104.addFollower(TERMINAL_39);
    		TERMINAL_104.addFollower(TERMINAL_40);
    		TERMINAL_104.addFollower(TERMINAL_41);
    		TERMINAL_104.addFollower(TERMINAL_42);
    		TERMINAL_104.addFollower(TERMINAL_43);
    		TERMINAL_104.addFollower(TERMINAL_44);
    		TERMINAL_104.addFollower(TERMINAL_45);
    		TERMINAL_104.addFollower(TERMINAL_46);
    		TERMINAL_104.addFollower(TERMINAL_47);
    		TERMINAL_104.addFollower(TERMINAL_48);
    		TERMINAL_104.addFollower(TERMINAL_49);
    		TERMINAL_104.addFollower(TERMINAL_50);
    		TERMINAL_104.addFollower(TERMINAL_51);
    		TERMINAL_104.addFollower(TERMINAL_52);
    		TERMINAL_104.addFollower(TERMINAL_53);
    		TERMINAL_104.addFollower(TERMINAL_54);
    		TERMINAL_41.addFollower(TERMINAL_240);
    		TERMINAL_240.addFollower(TERMINAL_8);
    		TERMINAL_240.addFollower(TERMINAL_3);
    		TERMINAL_240.addFollower(TERMINAL_5);
    		TERMINAL_240.addFollower(TERMINAL_6);
    		TERMINAL_120.addFollower(TERMINAL_1);
    		TERMINAL_120.addFollower(TERMINAL_9);
    		TERMINAL_120.addFollower(TERMINAL_10);
    		TERMINAL_120.addFollower(TERMINAL_11);
    		TERMINAL_120.addFollower(TERMINAL_12);
    		TERMINAL_120.addFollower(TERMINAL_13);
    		TERMINAL_120.addFollower(TERMINAL_14);
    		TERMINAL_120.addFollower(TERMINAL_15);
    		TERMINAL_120.addFollower(TERMINAL_16);
    		TERMINAL_120.addFollower(TERMINAL_17);
    		TERMINAL_120.addFollower(TERMINAL_18);
    		TERMINAL_120.addFollower(TERMINAL_19);
    		TERMINAL_120.addFollower(TERMINAL_20);
    		TERMINAL_120.addFollower(TERMINAL_21);
    		TERMINAL_120.addFollower(TERMINAL_22);
    		TERMINAL_120.addFollower(TERMINAL_23);
    		TERMINAL_120.addFollower(TERMINAL_24);
    		TERMINAL_120.addFollower(TERMINAL_25);
    		TERMINAL_120.addFollower(TERMINAL_26);
    		TERMINAL_120.addFollower(TERMINAL_27);
    		TERMINAL_120.addFollower(TERMINAL_28);
    		TERMINAL_120.addFollower(TERMINAL_29);
    		TERMINAL_120.addFollower(TERMINAL_30);
    		TERMINAL_120.addFollower(TERMINAL_31);
    		TERMINAL_120.addFollower(TERMINAL_32);
    		TERMINAL_120.addFollower(TERMINAL_33);
    		TERMINAL_120.addFollower(TERMINAL_34);
    		TERMINAL_120.addFollower(TERMINAL_35);
    		TERMINAL_120.addFollower(TERMINAL_36);
    		TERMINAL_120.addFollower(TERMINAL_37);
    		TERMINAL_120.addFollower(TERMINAL_38);
    		TERMINAL_120.addFollower(TERMINAL_39);
    		TERMINAL_120.addFollower(TERMINAL_40);
    		TERMINAL_120.addFollower(TERMINAL_41);
    		TERMINAL_120.addFollower(TERMINAL_42);
    		TERMINAL_120.addFollower(TERMINAL_43);
    		TERMINAL_120.addFollower(TERMINAL_44);
    		TERMINAL_120.addFollower(TERMINAL_45);
    		TERMINAL_120.addFollower(TERMINAL_46);
    		TERMINAL_120.addFollower(TERMINAL_47);
    		TERMINAL_120.addFollower(TERMINAL_48);
    		TERMINAL_120.addFollower(TERMINAL_49);
    		TERMINAL_120.addFollower(TERMINAL_50);
    		TERMINAL_120.addFollower(TERMINAL_51);
    		TERMINAL_120.addFollower(TERMINAL_52);
    		TERMINAL_120.addFollower(TERMINAL_53);
    		TERMINAL_120.addFollower(TERMINAL_54);
    		TERMINAL_42.addFollower(TERMINAL_241);
    		TERMINAL_241.addFollower(TERMINAL_8);
    		TERMINAL_241.addFollower(TERMINAL_3);
    		TERMINAL_241.addFollower(TERMINAL_5);
    		TERMINAL_241.addFollower(TERMINAL_6);
    		TERMINAL_177.addFollower(TERMINAL_1);
    		TERMINAL_177.addFollower(TERMINAL_9);
    		TERMINAL_177.addFollower(TERMINAL_10);
    		TERMINAL_177.addFollower(TERMINAL_11);
    		TERMINAL_177.addFollower(TERMINAL_12);
    		TERMINAL_177.addFollower(TERMINAL_13);
    		TERMINAL_177.addFollower(TERMINAL_14);
    		TERMINAL_177.addFollower(TERMINAL_15);
    		TERMINAL_177.addFollower(TERMINAL_16);
    		TERMINAL_177.addFollower(TERMINAL_17);
    		TERMINAL_177.addFollower(TERMINAL_18);
    		TERMINAL_177.addFollower(TERMINAL_19);
    		TERMINAL_177.addFollower(TERMINAL_20);
    		TERMINAL_177.addFollower(TERMINAL_21);
    		TERMINAL_177.addFollower(TERMINAL_22);
    		TERMINAL_177.addFollower(TERMINAL_23);
    		TERMINAL_177.addFollower(TERMINAL_24);
    		TERMINAL_177.addFollower(TERMINAL_25);
    		TERMINAL_177.addFollower(TERMINAL_26);
    		TERMINAL_177.addFollower(TERMINAL_27);
    		TERMINAL_177.addFollower(TERMINAL_28);
    		TERMINAL_177.addFollower(TERMINAL_29);
    		TERMINAL_177.addFollower(TERMINAL_30);
    		TERMINAL_177.addFollower(TERMINAL_31);
    		TERMINAL_177.addFollower(TERMINAL_32);
    		TERMINAL_177.addFollower(TERMINAL_33);
    		TERMINAL_177.addFollower(TERMINAL_34);
    		TERMINAL_177.addFollower(TERMINAL_35);
    		TERMINAL_177.addFollower(TERMINAL_36);
    		TERMINAL_177.addFollower(TERMINAL_37);
    		TERMINAL_177.addFollower(TERMINAL_38);
    		TERMINAL_177.addFollower(TERMINAL_39);
    		TERMINAL_177.addFollower(TERMINAL_40);
    		TERMINAL_177.addFollower(TERMINAL_41);
    		TERMINAL_177.addFollower(TERMINAL_42);
    		TERMINAL_177.addFollower(TERMINAL_43);
    		TERMINAL_177.addFollower(TERMINAL_44);
    		TERMINAL_177.addFollower(TERMINAL_45);
    		TERMINAL_177.addFollower(TERMINAL_46);
    		TERMINAL_177.addFollower(TERMINAL_47);
    		TERMINAL_177.addFollower(TERMINAL_48);
    		TERMINAL_177.addFollower(TERMINAL_49);
    		TERMINAL_177.addFollower(TERMINAL_50);
    		TERMINAL_177.addFollower(TERMINAL_51);
    		TERMINAL_177.addFollower(TERMINAL_52);
    		TERMINAL_177.addFollower(TERMINAL_53);
    		TERMINAL_177.addFollower(TERMINAL_54);
    		TERMINAL_43.addFollower(TERMINAL_242);
    		TERMINAL_242.addFollower(TERMINAL_3);
    		TERMINAL_242.addFollower(TERMINAL_5);
    		TERMINAL_242.addFollower(TERMINAL_6);
    		TERMINAL_242.addFollower(TERMINAL_56);
    		TERMINAL_242.addFollower(TERMINAL_57);
    		TERMINAL_242.addFollower(TERMINAL_58);
    		TERMINAL_242.addFollower(TERMINAL_59);
    		TERMINAL_242.addFollower(TERMINAL_60);
    		TERMINAL_242.addFollower(TERMINAL_61);
    		TERMINAL_242.addFollower(TERMINAL_62);
    		TERMINAL_242.addFollower(TERMINAL_63);
    		TERMINAL_242.addFollower(TERMINAL_64);
    		TERMINAL_242.addFollower(TERMINAL_65);
    		TERMINAL_242.addFollower(TERMINAL_66);
    		TERMINAL_242.addFollower(TERMINAL_67);
    		TERMINAL_242.addFollower(TERMINAL_68);
    		TERMINAL_242.addFollower(TERMINAL_69);
    		TERMINAL_242.addFollower(TERMINAL_70);
    		TERMINAL_242.addFollower(TERMINAL_71);
    		TERMINAL_242.addFollower(TERMINAL_72);
    		TERMINAL_82.addFollower(TERMINAL_8);
    		TERMINAL_82.addFollower(TERMINAL_3);
    		TERMINAL_82.addFollower(TERMINAL_5);
    		TERMINAL_82.addFollower(TERMINAL_6);
    		TERMINAL_82.addFollower(TERMINAL_111);
    		TERMINAL_82.addFollower(TERMINAL_156);
    		TERMINAL_156.addFollower(TERMINAL_243);
    		TERMINAL_243.addFollower(TERMINAL_3);
    		TERMINAL_243.addFollower(TERMINAL_5);
    		TERMINAL_243.addFollower(TERMINAL_6);
    		TERMINAL_243.addFollower(TERMINAL_157);
    		TERMINAL_157.addFollower(TERMINAL_244);
    		TERMINAL_244.addFollower(TERMINAL_1);
    		TERMINAL_244.addFollower(TERMINAL_9);
    		TERMINAL_244.addFollower(TERMINAL_10);
    		TERMINAL_244.addFollower(TERMINAL_11);
    		TERMINAL_244.addFollower(TERMINAL_12);
    		TERMINAL_244.addFollower(TERMINAL_13);
    		TERMINAL_244.addFollower(TERMINAL_14);
    		TERMINAL_244.addFollower(TERMINAL_15);
    		TERMINAL_244.addFollower(TERMINAL_16);
    		TERMINAL_244.addFollower(TERMINAL_17);
    		TERMINAL_244.addFollower(TERMINAL_18);
    		TERMINAL_244.addFollower(TERMINAL_19);
    		TERMINAL_244.addFollower(TERMINAL_20);
    		TERMINAL_244.addFollower(TERMINAL_21);
    		TERMINAL_244.addFollower(TERMINAL_22);
    		TERMINAL_244.addFollower(TERMINAL_23);
    		TERMINAL_244.addFollower(TERMINAL_24);
    		TERMINAL_244.addFollower(TERMINAL_25);
    		TERMINAL_244.addFollower(TERMINAL_26);
    		TERMINAL_244.addFollower(TERMINAL_27);
    		TERMINAL_244.addFollower(TERMINAL_28);
    		TERMINAL_244.addFollower(TERMINAL_29);
    		TERMINAL_244.addFollower(TERMINAL_30);
    		TERMINAL_244.addFollower(TERMINAL_31);
    		TERMINAL_244.addFollower(TERMINAL_32);
    		TERMINAL_244.addFollower(TERMINAL_33);
    		TERMINAL_244.addFollower(TERMINAL_34);
    		TERMINAL_244.addFollower(TERMINAL_35);
    		TERMINAL_244.addFollower(TERMINAL_36);
    		TERMINAL_244.addFollower(TERMINAL_37);
    		TERMINAL_244.addFollower(TERMINAL_38);
    		TERMINAL_244.addFollower(TERMINAL_39);
    		TERMINAL_244.addFollower(TERMINAL_40);
    		TERMINAL_244.addFollower(TERMINAL_41);
    		TERMINAL_244.addFollower(TERMINAL_42);
    		TERMINAL_244.addFollower(TERMINAL_43);
    		TERMINAL_244.addFollower(TERMINAL_44);
    		TERMINAL_244.addFollower(TERMINAL_45);
    		TERMINAL_244.addFollower(TERMINAL_46);
    		TERMINAL_244.addFollower(TERMINAL_47);
    		TERMINAL_244.addFollower(TERMINAL_48);
    		TERMINAL_244.addFollower(TERMINAL_49);
    		TERMINAL_244.addFollower(TERMINAL_50);
    		TERMINAL_244.addFollower(TERMINAL_51);
    		TERMINAL_244.addFollower(TERMINAL_52);
    		TERMINAL_244.addFollower(TERMINAL_53);
    		TERMINAL_244.addFollower(TERMINAL_54);
    		TERMINAL_44.addFollower(TERMINAL_245);
    		TERMINAL_245.addFollower(TERMINAL_8);
    		TERMINAL_245.addFollower(TERMINAL_3);
    		TERMINAL_245.addFollower(TERMINAL_5);
    		TERMINAL_245.addFollower(TERMINAL_6);
    		TERMINAL_246.addFollower(TERMINAL_1);
    		TERMINAL_246.addFollower(TERMINAL_9);
    		TERMINAL_246.addFollower(TERMINAL_10);
    		TERMINAL_246.addFollower(TERMINAL_11);
    		TERMINAL_246.addFollower(TERMINAL_12);
    		TERMINAL_246.addFollower(TERMINAL_13);
    		TERMINAL_246.addFollower(TERMINAL_14);
    		TERMINAL_246.addFollower(TERMINAL_15);
    		TERMINAL_246.addFollower(TERMINAL_16);
    		TERMINAL_246.addFollower(TERMINAL_17);
    		TERMINAL_246.addFollower(TERMINAL_18);
    		TERMINAL_246.addFollower(TERMINAL_19);
    		TERMINAL_246.addFollower(TERMINAL_20);
    		TERMINAL_246.addFollower(TERMINAL_21);
    		TERMINAL_246.addFollower(TERMINAL_22);
    		TERMINAL_246.addFollower(TERMINAL_23);
    		TERMINAL_246.addFollower(TERMINAL_24);
    		TERMINAL_246.addFollower(TERMINAL_25);
    		TERMINAL_246.addFollower(TERMINAL_26);
    		TERMINAL_246.addFollower(TERMINAL_27);
    		TERMINAL_246.addFollower(TERMINAL_28);
    		TERMINAL_246.addFollower(TERMINAL_29);
    		TERMINAL_246.addFollower(TERMINAL_30);
    		TERMINAL_246.addFollower(TERMINAL_31);
    		TERMINAL_246.addFollower(TERMINAL_32);
    		TERMINAL_246.addFollower(TERMINAL_33);
    		TERMINAL_246.addFollower(TERMINAL_34);
    		TERMINAL_246.addFollower(TERMINAL_35);
    		TERMINAL_246.addFollower(TERMINAL_36);
    		TERMINAL_246.addFollower(TERMINAL_37);
    		TERMINAL_246.addFollower(TERMINAL_38);
    		TERMINAL_246.addFollower(TERMINAL_39);
    		TERMINAL_246.addFollower(TERMINAL_40);
    		TERMINAL_246.addFollower(TERMINAL_41);
    		TERMINAL_246.addFollower(TERMINAL_42);
    		TERMINAL_246.addFollower(TERMINAL_43);
    		TERMINAL_246.addFollower(TERMINAL_44);
    		TERMINAL_246.addFollower(TERMINAL_45);
    		TERMINAL_246.addFollower(TERMINAL_46);
    		TERMINAL_246.addFollower(TERMINAL_47);
    		TERMINAL_246.addFollower(TERMINAL_48);
    		TERMINAL_246.addFollower(TERMINAL_49);
    		TERMINAL_246.addFollower(TERMINAL_50);
    		TERMINAL_246.addFollower(TERMINAL_51);
    		TERMINAL_246.addFollower(TERMINAL_52);
    		TERMINAL_246.addFollower(TERMINAL_53);
    		TERMINAL_246.addFollower(TERMINAL_54);
    		TERMINAL_45.addFollower(TERMINAL_247);
    		TERMINAL_247.addFollower(TERMINAL_8);
    		TERMINAL_247.addFollower(TERMINAL_3);
    		TERMINAL_247.addFollower(TERMINAL_5);
    		TERMINAL_247.addFollower(TERMINAL_6);
    		TERMINAL_248.addFollower(TERMINAL_1);
    		TERMINAL_248.addFollower(TERMINAL_9);
    		TERMINAL_248.addFollower(TERMINAL_10);
    		TERMINAL_248.addFollower(TERMINAL_11);
    		TERMINAL_248.addFollower(TERMINAL_12);
    		TERMINAL_248.addFollower(TERMINAL_13);
    		TERMINAL_248.addFollower(TERMINAL_14);
    		TERMINAL_248.addFollower(TERMINAL_15);
    		TERMINAL_248.addFollower(TERMINAL_16);
    		TERMINAL_248.addFollower(TERMINAL_17);
    		TERMINAL_248.addFollower(TERMINAL_18);
    		TERMINAL_248.addFollower(TERMINAL_19);
    		TERMINAL_248.addFollower(TERMINAL_20);
    		TERMINAL_248.addFollower(TERMINAL_21);
    		TERMINAL_248.addFollower(TERMINAL_22);
    		TERMINAL_248.addFollower(TERMINAL_23);
    		TERMINAL_248.addFollower(TERMINAL_24);
    		TERMINAL_248.addFollower(TERMINAL_25);
    		TERMINAL_248.addFollower(TERMINAL_26);
    		TERMINAL_248.addFollower(TERMINAL_27);
    		TERMINAL_248.addFollower(TERMINAL_28);
    		TERMINAL_248.addFollower(TERMINAL_29);
    		TERMINAL_248.addFollower(TERMINAL_30);
    		TERMINAL_248.addFollower(TERMINAL_31);
    		TERMINAL_248.addFollower(TERMINAL_32);
    		TERMINAL_248.addFollower(TERMINAL_33);
    		TERMINAL_248.addFollower(TERMINAL_34);
    		TERMINAL_248.addFollower(TERMINAL_35);
    		TERMINAL_248.addFollower(TERMINAL_36);
    		TERMINAL_248.addFollower(TERMINAL_37);
    		TERMINAL_248.addFollower(TERMINAL_38);
    		TERMINAL_248.addFollower(TERMINAL_39);
    		TERMINAL_248.addFollower(TERMINAL_40);
    		TERMINAL_248.addFollower(TERMINAL_41);
    		TERMINAL_248.addFollower(TERMINAL_42);
    		TERMINAL_248.addFollower(TERMINAL_43);
    		TERMINAL_248.addFollower(TERMINAL_44);
    		TERMINAL_248.addFollower(TERMINAL_45);
    		TERMINAL_248.addFollower(TERMINAL_46);
    		TERMINAL_248.addFollower(TERMINAL_47);
    		TERMINAL_248.addFollower(TERMINAL_48);
    		TERMINAL_248.addFollower(TERMINAL_49);
    		TERMINAL_248.addFollower(TERMINAL_50);
    		TERMINAL_248.addFollower(TERMINAL_51);
    		TERMINAL_248.addFollower(TERMINAL_52);
    		TERMINAL_248.addFollower(TERMINAL_53);
    		TERMINAL_248.addFollower(TERMINAL_54);
    		TERMINAL_46.addFollower(TERMINAL_249);
    		TERMINAL_249.addFollower(TERMINAL_8);
    		TERMINAL_249.addFollower(TERMINAL_3);
    		TERMINAL_249.addFollower(TERMINAL_5);
    		TERMINAL_249.addFollower(TERMINAL_6);
    		TERMINAL_249.addFollower(TERMINAL_56);
    		TERMINAL_249.addFollower(TERMINAL_57);
    		TERMINAL_249.addFollower(TERMINAL_58);
    		TERMINAL_249.addFollower(TERMINAL_59);
    		TERMINAL_249.addFollower(TERMINAL_60);
    		TERMINAL_249.addFollower(TERMINAL_61);
    		TERMINAL_249.addFollower(TERMINAL_62);
    		TERMINAL_249.addFollower(TERMINAL_63);
    		TERMINAL_249.addFollower(TERMINAL_64);
    		TERMINAL_249.addFollower(TERMINAL_65);
    		TERMINAL_249.addFollower(TERMINAL_66);
    		TERMINAL_249.addFollower(TERMINAL_67);
    		TERMINAL_249.addFollower(TERMINAL_68);
    		TERMINAL_249.addFollower(TERMINAL_69);
    		TERMINAL_249.addFollower(TERMINAL_70);
    		TERMINAL_249.addFollower(TERMINAL_71);
    		TERMINAL_249.addFollower(TERMINAL_72);
    		TERMINAL_159.addFollower(TERMINAL_1);
    		TERMINAL_159.addFollower(TERMINAL_9);
    		TERMINAL_159.addFollower(TERMINAL_10);
    		TERMINAL_159.addFollower(TERMINAL_11);
    		TERMINAL_159.addFollower(TERMINAL_12);
    		TERMINAL_159.addFollower(TERMINAL_13);
    		TERMINAL_159.addFollower(TERMINAL_14);
    		TERMINAL_159.addFollower(TERMINAL_15);
    		TERMINAL_159.addFollower(TERMINAL_16);
    		TERMINAL_159.addFollower(TERMINAL_17);
    		TERMINAL_159.addFollower(TERMINAL_18);
    		TERMINAL_159.addFollower(TERMINAL_19);
    		TERMINAL_159.addFollower(TERMINAL_20);
    		TERMINAL_159.addFollower(TERMINAL_21);
    		TERMINAL_159.addFollower(TERMINAL_22);
    		TERMINAL_159.addFollower(TERMINAL_23);
    		TERMINAL_159.addFollower(TERMINAL_24);
    		TERMINAL_159.addFollower(TERMINAL_25);
    		TERMINAL_159.addFollower(TERMINAL_26);
    		TERMINAL_159.addFollower(TERMINAL_27);
    		TERMINAL_159.addFollower(TERMINAL_28);
    		TERMINAL_159.addFollower(TERMINAL_29);
    		TERMINAL_159.addFollower(TERMINAL_30);
    		TERMINAL_159.addFollower(TERMINAL_31);
    		TERMINAL_159.addFollower(TERMINAL_32);
    		TERMINAL_159.addFollower(TERMINAL_33);
    		TERMINAL_159.addFollower(TERMINAL_34);
    		TERMINAL_159.addFollower(TERMINAL_35);
    		TERMINAL_159.addFollower(TERMINAL_36);
    		TERMINAL_159.addFollower(TERMINAL_37);
    		TERMINAL_159.addFollower(TERMINAL_38);
    		TERMINAL_159.addFollower(TERMINAL_39);
    		TERMINAL_159.addFollower(TERMINAL_40);
    		TERMINAL_159.addFollower(TERMINAL_41);
    		TERMINAL_159.addFollower(TERMINAL_42);
    		TERMINAL_159.addFollower(TERMINAL_43);
    		TERMINAL_159.addFollower(TERMINAL_44);
    		TERMINAL_159.addFollower(TERMINAL_45);
    		TERMINAL_159.addFollower(TERMINAL_46);
    		TERMINAL_159.addFollower(TERMINAL_47);
    		TERMINAL_159.addFollower(TERMINAL_48);
    		TERMINAL_159.addFollower(TERMINAL_49);
    		TERMINAL_159.addFollower(TERMINAL_50);
    		TERMINAL_159.addFollower(TERMINAL_51);
    		TERMINAL_159.addFollower(TERMINAL_52);
    		TERMINAL_159.addFollower(TERMINAL_53);
    		TERMINAL_159.addFollower(TERMINAL_54);
    		TERMINAL_47.addFollower(TERMINAL_250);
    		TERMINAL_250.addFollower(TERMINAL_8);
    		TERMINAL_250.addFollower(TERMINAL_3);
    		TERMINAL_250.addFollower(TERMINAL_5);
    		TERMINAL_250.addFollower(TERMINAL_6);
    		TERMINAL_250.addFollower(TERMINAL_111);
    		TERMINAL_251.addFollower(TERMINAL_1);
    		TERMINAL_251.addFollower(TERMINAL_9);
    		TERMINAL_251.addFollower(TERMINAL_10);
    		TERMINAL_251.addFollower(TERMINAL_11);
    		TERMINAL_251.addFollower(TERMINAL_12);
    		TERMINAL_251.addFollower(TERMINAL_13);
    		TERMINAL_251.addFollower(TERMINAL_14);
    		TERMINAL_251.addFollower(TERMINAL_15);
    		TERMINAL_251.addFollower(TERMINAL_16);
    		TERMINAL_251.addFollower(TERMINAL_17);
    		TERMINAL_251.addFollower(TERMINAL_18);
    		TERMINAL_251.addFollower(TERMINAL_19);
    		TERMINAL_251.addFollower(TERMINAL_20);
    		TERMINAL_251.addFollower(TERMINAL_21);
    		TERMINAL_251.addFollower(TERMINAL_22);
    		TERMINAL_251.addFollower(TERMINAL_23);
    		TERMINAL_251.addFollower(TERMINAL_24);
    		TERMINAL_251.addFollower(TERMINAL_25);
    		TERMINAL_251.addFollower(TERMINAL_26);
    		TERMINAL_251.addFollower(TERMINAL_27);
    		TERMINAL_251.addFollower(TERMINAL_28);
    		TERMINAL_251.addFollower(TERMINAL_29);
    		TERMINAL_251.addFollower(TERMINAL_30);
    		TERMINAL_251.addFollower(TERMINAL_31);
    		TERMINAL_251.addFollower(TERMINAL_32);
    		TERMINAL_251.addFollower(TERMINAL_33);
    		TERMINAL_251.addFollower(TERMINAL_34);
    		TERMINAL_251.addFollower(TERMINAL_35);
    		TERMINAL_251.addFollower(TERMINAL_36);
    		TERMINAL_251.addFollower(TERMINAL_37);
    		TERMINAL_251.addFollower(TERMINAL_38);
    		TERMINAL_251.addFollower(TERMINAL_39);
    		TERMINAL_251.addFollower(TERMINAL_40);
    		TERMINAL_251.addFollower(TERMINAL_41);
    		TERMINAL_251.addFollower(TERMINAL_42);
    		TERMINAL_251.addFollower(TERMINAL_43);
    		TERMINAL_251.addFollower(TERMINAL_44);
    		TERMINAL_251.addFollower(TERMINAL_45);
    		TERMINAL_251.addFollower(TERMINAL_46);
    		TERMINAL_251.addFollower(TERMINAL_47);
    		TERMINAL_251.addFollower(TERMINAL_48);
    		TERMINAL_251.addFollower(TERMINAL_49);
    		TERMINAL_251.addFollower(TERMINAL_50);
    		TERMINAL_251.addFollower(TERMINAL_51);
    		TERMINAL_251.addFollower(TERMINAL_52);
    		TERMINAL_251.addFollower(TERMINAL_53);
    		TERMINAL_251.addFollower(TERMINAL_54);
    		TERMINAL_48.addFollower(TERMINAL_252);
    		TERMINAL_252.addFollower(TERMINAL_8);
    		TERMINAL_252.addFollower(TERMINAL_3);
    		TERMINAL_252.addFollower(TERMINAL_5);
    		TERMINAL_252.addFollower(TERMINAL_6);
    		TERMINAL_252.addFollower(TERMINAL_111);
    		TERMINAL_253.addFollower(TERMINAL_1);
    		TERMINAL_253.addFollower(TERMINAL_9);
    		TERMINAL_253.addFollower(TERMINAL_10);
    		TERMINAL_253.addFollower(TERMINAL_11);
    		TERMINAL_253.addFollower(TERMINAL_12);
    		TERMINAL_253.addFollower(TERMINAL_13);
    		TERMINAL_253.addFollower(TERMINAL_14);
    		TERMINAL_253.addFollower(TERMINAL_15);
    		TERMINAL_253.addFollower(TERMINAL_16);
    		TERMINAL_253.addFollower(TERMINAL_17);
    		TERMINAL_253.addFollower(TERMINAL_18);
    		TERMINAL_253.addFollower(TERMINAL_19);
    		TERMINAL_253.addFollower(TERMINAL_20);
    		TERMINAL_253.addFollower(TERMINAL_21);
    		TERMINAL_253.addFollower(TERMINAL_22);
    		TERMINAL_253.addFollower(TERMINAL_23);
    		TERMINAL_253.addFollower(TERMINAL_24);
    		TERMINAL_253.addFollower(TERMINAL_25);
    		TERMINAL_253.addFollower(TERMINAL_26);
    		TERMINAL_253.addFollower(TERMINAL_27);
    		TERMINAL_253.addFollower(TERMINAL_28);
    		TERMINAL_253.addFollower(TERMINAL_29);
    		TERMINAL_253.addFollower(TERMINAL_30);
    		TERMINAL_253.addFollower(TERMINAL_31);
    		TERMINAL_253.addFollower(TERMINAL_32);
    		TERMINAL_253.addFollower(TERMINAL_33);
    		TERMINAL_253.addFollower(TERMINAL_34);
    		TERMINAL_253.addFollower(TERMINAL_35);
    		TERMINAL_253.addFollower(TERMINAL_36);
    		TERMINAL_253.addFollower(TERMINAL_37);
    		TERMINAL_253.addFollower(TERMINAL_38);
    		TERMINAL_253.addFollower(TERMINAL_39);
    		TERMINAL_253.addFollower(TERMINAL_40);
    		TERMINAL_253.addFollower(TERMINAL_41);
    		TERMINAL_253.addFollower(TERMINAL_42);
    		TERMINAL_253.addFollower(TERMINAL_43);
    		TERMINAL_253.addFollower(TERMINAL_44);
    		TERMINAL_253.addFollower(TERMINAL_45);
    		TERMINAL_253.addFollower(TERMINAL_46);
    		TERMINAL_253.addFollower(TERMINAL_47);
    		TERMINAL_253.addFollower(TERMINAL_48);
    		TERMINAL_253.addFollower(TERMINAL_49);
    		TERMINAL_253.addFollower(TERMINAL_50);
    		TERMINAL_253.addFollower(TERMINAL_51);
    		TERMINAL_253.addFollower(TERMINAL_52);
    		TERMINAL_253.addFollower(TERMINAL_53);
    		TERMINAL_253.addFollower(TERMINAL_54);
    		TERMINAL_49.addFollower(TERMINAL_254);
    		TERMINAL_254.addFollower(TERMINAL_8);
    		TERMINAL_254.addFollower(TERMINAL_3);
    		TERMINAL_254.addFollower(TERMINAL_5);
    		TERMINAL_254.addFollower(TERMINAL_6);
    		TERMINAL_93.addFollower(TERMINAL_1);
    		TERMINAL_93.addFollower(TERMINAL_9);
    		TERMINAL_93.addFollower(TERMINAL_10);
    		TERMINAL_93.addFollower(TERMINAL_11);
    		TERMINAL_93.addFollower(TERMINAL_12);
    		TERMINAL_93.addFollower(TERMINAL_13);
    		TERMINAL_93.addFollower(TERMINAL_14);
    		TERMINAL_93.addFollower(TERMINAL_15);
    		TERMINAL_93.addFollower(TERMINAL_16);
    		TERMINAL_93.addFollower(TERMINAL_17);
    		TERMINAL_93.addFollower(TERMINAL_18);
    		TERMINAL_93.addFollower(TERMINAL_19);
    		TERMINAL_93.addFollower(TERMINAL_20);
    		TERMINAL_93.addFollower(TERMINAL_21);
    		TERMINAL_93.addFollower(TERMINAL_22);
    		TERMINAL_93.addFollower(TERMINAL_23);
    		TERMINAL_93.addFollower(TERMINAL_24);
    		TERMINAL_93.addFollower(TERMINAL_25);
    		TERMINAL_93.addFollower(TERMINAL_26);
    		TERMINAL_93.addFollower(TERMINAL_27);
    		TERMINAL_93.addFollower(TERMINAL_28);
    		TERMINAL_93.addFollower(TERMINAL_29);
    		TERMINAL_93.addFollower(TERMINAL_30);
    		TERMINAL_93.addFollower(TERMINAL_31);
    		TERMINAL_93.addFollower(TERMINAL_32);
    		TERMINAL_93.addFollower(TERMINAL_33);
    		TERMINAL_93.addFollower(TERMINAL_34);
    		TERMINAL_93.addFollower(TERMINAL_35);
    		TERMINAL_93.addFollower(TERMINAL_36);
    		TERMINAL_93.addFollower(TERMINAL_37);
    		TERMINAL_93.addFollower(TERMINAL_38);
    		TERMINAL_93.addFollower(TERMINAL_39);
    		TERMINAL_93.addFollower(TERMINAL_40);
    		TERMINAL_93.addFollower(TERMINAL_41);
    		TERMINAL_93.addFollower(TERMINAL_42);
    		TERMINAL_93.addFollower(TERMINAL_43);
    		TERMINAL_93.addFollower(TERMINAL_44);
    		TERMINAL_93.addFollower(TERMINAL_45);
    		TERMINAL_93.addFollower(TERMINAL_46);
    		TERMINAL_93.addFollower(TERMINAL_47);
    		TERMINAL_93.addFollower(TERMINAL_48);
    		TERMINAL_93.addFollower(TERMINAL_49);
    		TERMINAL_93.addFollower(TERMINAL_50);
    		TERMINAL_93.addFollower(TERMINAL_51);
    		TERMINAL_93.addFollower(TERMINAL_52);
    		TERMINAL_93.addFollower(TERMINAL_53);
    		TERMINAL_93.addFollower(TERMINAL_54);
    		TERMINAL_50.addFollower(TERMINAL_255);
    		TERMINAL_255.addFollower(TERMINAL_8);
    		TERMINAL_255.addFollower(TERMINAL_3);
    		TERMINAL_255.addFollower(TERMINAL_5);
    		TERMINAL_255.addFollower(TERMINAL_6);
    		TERMINAL_94.addFollower(TERMINAL_1);
    		TERMINAL_94.addFollower(TERMINAL_9);
    		TERMINAL_94.addFollower(TERMINAL_10);
    		TERMINAL_94.addFollower(TERMINAL_11);
    		TERMINAL_94.addFollower(TERMINAL_12);
    		TERMINAL_94.addFollower(TERMINAL_13);
    		TERMINAL_94.addFollower(TERMINAL_14);
    		TERMINAL_94.addFollower(TERMINAL_15);
    		TERMINAL_94.addFollower(TERMINAL_16);
    		TERMINAL_94.addFollower(TERMINAL_17);
    		TERMINAL_94.addFollower(TERMINAL_18);
    		TERMINAL_94.addFollower(TERMINAL_19);
    		TERMINAL_94.addFollower(TERMINAL_20);
    		TERMINAL_94.addFollower(TERMINAL_21);
    		TERMINAL_94.addFollower(TERMINAL_22);
    		TERMINAL_94.addFollower(TERMINAL_23);
    		TERMINAL_94.addFollower(TERMINAL_24);
    		TERMINAL_94.addFollower(TERMINAL_25);
    		TERMINAL_94.addFollower(TERMINAL_26);
    		TERMINAL_94.addFollower(TERMINAL_27);
    		TERMINAL_94.addFollower(TERMINAL_28);
    		TERMINAL_94.addFollower(TERMINAL_29);
    		TERMINAL_94.addFollower(TERMINAL_30);
    		TERMINAL_94.addFollower(TERMINAL_31);
    		TERMINAL_94.addFollower(TERMINAL_32);
    		TERMINAL_94.addFollower(TERMINAL_33);
    		TERMINAL_94.addFollower(TERMINAL_34);
    		TERMINAL_94.addFollower(TERMINAL_35);
    		TERMINAL_94.addFollower(TERMINAL_36);
    		TERMINAL_94.addFollower(TERMINAL_37);
    		TERMINAL_94.addFollower(TERMINAL_38);
    		TERMINAL_94.addFollower(TERMINAL_39);
    		TERMINAL_94.addFollower(TERMINAL_40);
    		TERMINAL_94.addFollower(TERMINAL_41);
    		TERMINAL_94.addFollower(TERMINAL_42);
    		TERMINAL_94.addFollower(TERMINAL_43);
    		TERMINAL_94.addFollower(TERMINAL_44);
    		TERMINAL_94.addFollower(TERMINAL_45);
    		TERMINAL_94.addFollower(TERMINAL_46);
    		TERMINAL_94.addFollower(TERMINAL_47);
    		TERMINAL_94.addFollower(TERMINAL_48);
    		TERMINAL_94.addFollower(TERMINAL_49);
    		TERMINAL_94.addFollower(TERMINAL_50);
    		TERMINAL_94.addFollower(TERMINAL_51);
    		TERMINAL_94.addFollower(TERMINAL_52);
    		TERMINAL_94.addFollower(TERMINAL_53);
    		TERMINAL_94.addFollower(TERMINAL_54);
    		TERMINAL_51.addFollower(TERMINAL_256);
    		TERMINAL_256.addFollower(TERMINAL_8);
    		TERMINAL_256.addFollower(TERMINAL_170);
    		TERMINAL_170.addFollower(TERMINAL_257);
    		TERMINAL_257.addFollower(TERMINAL_258);
    		TERMINAL_257.addFollower(TERMINAL_259);
    		TERMINAL_257.addFollower(TERMINAL_260);
    		TERMINAL_257.addFollower(TERMINAL_261);
    		TERMINAL_257.addFollower(TERMINAL_262);
    		TERMINAL_257.addFollower(TERMINAL_263);
    		TERMINAL_257.addFollower(TERMINAL_264);
    		TERMINAL_257.addFollower(TERMINAL_265);
    		TERMINAL_265.addFollower(TERMINAL_266);
    		TERMINAL_266.addFollower(TERMINAL_267);
    		TERMINAL_267.addFollower(TERMINAL_258);
    		TERMINAL_267.addFollower(TERMINAL_259);
    		TERMINAL_267.addFollower(TERMINAL_260);
    		TERMINAL_267.addFollower(TERMINAL_261);
    		TERMINAL_267.addFollower(TERMINAL_262);
    		TERMINAL_267.addFollower(TERMINAL_263);
    		TERMINAL_267.addFollower(TERMINAL_264);
    		TERMINAL_267.addFollower(TERMINAL_268);
    		TERMINAL_268.addFollower(TERMINAL_269);
    		TERMINAL_269.addFollower(TERMINAL_1);
    		TERMINAL_269.addFollower(TERMINAL_9);
    		TERMINAL_269.addFollower(TERMINAL_10);
    		TERMINAL_269.addFollower(TERMINAL_11);
    		TERMINAL_269.addFollower(TERMINAL_12);
    		TERMINAL_269.addFollower(TERMINAL_13);
    		TERMINAL_269.addFollower(TERMINAL_14);
    		TERMINAL_269.addFollower(TERMINAL_15);
    		TERMINAL_269.addFollower(TERMINAL_16);
    		TERMINAL_269.addFollower(TERMINAL_17);
    		TERMINAL_269.addFollower(TERMINAL_18);
    		TERMINAL_269.addFollower(TERMINAL_19);
    		TERMINAL_269.addFollower(TERMINAL_20);
    		TERMINAL_269.addFollower(TERMINAL_21);
    		TERMINAL_269.addFollower(TERMINAL_22);
    		TERMINAL_269.addFollower(TERMINAL_23);
    		TERMINAL_269.addFollower(TERMINAL_24);
    		TERMINAL_269.addFollower(TERMINAL_25);
    		TERMINAL_269.addFollower(TERMINAL_26);
    		TERMINAL_269.addFollower(TERMINAL_27);
    		TERMINAL_269.addFollower(TERMINAL_28);
    		TERMINAL_269.addFollower(TERMINAL_29);
    		TERMINAL_269.addFollower(TERMINAL_30);
    		TERMINAL_269.addFollower(TERMINAL_31);
    		TERMINAL_269.addFollower(TERMINAL_32);
    		TERMINAL_269.addFollower(TERMINAL_33);
    		TERMINAL_269.addFollower(TERMINAL_34);
    		TERMINAL_269.addFollower(TERMINAL_35);
    		TERMINAL_269.addFollower(TERMINAL_36);
    		TERMINAL_269.addFollower(TERMINAL_37);
    		TERMINAL_269.addFollower(TERMINAL_38);
    		TERMINAL_269.addFollower(TERMINAL_39);
    		TERMINAL_269.addFollower(TERMINAL_40);
    		TERMINAL_269.addFollower(TERMINAL_41);
    		TERMINAL_269.addFollower(TERMINAL_42);
    		TERMINAL_269.addFollower(TERMINAL_43);
    		TERMINAL_269.addFollower(TERMINAL_44);
    		TERMINAL_269.addFollower(TERMINAL_45);
    		TERMINAL_269.addFollower(TERMINAL_46);
    		TERMINAL_269.addFollower(TERMINAL_47);
    		TERMINAL_269.addFollower(TERMINAL_48);
    		TERMINAL_269.addFollower(TERMINAL_49);
    		TERMINAL_269.addFollower(TERMINAL_50);
    		TERMINAL_269.addFollower(TERMINAL_51);
    		TERMINAL_269.addFollower(TERMINAL_52);
    		TERMINAL_269.addFollower(TERMINAL_53);
    		TERMINAL_269.addFollower(TERMINAL_54);
    		TERMINAL_258.addFollower(TERMINAL_270);
    		TERMINAL_270.addFollower(TERMINAL_3);
    		TERMINAL_270.addFollower(TERMINAL_5);
    		TERMINAL_270.addFollower(TERMINAL_6);
    		TERMINAL_270.addFollower(TERMINAL_56);
    		TERMINAL_270.addFollower(TERMINAL_57);
    		TERMINAL_270.addFollower(TERMINAL_58);
    		TERMINAL_270.addFollower(TERMINAL_59);
    		TERMINAL_270.addFollower(TERMINAL_60);
    		TERMINAL_270.addFollower(TERMINAL_61);
    		TERMINAL_270.addFollower(TERMINAL_62);
    		TERMINAL_270.addFollower(TERMINAL_63);
    		TERMINAL_270.addFollower(TERMINAL_64);
    		TERMINAL_270.addFollower(TERMINAL_65);
    		TERMINAL_270.addFollower(TERMINAL_66);
    		TERMINAL_270.addFollower(TERMINAL_67);
    		TERMINAL_270.addFollower(TERMINAL_68);
    		TERMINAL_270.addFollower(TERMINAL_69);
    		TERMINAL_270.addFollower(TERMINAL_70);
    		TERMINAL_270.addFollower(TERMINAL_71);
    		TERMINAL_270.addFollower(TERMINAL_72);
    		TERMINAL_160.addFollower(TERMINAL_258);
    		TERMINAL_160.addFollower(TERMINAL_259);
    		TERMINAL_160.addFollower(TERMINAL_260);
    		TERMINAL_160.addFollower(TERMINAL_261);
    		TERMINAL_160.addFollower(TERMINAL_262);
    		TERMINAL_160.addFollower(TERMINAL_263);
    		TERMINAL_160.addFollower(TERMINAL_264);
    		TERMINAL_160.addFollower(TERMINAL_265);
    		TERMINAL_160.addFollower(TERMINAL_271);
    		TERMINAL_259.addFollower(TERMINAL_272);
    		TERMINAL_272.addFollower(TERMINAL_3);
    		TERMINAL_272.addFollower(TERMINAL_5);
    		TERMINAL_272.addFollower(TERMINAL_6);
    		TERMINAL_272.addFollower(TERMINAL_105);
    		TERMINAL_272.addFollower(TERMINAL_106);
    		TERMINAL_272.addFollower(TERMINAL_107);
    		TERMINAL_95.addFollower(TERMINAL_258);
    		TERMINAL_95.addFollower(TERMINAL_259);
    		TERMINAL_95.addFollower(TERMINAL_260);
    		TERMINAL_95.addFollower(TERMINAL_261);
    		TERMINAL_95.addFollower(TERMINAL_262);
    		TERMINAL_95.addFollower(TERMINAL_263);
    		TERMINAL_95.addFollower(TERMINAL_264);
    		TERMINAL_95.addFollower(TERMINAL_265);
    		TERMINAL_260.addFollower(TERMINAL_273);
    		TERMINAL_273.addFollower(TERMINAL_3);
    		TERMINAL_273.addFollower(TERMINAL_5);
    		TERMINAL_273.addFollower(TERMINAL_6);
    		TERMINAL_273.addFollower(TERMINAL_111);
    		TERMINAL_274.addFollower(TERMINAL_258);
    		TERMINAL_274.addFollower(TERMINAL_259);
    		TERMINAL_274.addFollower(TERMINAL_260);
    		TERMINAL_274.addFollower(TERMINAL_261);
    		TERMINAL_274.addFollower(TERMINAL_262);
    		TERMINAL_274.addFollower(TERMINAL_263);
    		TERMINAL_274.addFollower(TERMINAL_264);
    		TERMINAL_274.addFollower(TERMINAL_265);
    		TERMINAL_274.addFollower(TERMINAL_271);
    		TERMINAL_261.addFollower(TERMINAL_275);
    		TERMINAL_275.addFollower(TERMINAL_3);
    		TERMINAL_275.addFollower(TERMINAL_5);
    		TERMINAL_275.addFollower(TERMINAL_6);
    		TERMINAL_96.addFollower(TERMINAL_258);
    		TERMINAL_96.addFollower(TERMINAL_259);
    		TERMINAL_96.addFollower(TERMINAL_260);
    		TERMINAL_96.addFollower(TERMINAL_261);
    		TERMINAL_96.addFollower(TERMINAL_262);
    		TERMINAL_96.addFollower(TERMINAL_263);
    		TERMINAL_96.addFollower(TERMINAL_264);
    		TERMINAL_96.addFollower(TERMINAL_265);
    		TERMINAL_262.addFollower(TERMINAL_276);
    		TERMINAL_276.addFollower(TERMINAL_3);
    		TERMINAL_276.addFollower(TERMINAL_5);
    		TERMINAL_276.addFollower(TERMINAL_6);
    		TERMINAL_97.addFollower(TERMINAL_258);
    		TERMINAL_97.addFollower(TERMINAL_259);
    		TERMINAL_97.addFollower(TERMINAL_260);
    		TERMINAL_97.addFollower(TERMINAL_261);
    		TERMINAL_97.addFollower(TERMINAL_262);
    		TERMINAL_97.addFollower(TERMINAL_263);
    		TERMINAL_97.addFollower(TERMINAL_264);
    		TERMINAL_97.addFollower(TERMINAL_265);
    		TERMINAL_263.addFollower(TERMINAL_277);
    		TERMINAL_277.addFollower(TERMINAL_3);
    		TERMINAL_277.addFollower(TERMINAL_5);
    		TERMINAL_277.addFollower(TERMINAL_6);
    		TERMINAL_277.addFollower(TERMINAL_83);
    		TERMINAL_277.addFollower(TERMINAL_84);
    		TERMINAL_278.addFollower(TERMINAL_258);
    		TERMINAL_278.addFollower(TERMINAL_259);
    		TERMINAL_278.addFollower(TERMINAL_260);
    		TERMINAL_278.addFollower(TERMINAL_261);
    		TERMINAL_278.addFollower(TERMINAL_262);
    		TERMINAL_278.addFollower(TERMINAL_263);
    		TERMINAL_278.addFollower(TERMINAL_264);
    		TERMINAL_278.addFollower(TERMINAL_265);
    		TERMINAL_264.addFollower(TERMINAL_279);
    		TERMINAL_279.addFollower(TERMINAL_3);
    		TERMINAL_279.addFollower(TERMINAL_5);
    		TERMINAL_279.addFollower(TERMINAL_6);
    		TERMINAL_279.addFollower(TERMINAL_83);
    		TERMINAL_279.addFollower(TERMINAL_84);
    		TERMINAL_280.addFollower(TERMINAL_258);
    		TERMINAL_280.addFollower(TERMINAL_259);
    		TERMINAL_280.addFollower(TERMINAL_260);
    		TERMINAL_280.addFollower(TERMINAL_261);
    		TERMINAL_280.addFollower(TERMINAL_262);
    		TERMINAL_280.addFollower(TERMINAL_263);
    		TERMINAL_280.addFollower(TERMINAL_264);
    		TERMINAL_280.addFollower(TERMINAL_265);
    		TERMINAL_84.addFollower(TERMINAL_281);
    		TERMINAL_281.addFollower(TERMINAL_3);
    		TERMINAL_281.addFollower(TERMINAL_5);
    		TERMINAL_281.addFollower(TERMINAL_6);
    		TERMINAL_124.addFollower(TERMINAL_160);
    		TERMINAL_124.addFollower(TERMINAL_95);
    		TERMINAL_124.addFollower(TERMINAL_3);
    		TERMINAL_124.addFollower(TERMINAL_5);
    		TERMINAL_124.addFollower(TERMINAL_6);
    		TERMINAL_124.addFollower(TERMINAL_83);
    		TERMINAL_124.addFollower(TERMINAL_84);
    		TERMINAL_124.addFollower(TERMINAL_89);
    		TERMINAL_124.addFollower(TERMINAL_97);
    		TERMINAL_52.addFollower(TERMINAL_282);
    		TERMINAL_282.addFollower(TERMINAL_8);
    		TERMINAL_282.addFollower(TERMINAL_171);
    		TERMINAL_171.addFollower(TERMINAL_283);
    		TERMINAL_283.addFollower(TERMINAL_258);
    		TERMINAL_283.addFollower(TERMINAL_260);
    		TERMINAL_283.addFollower(TERMINAL_271);
    		TERMINAL_271.addFollower(TERMINAL_284);
    		TERMINAL_284.addFollower(TERMINAL_285);
    		TERMINAL_285.addFollower(TERMINAL_258);
    		TERMINAL_285.addFollower(TERMINAL_260);
    		TERMINAL_285.addFollower(TERMINAL_286);
    		TERMINAL_286.addFollower(TERMINAL_287);
    		TERMINAL_287.addFollower(TERMINAL_1);
    		TERMINAL_287.addFollower(TERMINAL_9);
    		TERMINAL_287.addFollower(TERMINAL_10);
    		TERMINAL_287.addFollower(TERMINAL_11);
    		TERMINAL_287.addFollower(TERMINAL_12);
    		TERMINAL_287.addFollower(TERMINAL_13);
    		TERMINAL_287.addFollower(TERMINAL_14);
    		TERMINAL_287.addFollower(TERMINAL_15);
    		TERMINAL_287.addFollower(TERMINAL_16);
    		TERMINAL_287.addFollower(TERMINAL_17);
    		TERMINAL_287.addFollower(TERMINAL_18);
    		TERMINAL_287.addFollower(TERMINAL_19);
    		TERMINAL_287.addFollower(TERMINAL_20);
    		TERMINAL_287.addFollower(TERMINAL_21);
    		TERMINAL_287.addFollower(TERMINAL_22);
    		TERMINAL_287.addFollower(TERMINAL_23);
    		TERMINAL_287.addFollower(TERMINAL_24);
    		TERMINAL_287.addFollower(TERMINAL_25);
    		TERMINAL_287.addFollower(TERMINAL_26);
    		TERMINAL_287.addFollower(TERMINAL_27);
    		TERMINAL_287.addFollower(TERMINAL_28);
    		TERMINAL_287.addFollower(TERMINAL_29);
    		TERMINAL_287.addFollower(TERMINAL_30);
    		TERMINAL_287.addFollower(TERMINAL_31);
    		TERMINAL_287.addFollower(TERMINAL_32);
    		TERMINAL_287.addFollower(TERMINAL_33);
    		TERMINAL_287.addFollower(TERMINAL_34);
    		TERMINAL_287.addFollower(TERMINAL_35);
    		TERMINAL_287.addFollower(TERMINAL_36);
    		TERMINAL_287.addFollower(TERMINAL_37);
    		TERMINAL_287.addFollower(TERMINAL_38);
    		TERMINAL_287.addFollower(TERMINAL_39);
    		TERMINAL_287.addFollower(TERMINAL_40);
    		TERMINAL_287.addFollower(TERMINAL_41);
    		TERMINAL_287.addFollower(TERMINAL_42);
    		TERMINAL_287.addFollower(TERMINAL_43);
    		TERMINAL_287.addFollower(TERMINAL_44);
    		TERMINAL_287.addFollower(TERMINAL_45);
    		TERMINAL_287.addFollower(TERMINAL_46);
    		TERMINAL_287.addFollower(TERMINAL_47);
    		TERMINAL_287.addFollower(TERMINAL_48);
    		TERMINAL_287.addFollower(TERMINAL_49);
    		TERMINAL_287.addFollower(TERMINAL_50);
    		TERMINAL_287.addFollower(TERMINAL_51);
    		TERMINAL_287.addFollower(TERMINAL_52);
    		TERMINAL_287.addFollower(TERMINAL_53);
    		TERMINAL_287.addFollower(TERMINAL_54);
    		TERMINAL_53.addFollower(TERMINAL_288);
    		TERMINAL_288.addFollower(TERMINAL_8);
    		TERMINAL_288.addFollower(TERMINAL_172);
    		TERMINAL_291.addFollower(TERMINAL_1);
    		TERMINAL_291.addFollower(TERMINAL_9);
    		TERMINAL_291.addFollower(TERMINAL_10);
    		TERMINAL_291.addFollower(TERMINAL_11);
    		TERMINAL_291.addFollower(TERMINAL_12);
    		TERMINAL_291.addFollower(TERMINAL_13);
    		TERMINAL_291.addFollower(TERMINAL_14);
    		TERMINAL_291.addFollower(TERMINAL_15);
    		TERMINAL_291.addFollower(TERMINAL_16);
    		TERMINAL_291.addFollower(TERMINAL_17);
    		TERMINAL_291.addFollower(TERMINAL_18);
    		TERMINAL_291.addFollower(TERMINAL_19);
    		TERMINAL_291.addFollower(TERMINAL_20);
    		TERMINAL_291.addFollower(TERMINAL_21);
    		TERMINAL_291.addFollower(TERMINAL_22);
    		TERMINAL_291.addFollower(TERMINAL_23);
    		TERMINAL_291.addFollower(TERMINAL_24);
    		TERMINAL_291.addFollower(TERMINAL_25);
    		TERMINAL_291.addFollower(TERMINAL_26);
    		TERMINAL_291.addFollower(TERMINAL_27);
    		TERMINAL_291.addFollower(TERMINAL_28);
    		TERMINAL_291.addFollower(TERMINAL_29);
    		TERMINAL_291.addFollower(TERMINAL_30);
    		TERMINAL_291.addFollower(TERMINAL_31);
    		TERMINAL_291.addFollower(TERMINAL_32);
    		TERMINAL_291.addFollower(TERMINAL_33);
    		TERMINAL_291.addFollower(TERMINAL_34);
    		TERMINAL_291.addFollower(TERMINAL_35);
    		TERMINAL_291.addFollower(TERMINAL_36);
    		TERMINAL_291.addFollower(TERMINAL_37);
    		TERMINAL_291.addFollower(TERMINAL_38);
    		TERMINAL_291.addFollower(TERMINAL_39);
    		TERMINAL_291.addFollower(TERMINAL_40);
    		TERMINAL_291.addFollower(TERMINAL_41);
    		TERMINAL_291.addFollower(TERMINAL_42);
    		TERMINAL_291.addFollower(TERMINAL_43);
    		TERMINAL_291.addFollower(TERMINAL_44);
    		TERMINAL_291.addFollower(TERMINAL_45);
    		TERMINAL_291.addFollower(TERMINAL_46);
    		TERMINAL_291.addFollower(TERMINAL_47);
    		TERMINAL_291.addFollower(TERMINAL_48);
    		TERMINAL_291.addFollower(TERMINAL_49);
    		TERMINAL_291.addFollower(TERMINAL_50);
    		TERMINAL_291.addFollower(TERMINAL_51);
    		TERMINAL_291.addFollower(TERMINAL_52);
    		TERMINAL_291.addFollower(TERMINAL_53);
    		TERMINAL_291.addFollower(TERMINAL_54);
    		TERMINAL_172.addFollower(TERMINAL_292);
    		TERMINAL_292.addFollower(TERMINAL_293);
    		TERMINAL_294.addFollower(TERMINAL_289);
    		TERMINAL_293.addFollower(TERMINAL_295);
    		TERMINAL_295.addFollower(TERMINAL_3);
    		TERMINAL_295.addFollower(TERMINAL_5);
    		TERMINAL_295.addFollower(TERMINAL_6);
    		TERMINAL_296.addFollower(TERMINAL_293);
    		TERMINAL_296.addFollower(TERMINAL_294);
    		TERMINAL_289.addFollower(TERMINAL_297);
    		TERMINAL_297.addFollower(TERMINAL_298);
    		TERMINAL_299.addFollower(TERMINAL_290);
    		TERMINAL_298.addFollower(TERMINAL_300);
    		TERMINAL_300.addFollower(TERMINAL_3);
    		TERMINAL_300.addFollower(TERMINAL_5);
    		TERMINAL_300.addFollower(TERMINAL_6);
    		TERMINAL_301.addFollower(TERMINAL_298);
    		TERMINAL_301.addFollower(TERMINAL_299);
    	}
    	public static void wire3() {
    		TERMINAL_290.addFollower(TERMINAL_302);
    		TERMINAL_302.addFollower(TERMINAL_3);
    		TERMINAL_302.addFollower(TERMINAL_5);
    		TERMINAL_302.addFollower(TERMINAL_6);
    		TERMINAL_85.addFollower(TERMINAL_291);
    	}
    	// wire the terminals
    	static {
    		wire0();
    		wire1();
    		wire2();
    		wire3();
    	}



    // $ANTLR start "start"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5007:1: start returns [ org.eclipse.emf.ecore.EObject element = null] : (c0= parse_west_twouse_language_owl2fs_OntologyDocument ) EOF ;
    public final org.eclipse.emf.ecore.EObject start() throws RecognitionException {
        org.eclipse.emf.ecore.EObject element =  null;
        int start_StartIndex = input.index();
        west.twouse.language.owl2fs.OntologyDocument c0 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 1) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5008:1: ( (c0= parse_west_twouse_language_owl2fs_OntologyDocument ) EOF )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5009:2: (c0= parse_west_twouse_language_owl2fs_OntologyDocument ) EOF
            {
            if ( state.backtracking==0 ) {

              		// follow set for start rule(s)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_0, 0));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 0));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_2, 0));
              		expectedElementsIndexOfLastCompleteElement = expectedElements.size() - 1;
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5016:2: (c0= parse_west_twouse_language_owl2fs_OntologyDocument )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5017:3: c0= parse_west_twouse_language_owl2fs_OntologyDocument
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_OntologyDocument_in_start82);
            c0=parse_west_twouse_language_owl2fs_OntologyDocument();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {
               element = c0; 
            }

            }

            match(input,EOF,FOLLOW_EOF_in_start89); if (state.failed) return element;

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 1, start_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "start"


    // $ANTLR start "parse_west_twouse_language_owl2fs_FullIRI"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5022:1: parse_west_twouse_language_owl2fs_FullIRI returns [west.twouse.language.owl2fs.FullIRI element = null] : (a0= FULLIRI ) ;
    public final west.twouse.language.owl2fs.FullIRI parse_west_twouse_language_owl2fs_FullIRI() throws RecognitionException {
        west.twouse.language.owl2fs.FullIRI element =  null;
        int parse_west_twouse_language_owl2fs_FullIRI_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 2) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5025:1: ( (a0= FULLIRI ) )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5026:2: (a0= FULLIRI )
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5026:2: (a0= FULLIRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5027:3: a0= FULLIRI
            {
            a0=(Token)match(input,FULLIRI,FOLLOW_FULLIRI_in_parse_west_twouse_language_owl2fs_FullIRI116); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFullIRI();
              			}
              			if (a0 != null) {
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("FULLIRI");
              				tokenResolver.setOptions(getOptions());
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.FULL_IRI__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.FULL_IRI__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_4, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_7, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_55, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_85, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_86, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_87, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_88, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_90, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_91, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_92, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_93, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_94, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_95, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_96, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_97, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_98, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_99, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_100, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_101, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_102, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_103, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_104, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_108, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_109, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_110, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_112, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_113, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_114, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_115, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_116, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_117, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_118, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_119, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_120, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_121, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_122, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_123, 1));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_124, 1));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 2, parse_west_twouse_language_owl2fs_FullIRI_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_FullIRI"


    // $ANTLR start "parse_west_twouse_language_owl2fs_AbbreviatedIRI"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5183:1: parse_west_twouse_language_owl2fs_AbbreviatedIRI returns [west.twouse.language.owl2fs.AbbreviatedIRI element = null] : ( (a0= ABBRIRI ) )? a1= ':' (a2= ABBRIRI ) ;
    public final west.twouse.language.owl2fs.AbbreviatedIRI parse_west_twouse_language_owl2fs_AbbreviatedIRI() throws RecognitionException {
        west.twouse.language.owl2fs.AbbreviatedIRI element =  null;
        int parse_west_twouse_language_owl2fs_AbbreviatedIRI_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 3) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5186:1: ( ( (a0= ABBRIRI ) )? a1= ':' (a2= ABBRIRI ) )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5187:2: ( (a0= ABBRIRI ) )? a1= ':' (a2= ABBRIRI )
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5187:2: ( (a0= ABBRIRI ) )?
            int alt1=2;
            int LA1_0 = input.LA(1);

            if ( (LA1_0==ABBRIRI) ) {
                alt1=1;
            }
            switch (alt1) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5188:3: (a0= ABBRIRI )
                    {
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5188:3: (a0= ABBRIRI )
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5189:4: a0= ABBRIRI
                    {
                    a0=(Token)match(input,ABBRIRI,FOLLOW_ABBRIRI_in_parse_west_twouse_language_owl2fs_AbbreviatedIRI161); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAbbreviatedIRI();
                      				}
                      				if (a0 != null) {
                      					west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("ABBRIRI");
                      					tokenResolver.setOptions(getOptions());
                      					west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ABBREVIATED_IRI__PREFIX), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
                      					}
                      					java.lang.String resolved = (java.lang.String)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ABBREVIATED_IRI__PREFIX), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
                      				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 2));
              	
            }
            a1=(Token)match(input,14,FOLLOW_14_in_parse_west_twouse_language_owl2fs_AbbreviatedIRI191); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAbbreviatedIRI();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_125, 3));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5234:2: (a2= ABBRIRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5235:3: a2= ABBRIRI
            {
            a2=(Token)match(input,ABBRIRI,FOLLOW_ABBRIRI_in_parse_west_twouse_language_owl2fs_AbbreviatedIRI209); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAbbreviatedIRI();
              			}
              			if (a2 != null) {
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("ABBRIRI");
              				tokenResolver.setOptions(getOptions());
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ABBREVIATED_IRI__VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ABBREVIATED_IRI__VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_7, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_55, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_85, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_86, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_87, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_88, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_90, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_91, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_92, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_93, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_94, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_95, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_96, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_97, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_98, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_99, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_100, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_101, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_102, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_103, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_104, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_108, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_109, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_110, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_112, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_113, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_114, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_115, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_116, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_117, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_118, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_119, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_120, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_121, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_122, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_123, 4));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_124, 4));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 3, parse_west_twouse_language_owl2fs_AbbreviatedIRI_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_AbbreviatedIRI"


    // $ANTLR start "parse_west_twouse_language_owl2fs_OntologyDocument"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5390:1: parse_west_twouse_language_owl2fs_OntologyDocument returns [west.twouse.language.owl2fs.OntologyDocument element = null] : ( ( (a0_0= parse_west_twouse_language_owl2fs_PrefixDefinition ) | (a1_0= parse_west_twouse_language_owl2fs_Comment ) ) )* (a2_0= parse_west_twouse_language_owl2fs_Ontology ) ;
    public final west.twouse.language.owl2fs.OntologyDocument parse_west_twouse_language_owl2fs_OntologyDocument() throws RecognitionException {
        west.twouse.language.owl2fs.OntologyDocument element =  null;
        int parse_west_twouse_language_owl2fs_OntologyDocument_StartIndex = input.index();
        west.twouse.language.owl2fs.PrefixDefinition a0_0 = null;

        west.twouse.language.owl2fs.Comment a1_0 = null;

        west.twouse.language.owl2fs.Ontology a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 4) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5393:1: ( ( ( (a0_0= parse_west_twouse_language_owl2fs_PrefixDefinition ) | (a1_0= parse_west_twouse_language_owl2fs_Comment ) ) )* (a2_0= parse_west_twouse_language_owl2fs_Ontology ) )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5394:2: ( ( (a0_0= parse_west_twouse_language_owl2fs_PrefixDefinition ) | (a1_0= parse_west_twouse_language_owl2fs_Comment ) ) )* (a2_0= parse_west_twouse_language_owl2fs_Ontology )
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5394:2: ( ( (a0_0= parse_west_twouse_language_owl2fs_PrefixDefinition ) | (a1_0= parse_west_twouse_language_owl2fs_Comment ) ) )*
            loop3:
            do {
                int alt3=2;
                int LA3_0 = input.LA(1);

                if ( (LA3_0==COMMENT||LA3_0==15) ) {
                    alt3=1;
                }


                switch (alt3) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5395:3: ( (a0_0= parse_west_twouse_language_owl2fs_PrefixDefinition ) | (a1_0= parse_west_twouse_language_owl2fs_Comment ) )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5395:3: ( (a0_0= parse_west_twouse_language_owl2fs_PrefixDefinition ) | (a1_0= parse_west_twouse_language_owl2fs_Comment ) )
            	    int alt2=2;
            	    int LA2_0 = input.LA(1);

            	    if ( (LA2_0==15) ) {
            	        alt2=1;
            	    }
            	    else if ( (LA2_0==COMMENT) ) {
            	        alt2=2;
            	    }
            	    else {
            	        if (state.backtracking>0) {state.failed=true; return element;}
            	        NoViableAltException nvae =
            	            new NoViableAltException("", 2, 0, input);

            	        throw nvae;
            	    }
            	    switch (alt2) {
            	        case 1 :
            	            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5396:4: (a0_0= parse_west_twouse_language_owl2fs_PrefixDefinition )
            	            {
            	            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5396:4: (a0_0= parse_west_twouse_language_owl2fs_PrefixDefinition )
            	            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5397:5: a0_0= parse_west_twouse_language_owl2fs_PrefixDefinition
            	            {
            	            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_PrefixDefinition_in_parse_west_twouse_language_owl2fs_OntologyDocument260);
            	            a0_0=parse_west_twouse_language_owl2fs_PrefixDefinition();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntologyDocument();
            	              					}
            	              					if (a0_0 != null) {
            	              						if (a0_0 != null) {
            	              							addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY_DOCUMENT__PREFIX_DEFINITION, a0_0);
            	              							completedElement(a0_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a0_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_0, 5));
            	              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 5));
            	              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_2, 5));
            	              			
            	            }

            	            }
            	            break;
            	        case 2 :
            	            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5421:8: (a1_0= parse_west_twouse_language_owl2fs_Comment )
            	            {
            	            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5421:8: (a1_0= parse_west_twouse_language_owl2fs_Comment )
            	            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5422:5: a1_0= parse_west_twouse_language_owl2fs_Comment
            	            {
            	            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_OntologyDocument302);
            	            a1_0=parse_west_twouse_language_owl2fs_Comment();

            	            state._fsp--;
            	            if (state.failed) return element;
            	            if ( state.backtracking==0 ) {

            	              					if (terminateParsing) {
            	              						throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	              					}
            	              					if (element == null) {
            	              						element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntologyDocument();
            	              					}
            	              					if (a1_0 != null) {
            	              						if (a1_0 != null) {
            	              							addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY_DOCUMENT__COMMENT, a1_0);
            	              							completedElement(a1_0);
            	              						}
            	              						collectHiddenTokens(element);
            	              						copyLocalizationInfos(a1_0, element); 					}
            	              				
            	            }

            	            }

            	            if ( state.backtracking==0 ) {

            	              				// expected elements (follow set)
            	              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_0, 6));
            	              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 6));
            	              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_2, 6));
            	              			
            	            }

            	            }
            	            break;

            	    }


            	    }
            	    break;

            	default :
            	    break loop3;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_0, 7));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 7));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_2, 7));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5454:2: (a2_0= parse_west_twouse_language_owl2fs_Ontology )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5455:3: a2_0= parse_west_twouse_language_owl2fs_Ontology
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Ontology_in_parse_west_twouse_language_owl2fs_OntologyDocument347);
            a2_0=parse_west_twouse_language_owl2fs_Ontology();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntologyDocument();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY_DOCUMENT__ONTOLOGY), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 4, parse_west_twouse_language_owl2fs_OntologyDocument_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_OntologyDocument"


    // $ANTLR start "parse_west_twouse_language_owl2fs_PrefixDefinition"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5477:1: parse_west_twouse_language_owl2fs_PrefixDefinition returns [west.twouse.language.owl2fs.PrefixDefinition element = null] : a0= 'Prefix' a1= '(' ( (a2= ABBRIRI ) )? a3= ':=' (a4_0= parse_west_twouse_language_owl2fs_FullIRI ) a5= ')' ;
    public final west.twouse.language.owl2fs.PrefixDefinition parse_west_twouse_language_owl2fs_PrefixDefinition() throws RecognitionException {
        west.twouse.language.owl2fs.PrefixDefinition element =  null;
        int parse_west_twouse_language_owl2fs_PrefixDefinition_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a3=null;
        Token a5=null;
        west.twouse.language.owl2fs.FullIRI a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 5) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5480:1: (a0= 'Prefix' a1= '(' ( (a2= ABBRIRI ) )? a3= ':=' (a4_0= parse_west_twouse_language_owl2fs_FullIRI ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5481:2: a0= 'Prefix' a1= '(' ( (a2= ABBRIRI ) )? a3= ':=' (a4_0= parse_west_twouse_language_owl2fs_FullIRI ) a5= ')'
            {
            a0=(Token)match(input,15,FOLLOW_15_in_parse_west_twouse_language_owl2fs_PrefixDefinition380); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createPrefixDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_126, 9));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_PrefixDefinition394); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createPrefixDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_127, 10));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_128, 10));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5506:2: ( (a2= ABBRIRI ) )?
            int alt4=2;
            int LA4_0 = input.LA(1);

            if ( (LA4_0==ABBRIRI) ) {
                alt4=1;
            }
            switch (alt4) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5507:3: (a2= ABBRIRI )
                    {
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5507:3: (a2= ABBRIRI )
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5508:4: a2= ABBRIRI
                    {
                    a2=(Token)match(input,ABBRIRI,FOLLOW_ABBRIRI_in_parse_west_twouse_language_owl2fs_PrefixDefinition417); if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createPrefixDefinition();
                      				}
                      				if (a2 != null) {
                      					west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("ABBRIRI");
                      					tokenResolver.setOptions(getOptions());
                      					west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
                      					tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.PREFIX_DEFINITION__PREF), result);
                      					java.lang.Object resolvedObject = result.getResolvedToken();
                      					if (resolvedObject == null) {
                      						addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
                      					}
                      					java.lang.String resolved = (java.lang.String)resolvedObject;
                      					if (resolved != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.PREFIX_DEFINITION__PREF), resolved);
                      						completedElement(resolved);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
                      				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_128, 11));
              	
            }
            a3=(Token)match(input,17,FOLLOW_17_in_parse_west_twouse_language_owl2fs_PrefixDefinition447); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createPrefixDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 12));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5553:2: (a4_0= parse_west_twouse_language_owl2fs_FullIRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5554:3: a4_0= parse_west_twouse_language_owl2fs_FullIRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_FullIRI_in_parse_west_twouse_language_owl2fs_PrefixDefinition465);
            a4_0=parse_west_twouse_language_owl2fs_FullIRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createPrefixDefinition();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.PREFIX_DEFINITION__NAMESPACE), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_4, 13));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_PrefixDefinition483); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createPrefixDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_0, 14));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 14));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_2, 14));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 5, parse_west_twouse_language_owl2fs_PrefixDefinition_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_PrefixDefinition"


    // $ANTLR start "parse_west_twouse_language_owl2fs_Ontology"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5591:1: parse_west_twouse_language_owl2fs_Ontology returns [west.twouse.language.owl2fs.Ontology element = null] : a0= 'Ontology' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Comment ) )* ( ( (a3_0= parse_west_twouse_language_owl2fs_IRI ) ( (a4_0= parse_west_twouse_language_owl2fs_Comment ) )* ( (a5_0= parse_west_twouse_language_owl2fs_IRI ) )? ) )? ( (a6_0= parse_west_twouse_language_owl2fs_Comment ) )* ( (a7= 'Import' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_Comment ) )* (a10_0= parse_west_twouse_language_owl2fs_IRI ) ( (a11_0= parse_west_twouse_language_owl2fs_Comment ) )* a12= ')' ) )* ( ( ( (a13_0= parse_west_twouse_language_owl2fs_Comment ) )* (a14_0= parse_west_twouse_language_owl2fs_Annotation ) ) )* ( (a15_0= parse_west_twouse_language_owl2fs_Axiom ) )* a16= ')' ( (a17_0= parse_west_twouse_language_owl2fs_Comment ) )* ;
    public final west.twouse.language.owl2fs.Ontology parse_west_twouse_language_owl2fs_Ontology() throws RecognitionException {
        west.twouse.language.owl2fs.Ontology element =  null;
        int parse_west_twouse_language_owl2fs_Ontology_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a7=null;
        Token a8=null;
        Token a12=null;
        Token a16=null;
        west.twouse.language.owl2fs.Comment a2_0 = null;

        west.twouse.language.owl2fs.IRI a3_0 = null;

        west.twouse.language.owl2fs.Comment a4_0 = null;

        west.twouse.language.owl2fs.IRI a5_0 = null;

        west.twouse.language.owl2fs.Comment a6_0 = null;

        west.twouse.language.owl2fs.Comment a9_0 = null;

        west.twouse.language.owl2fs.IRI a10_0 = null;

        west.twouse.language.owl2fs.Comment a11_0 = null;

        west.twouse.language.owl2fs.Comment a13_0 = null;

        west.twouse.language.owl2fs.Annotation a14_0 = null;

        west.twouse.language.owl2fs.Axiom a15_0 = null;

        west.twouse.language.owl2fs.Comment a17_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 6) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5594:1: (a0= 'Ontology' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Comment ) )* ( ( (a3_0= parse_west_twouse_language_owl2fs_IRI ) ( (a4_0= parse_west_twouse_language_owl2fs_Comment ) )* ( (a5_0= parse_west_twouse_language_owl2fs_IRI ) )? ) )? ( (a6_0= parse_west_twouse_language_owl2fs_Comment ) )* ( (a7= 'Import' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_Comment ) )* (a10_0= parse_west_twouse_language_owl2fs_IRI ) ( (a11_0= parse_west_twouse_language_owl2fs_Comment ) )* a12= ')' ) )* ( ( ( (a13_0= parse_west_twouse_language_owl2fs_Comment ) )* (a14_0= parse_west_twouse_language_owl2fs_Annotation ) ) )* ( (a15_0= parse_west_twouse_language_owl2fs_Axiom ) )* a16= ')' ( (a17_0= parse_west_twouse_language_owl2fs_Comment ) )* )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5595:2: a0= 'Ontology' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Comment ) )* ( ( (a3_0= parse_west_twouse_language_owl2fs_IRI ) ( (a4_0= parse_west_twouse_language_owl2fs_Comment ) )* ( (a5_0= parse_west_twouse_language_owl2fs_IRI ) )? ) )? ( (a6_0= parse_west_twouse_language_owl2fs_Comment ) )* ( (a7= 'Import' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_Comment ) )* (a10_0= parse_west_twouse_language_owl2fs_IRI ) ( (a11_0= parse_west_twouse_language_owl2fs_Comment ) )* a12= ')' ) )* ( ( ( (a13_0= parse_west_twouse_language_owl2fs_Comment ) )* (a14_0= parse_west_twouse_language_owl2fs_Annotation ) ) )* ( (a15_0= parse_west_twouse_language_owl2fs_Axiom ) )* a16= ')' ( (a17_0= parse_west_twouse_language_owl2fs_Comment ) )*
            {
            a0=(Token)match(input,19,FOLLOW_19_in_parse_west_twouse_language_owl2fs_Ontology512); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_129, 15));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_Ontology526); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_7, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 16));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 16));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5670:2: ( (a2_0= parse_west_twouse_language_owl2fs_Comment ) )*
            loop5:
            do {
                int alt5=2;
                int LA5_0 = input.LA(1);

                if ( (LA5_0==COMMENT) ) {
                    int LA5_2 = input.LA(2);

                    if ( (synpred5_Owl2fs()) ) {
                        alt5=1;
                    }


                }


                switch (alt5) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5671:3: (a2_0= parse_west_twouse_language_owl2fs_Comment )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5671:3: (a2_0= parse_west_twouse_language_owl2fs_Comment )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5672:4: a2_0= parse_west_twouse_language_owl2fs_Comment
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology549);
            	    a2_0=parse_west_twouse_language_owl2fs_Comment();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY__COMMENT, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop5;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_7, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 17));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 17));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5745:2: ( ( (a3_0= parse_west_twouse_language_owl2fs_IRI ) ( (a4_0= parse_west_twouse_language_owl2fs_Comment ) )* ( (a5_0= parse_west_twouse_language_owl2fs_IRI ) )? ) )?
            int alt8=2;
            int LA8_0 = input.LA(1);

            if ( ((LA8_0>=FULLIRI && LA8_0<=ABBRIRI)||LA8_0==14) ) {
                alt8=1;
            }
            switch (alt8) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5746:3: ( (a3_0= parse_west_twouse_language_owl2fs_IRI ) ( (a4_0= parse_west_twouse_language_owl2fs_Comment ) )* ( (a5_0= parse_west_twouse_language_owl2fs_IRI ) )? )
                    {
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5746:3: ( (a3_0= parse_west_twouse_language_owl2fs_IRI ) ( (a4_0= parse_west_twouse_language_owl2fs_Comment ) )* ( (a5_0= parse_west_twouse_language_owl2fs_IRI ) )? )
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5747:4: (a3_0= parse_west_twouse_language_owl2fs_IRI ) ( (a4_0= parse_west_twouse_language_owl2fs_Comment ) )* ( (a5_0= parse_west_twouse_language_owl2fs_IRI ) )?
                    {
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5747:4: (a3_0= parse_west_twouse_language_owl2fs_IRI )
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5748:5: a3_0= parse_west_twouse_language_owl2fs_IRI
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_Ontology590);
                    a3_0=parse_west_twouse_language_owl2fs_IRI();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      					if (terminateParsing) {
                      						throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                      					}
                      					if (element == null) {
                      						element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
                      					}
                      					if (a3_0 != null) {
                      						if (a3_0 != null) {
                      							element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY__ONTOLOGY_IRI), a3_0);
                      							completedElement(a3_0);
                      						}
                      						collectHiddenTokens(element);
                      						copyLocalizationInfos(a3_0, element); 					}
                      				
                    }

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_7, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 18));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 18));
                      			
                    }
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5820:4: ( (a4_0= parse_west_twouse_language_owl2fs_Comment ) )*
                    loop6:
                    do {
                        int alt6=2;
                        int LA6_0 = input.LA(1);

                        if ( (LA6_0==COMMENT) ) {
                            int LA6_2 = input.LA(2);

                            if ( (synpred6_Owl2fs()) ) {
                                alt6=1;
                            }


                        }


                        switch (alt6) {
                    	case 1 :
                    	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5821:5: (a4_0= parse_west_twouse_language_owl2fs_Comment )
                    	    {
                    	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5821:5: (a4_0= parse_west_twouse_language_owl2fs_Comment )
                    	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5822:6: a4_0= parse_west_twouse_language_owl2fs_Comment
                    	    {
                    	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology631);
                    	    a4_0=parse_west_twouse_language_owl2fs_Comment();

                    	    state._fsp--;
                    	    if (state.failed) return element;
                    	    if ( state.backtracking==0 ) {

                    	      						if (terminateParsing) {
                    	      							throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                    	      						}
                    	      						if (element == null) {
                    	      							element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
                    	      						}
                    	      						if (a4_0 != null) {
                    	      							if (a4_0 != null) {
                    	      								addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY__COMMENT, a4_0);
                    	      								completedElement(a4_0);
                    	      							}
                    	      							collectHiddenTokens(element);
                    	      							copyLocalizationInfos(a4_0, element); 						}
                    	      					
                    	    }

                    	    }


                    	    }
                    	    break;

                    	default :
                    	    break loop6;
                        }
                    } while (true);

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_7, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 19));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 19));
                      			
                    }
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5895:4: ( (a5_0= parse_west_twouse_language_owl2fs_IRI ) )?
                    int alt7=2;
                    int LA7_0 = input.LA(1);

                    if ( ((LA7_0>=FULLIRI && LA7_0<=ABBRIRI)||LA7_0==14) ) {
                        alt7=1;
                    }
                    switch (alt7) {
                        case 1 :
                            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5896:5: (a5_0= parse_west_twouse_language_owl2fs_IRI )
                            {
                            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5896:5: (a5_0= parse_west_twouse_language_owl2fs_IRI )
                            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5897:6: a5_0= parse_west_twouse_language_owl2fs_IRI
                            {
                            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_Ontology684);
                            a5_0=parse_west_twouse_language_owl2fs_IRI();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              						if (terminateParsing) {
                              							throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                              						}
                              						if (element == null) {
                              							element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
                              						}
                              						if (a5_0 != null) {
                              							if (a5_0 != null) {
                              								element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY__VERSION_IRI), a5_0);
                              								completedElement(a5_0);
                              							}
                              							collectHiddenTokens(element);
                              							copyLocalizationInfos(a5_0, element); 						}
                              					
                            }

                            }


                            }
                            break;

                    }

                    if ( state.backtracking==0 ) {

                      				// expected elements (follow set)
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_7, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 20));
                      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 20));
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_7, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 21));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 21));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6022:2: ( (a6_0= parse_west_twouse_language_owl2fs_Comment ) )*
            loop9:
            do {
                int alt9=2;
                int LA9_0 = input.LA(1);

                if ( (LA9_0==COMMENT) ) {
                    int LA9_2 = input.LA(2);

                    if ( (synpred9_Owl2fs()) ) {
                        alt9=1;
                    }


                }


                switch (alt9) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6023:3: (a6_0= parse_west_twouse_language_owl2fs_Comment )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6023:3: (a6_0= parse_west_twouse_language_owl2fs_Comment )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6024:4: a6_0= parse_west_twouse_language_owl2fs_Comment
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology746);
            	    a6_0=parse_west_twouse_language_owl2fs_Comment();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
            	      				}
            	      				if (a6_0 != null) {
            	      					if (a6_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY__COMMENT, a6_0);
            	      						completedElement(a6_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a6_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop9;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_7, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 22));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 22));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6094:2: ( (a7= 'Import' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_Comment ) )* (a10_0= parse_west_twouse_language_owl2fs_IRI ) ( (a11_0= parse_west_twouse_language_owl2fs_Comment ) )* a12= ')' ) )*
            loop12:
            do {
                int alt12=2;
                int LA12_0 = input.LA(1);

                if ( (LA12_0==20) ) {
                    alt12=1;
                }


                switch (alt12) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6095:3: (a7= 'Import' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_Comment ) )* (a10_0= parse_west_twouse_language_owl2fs_IRI ) ( (a11_0= parse_west_twouse_language_owl2fs_Comment ) )* a12= ')' )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6095:3: (a7= 'Import' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_Comment ) )* (a10_0= parse_west_twouse_language_owl2fs_IRI ) ( (a11_0= parse_west_twouse_language_owl2fs_Comment ) )* a12= ')' )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6096:4: a7= 'Import' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_Comment ) )* (a10_0= parse_west_twouse_language_owl2fs_IRI ) ( (a11_0= parse_west_twouse_language_owl2fs_Comment ) )* a12= ')'
            	    {
            	    a7=(Token)match(input,20,FOLLOW_20_in_parse_west_twouse_language_owl2fs_Ontology781); if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
            	      				}
            	      				collectHiddenTokens(element);
            	      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_130, 23));
            	      			
            	    }
            	    a8=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_Ontology801); if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
            	      				}
            	      				collectHiddenTokens(element);
            	      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 24));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 24));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 24));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 24));
            	      			
            	    }
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6123:4: ( (a9_0= parse_west_twouse_language_owl2fs_Comment ) )*
            	    loop10:
            	    do {
            	        int alt10=2;
            	        int LA10_0 = input.LA(1);

            	        if ( (LA10_0==COMMENT) ) {
            	            alt10=1;
            	        }


            	        switch (alt10) {
            	    	case 1 :
            	    	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6124:5: (a9_0= parse_west_twouse_language_owl2fs_Comment )
            	    	    {
            	    	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6124:5: (a9_0= parse_west_twouse_language_owl2fs_Comment )
            	    	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6125:6: a9_0= parse_west_twouse_language_owl2fs_Comment
            	    	    {
            	    	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology834);
            	    	    a9_0=parse_west_twouse_language_owl2fs_Comment();

            	    	    state._fsp--;
            	    	    if (state.failed) return element;
            	    	    if ( state.backtracking==0 ) {

            	    	      						if (terminateParsing) {
            	    	      							throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	    	      						}
            	    	      						if (element == null) {
            	    	      							element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
            	    	      						}
            	    	      						if (a9_0 != null) {
            	    	      							if (a9_0 != null) {
            	    	      								addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY__COMMENT, a9_0);
            	    	      								completedElement(a9_0);
            	    	      							}
            	    	      							collectHiddenTokens(element);
            	    	      							copyLocalizationInfos(a9_0, element); 						}
            	    	      					
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop10;
            	        }
            	    } while (true);

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 25));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 25));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 25));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 25));
            	      			
            	    }
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6150:4: (a10_0= parse_west_twouse_language_owl2fs_IRI )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6151:5: a10_0= parse_west_twouse_language_owl2fs_IRI
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_Ontology880);
            	    a10_0=parse_west_twouse_language_owl2fs_IRI();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
            	      					}
            	      					if (a10_0 != null) {
            	      						if (a10_0 != null) {
            	      							addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY__DIRECTLY_IMPORTS_DOCUMENTS, a10_0);
            	      							completedElement(a10_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a10_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 26));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_131, 26));
            	      			
            	    }
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6173:4: ( (a11_0= parse_west_twouse_language_owl2fs_Comment ) )*
            	    loop11:
            	    do {
            	        int alt11=2;
            	        int LA11_0 = input.LA(1);

            	        if ( (LA11_0==COMMENT) ) {
            	            alt11=1;
            	        }


            	        switch (alt11) {
            	    	case 1 :
            	    	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6174:5: (a11_0= parse_west_twouse_language_owl2fs_Comment )
            	    	    {
            	    	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6174:5: (a11_0= parse_west_twouse_language_owl2fs_Comment )
            	    	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6175:6: a11_0= parse_west_twouse_language_owl2fs_Comment
            	    	    {
            	    	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology921);
            	    	    a11_0=parse_west_twouse_language_owl2fs_Comment();

            	    	    state._fsp--;
            	    	    if (state.failed) return element;
            	    	    if ( state.backtracking==0 ) {

            	    	      						if (terminateParsing) {
            	    	      							throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	    	      						}
            	    	      						if (element == null) {
            	    	      							element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
            	    	      						}
            	    	      						if (a11_0 != null) {
            	    	      							if (a11_0 != null) {
            	    	      								addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY__COMMENT, a11_0);
            	    	      								completedElement(a11_0);
            	    	      							}
            	    	      							collectHiddenTokens(element);
            	    	      							copyLocalizationInfos(a11_0, element); 						}
            	    	      					
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop11;
            	        }
            	    } while (true);

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 27));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_131, 27));
            	      			
            	    }
            	    a12=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_Ontology961); if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
            	      				}
            	      				collectHiddenTokens(element);
            	      				copyLocalizationInfos((org.antlr.runtime.CommonToken)a12, element);
            	      			
            	    }
            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_7, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 28));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 28));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop12;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_7, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 29));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 29));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6313:2: ( ( ( (a13_0= parse_west_twouse_language_owl2fs_Comment ) )* (a14_0= parse_west_twouse_language_owl2fs_Annotation ) ) )*
            loop14:
            do {
                int alt14=2;
                alt14 = dfa14.predict(input);
                switch (alt14) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6314:3: ( ( (a13_0= parse_west_twouse_language_owl2fs_Comment ) )* (a14_0= parse_west_twouse_language_owl2fs_Annotation ) )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6314:3: ( ( (a13_0= parse_west_twouse_language_owl2fs_Comment ) )* (a14_0= parse_west_twouse_language_owl2fs_Annotation ) )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6315:4: ( (a13_0= parse_west_twouse_language_owl2fs_Comment ) )* (a14_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6315:4: ( (a13_0= parse_west_twouse_language_owl2fs_Comment ) )*
            	    loop13:
            	    do {
            	        int alt13=2;
            	        int LA13_0 = input.LA(1);

            	        if ( (LA13_0==COMMENT) ) {
            	            alt13=1;
            	        }


            	        switch (alt13) {
            	    	case 1 :
            	    	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6316:5: (a13_0= parse_west_twouse_language_owl2fs_Comment )
            	    	    {
            	    	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6316:5: (a13_0= parse_west_twouse_language_owl2fs_Comment )
            	    	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6317:6: a13_0= parse_west_twouse_language_owl2fs_Comment
            	    	    {
            	    	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology1016);
            	    	    a13_0=parse_west_twouse_language_owl2fs_Comment();

            	    	    state._fsp--;
            	    	    if (state.failed) return element;
            	    	    if ( state.backtracking==0 ) {

            	    	      						if (terminateParsing) {
            	    	      							throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	    	      						}
            	    	      						if (element == null) {
            	    	      							element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
            	    	      						}
            	    	      						if (a13_0 != null) {
            	    	      							if (a13_0 != null) {
            	    	      								addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY__COMMENT, a13_0);
            	    	      								completedElement(a13_0);
            	    	      							}
            	    	      							collectHiddenTokens(element);
            	    	      							copyLocalizationInfos(a13_0, element); 						}
            	    	      					
            	    	    }

            	    	    }


            	    	    }
            	    	    break;

            	    	default :
            	    	    break loop13;
            	        }
            	    } while (true);

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 30));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 30));
            	      			
            	    }
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6340:4: (a14_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6341:5: a14_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_Ontology1062);
            	    a14_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      					if (terminateParsing) {
            	      						throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      					}
            	      					if (element == null) {
            	      						element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
            	      					}
            	      					if (a14_0 != null) {
            	      						if (a14_0 != null) {
            	      							addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY__ONTOLOGY_ANNOTATIONS, a14_0);
            	      							completedElement(a14_0);
            	      						}
            	      						collectHiddenTokens(element);
            	      						copyLocalizationInfos(a14_0, element); 					}
            	      				
            	    }

            	    }

            	    if ( state.backtracking==0 ) {

            	      				// expected elements (follow set)
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 31));
            	      				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 31));
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop14;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 32));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 32));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6463:2: ( (a15_0= parse_west_twouse_language_owl2fs_Axiom ) )*
            loop15:
            do {
                int alt15=2;
                int LA15_0 = input.LA(1);

                if ( (LA15_0==COMMENT||LA15_0==21||(LA15_0>=28 && LA15_0<=31)||(LA15_0>=55 && LA15_0<=59)||(LA15_0>=61 && LA15_0<=88)||(LA15_0>=99 && LA15_0<=100)) ) {
                    alt15=1;
                }


                switch (alt15) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6464:3: (a15_0= parse_west_twouse_language_owl2fs_Axiom )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6464:3: (a15_0= parse_west_twouse_language_owl2fs_Axiom )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6465:4: a15_0= parse_west_twouse_language_owl2fs_Axiom
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Axiom_in_parse_west_twouse_language_owl2fs_Ontology1112);
            	    a15_0=parse_west_twouse_language_owl2fs_Axiom();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
            	      				}
            	      				if (a15_0 != null) {
            	      					if (a15_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY__AXIOMS, a15_0);
            	      						completedElement(a15_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a15_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop15;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 33));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 33));
              	
            }
            a16=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_Ontology1138); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a16, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 34));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6545:2: ( (a17_0= parse_west_twouse_language_owl2fs_Comment ) )*
            loop16:
            do {
                int alt16=2;
                int LA16_0 = input.LA(1);

                if ( (LA16_0==COMMENT) ) {
                    alt16=1;
                }


                switch (alt16) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6546:3: (a17_0= parse_west_twouse_language_owl2fs_Comment )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6546:3: (a17_0= parse_west_twouse_language_owl2fs_Comment )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6547:4: a17_0= parse_west_twouse_language_owl2fs_Comment
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology1161);
            	    a17_0=parse_west_twouse_language_owl2fs_Comment();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createOntology();
            	      				}
            	      				if (a17_0 != null) {
            	      					if (a17_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ONTOLOGY__COMMENT, a17_0);
            	      						completedElement(a17_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a17_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop16;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 35));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 6, parse_west_twouse_language_owl2fs_Ontology_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_Ontology"


    // $ANTLR start "parse_west_twouse_language_owl2fs_Comment"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6571:1: parse_west_twouse_language_owl2fs_Comment returns [west.twouse.language.owl2fs.Comment element = null] : (a0= COMMENT ) ;
    public final west.twouse.language.owl2fs.Comment parse_west_twouse_language_owl2fs_Comment() throws RecognitionException {
        west.twouse.language.owl2fs.Comment element =  null;
        int parse_west_twouse_language_owl2fs_Comment_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 7) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6574:1: ( (a0= COMMENT ) )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6575:2: (a0= COMMENT )
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6575:2: (a0= COMMENT )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6576:3: a0= COMMENT
            {
            a0=(Token)match(input,COMMENT,FOLLOW_COMMENT_in_parse_west_twouse_language_owl2fs_Comment1206); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createComment();
              			}
              			if (a0 != null) {
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("COMMENT");
              				tokenResolver.setOptions(getOptions());
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.COMMENT__COMMENT), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.COMMENT__COMMENT), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_0, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_2, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_7, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 36));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 36));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 7, parse_west_twouse_language_owl2fs_Comment_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_Comment"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ClassDeclaration"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6663:1: parse_west_twouse_language_owl2fs_ClassDeclaration returns [west.twouse.language.owl2fs.ClassDeclaration element = null] : a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'Class' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_Class ) a6= ')' a7= ')' ;
    public final west.twouse.language.owl2fs.ClassDeclaration parse_west_twouse_language_owl2fs_ClassDeclaration() throws RecognitionException {
        west.twouse.language.owl2fs.ClassDeclaration element =  null;
        int parse_west_twouse_language_owl2fs_ClassDeclaration_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.Class a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 8) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6666:1: (a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'Class' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_Class ) a6= ')' a7= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6667:2: a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'Class' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_Class ) a6= ')' a7= ')'
            {
            a0=(Token)match(input,21,FOLLOW_21_in_parse_west_twouse_language_owl2fs_ClassDeclaration1242); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_132, 37));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ClassDeclaration1256); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 38));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_133, 38));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6692:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop17:
            do {
                int alt17=2;
                int LA17_0 = input.LA(1);

                if ( (LA17_0==32) ) {
                    alt17=1;
                }


                switch (alt17) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6693:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6693:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6694:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ClassDeclaration1279);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassDeclaration();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.CLASS_DECLARATION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop17;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 39));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_133, 39));
              	
            }
            a3=(Token)match(input,22,FOLLOW_22_in_parse_west_twouse_language_owl2fs_ClassDeclaration1305); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_134, 40));
              	
            }
            a4=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ClassDeclaration1319); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 41));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 41));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 41));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6743:2: (a5_0= parse_west_twouse_language_owl2fs_Class )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6744:3: a5_0= parse_west_twouse_language_owl2fs_Class
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Class_in_parse_west_twouse_language_owl2fs_ClassDeclaration1337);
            a5_0=parse_west_twouse_language_owl2fs_Class();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassDeclaration();
              			}
              			if (a5_0 != null) {
              				if (a5_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.CLASS_DECLARATION__ENTITY), a5_0);
              					completedElement(a5_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a5_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_55, 42));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ClassDeclaration1355); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_135, 43));
              	
            }
            a7=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ClassDeclaration1369); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 44));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 44));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 8, parse_west_twouse_language_owl2fs_ClassDeclaration_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ClassDeclaration"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DatatypeDeclaration"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6837:1: parse_west_twouse_language_owl2fs_DatatypeDeclaration returns [west.twouse.language.owl2fs.DatatypeDeclaration element = null] : a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'Datatype' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_Datatype ) a6= ')' a7= ')' ;
    public final west.twouse.language.owl2fs.DatatypeDeclaration parse_west_twouse_language_owl2fs_DatatypeDeclaration() throws RecognitionException {
        west.twouse.language.owl2fs.DatatypeDeclaration element =  null;
        int parse_west_twouse_language_owl2fs_DatatypeDeclaration_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.Datatype a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 9) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6840:1: (a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'Datatype' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_Datatype ) a6= ')' a7= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6841:2: a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'Datatype' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_Datatype ) a6= ')' a7= ')'
            {
            a0=(Token)match(input,21,FOLLOW_21_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1398); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_136, 45));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1412); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 46));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_137, 46));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6866:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop18:
            do {
                int alt18=2;
                int LA18_0 = input.LA(1);

                if ( (LA18_0==32) ) {
                    alt18=1;
                }


                switch (alt18) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6867:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6867:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6868:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1435);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDeclaration();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DATATYPE_DECLARATION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop18;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 47));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_137, 47));
              	
            }
            a3=(Token)match(input,23,FOLLOW_23_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1461); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_138, 48));
              	
            }
            a4=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1475); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 49));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 49));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 49));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6917:2: (a5_0= parse_west_twouse_language_owl2fs_Datatype )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6918:3: a5_0= parse_west_twouse_language_owl2fs_Datatype
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Datatype_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1493);
            a5_0=parse_west_twouse_language_owl2fs_Datatype();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDeclaration();
              			}
              			if (a5_0 != null) {
              				if (a5_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATATYPE_DECLARATION__ENTITY), a5_0);
              					completedElement(a5_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a5_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_86, 50));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1511); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_139, 51));
              	
            }
            a7=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1525); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 52));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 52));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 9, parse_west_twouse_language_owl2fs_DatatypeDeclaration_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DatatypeDeclaration"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7011:1: parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration returns [west.twouse.language.owl2fs.ObjectPropertyDeclaration element = null] : a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'ObjectProperty' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_ObjectProperty ) a6= ')' a7= ')' ;
    public final west.twouse.language.owl2fs.ObjectPropertyDeclaration parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectPropertyDeclaration element =  null;
        int parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectProperty a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 10) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7014:1: (a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'ObjectProperty' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_ObjectProperty ) a6= ')' a7= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7015:2: a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'ObjectProperty' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_ObjectProperty ) a6= ')' a7= ')'
            {
            a0=(Token)match(input,21,FOLLOW_21_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1554); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_140, 53));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1568); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 54));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_141, 54));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7040:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop19:
            do {
                int alt19=2;
                int LA19_0 = input.LA(1);

                if ( (LA19_0==32) ) {
                    alt19=1;
                }


                switch (alt19) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7041:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7041:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7042:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1591);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDeclaration();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_DECLARATION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop19;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 55));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_141, 55));
              	
            }
            a3=(Token)match(input,24,FOLLOW_24_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1617); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_142, 56));
              	
            }
            a4=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1631); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 57));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 57));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 57));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7091:2: (a5_0= parse_west_twouse_language_owl2fs_ObjectProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7092:3: a5_0= parse_west_twouse_language_owl2fs_ObjectProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectProperty_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1649);
            a5_0=parse_west_twouse_language_owl2fs_ObjectProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDeclaration();
              			}
              			if (a5_0 != null) {
              				if (a5_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_DECLARATION__ENTITY), a5_0);
              					completedElement(a5_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a5_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_108, 58));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1667); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_143, 59));
              	
            }
            a7=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1681); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 60));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 60));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 10, parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataPropertyDeclaration"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7185:1: parse_west_twouse_language_owl2fs_DataPropertyDeclaration returns [west.twouse.language.owl2fs.DataPropertyDeclaration element = null] : a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'DataProperty' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_DataProperty ) a6= ')' a7= ')' ;
    public final west.twouse.language.owl2fs.DataPropertyDeclaration parse_west_twouse_language_owl2fs_DataPropertyDeclaration() throws RecognitionException {
        west.twouse.language.owl2fs.DataPropertyDeclaration element =  null;
        int parse_west_twouse_language_owl2fs_DataPropertyDeclaration_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.DataProperty a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 11) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7188:1: (a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'DataProperty' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_DataProperty ) a6= ')' a7= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7189:2: a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'DataProperty' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_DataProperty ) a6= ')' a7= ')'
            {
            a0=(Token)match(input,21,FOLLOW_21_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1710); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_144, 61));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1724); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 62));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_145, 62));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7214:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop20:
            do {
                int alt20=2;
                int LA20_0 = input.LA(1);

                if ( (LA20_0==32) ) {
                    alt20=1;
                }


                switch (alt20) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7215:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7215:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7216:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1747);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDeclaration();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY_DECLARATION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop20;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 63));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_145, 63));
              	
            }
            a3=(Token)match(input,25,FOLLOW_25_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1773); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_146, 64));
              	
            }
            a4=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1787); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 65));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 65));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 65));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7265:2: (a5_0= parse_west_twouse_language_owl2fs_DataProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7266:3: a5_0= parse_west_twouse_language_owl2fs_DataProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataProperty_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1805);
            a5_0=parse_west_twouse_language_owl2fs_DataProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDeclaration();
              			}
              			if (a5_0 != null) {
              				if (a5_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY_DECLARATION__ENTITY), a5_0);
              					completedElement(a5_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a5_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_119, 66));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1823); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_147, 67));
              	
            }
            a7=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1837); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 68));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 68));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 11, parse_west_twouse_language_owl2fs_DataPropertyDeclaration_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataPropertyDeclaration"


    // $ANTLR start "parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7359:1: parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration returns [west.twouse.language.owl2fs.AnnotationPropertyDeclaration element = null] : a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'AnnotationProperty' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) a6= ')' a7= ')' ;
    public final west.twouse.language.owl2fs.AnnotationPropertyDeclaration parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration() throws RecognitionException {
        west.twouse.language.owl2fs.AnnotationPropertyDeclaration element =  null;
        int parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.AnnotationProperty a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 12) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7362:1: (a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'AnnotationProperty' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) a6= ')' a7= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7363:2: a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'AnnotationProperty' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) a6= ')' a7= ')'
            {
            a0=(Token)match(input,21,FOLLOW_21_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1866); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_148, 69));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1880); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 70));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_149, 70));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7388:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop21:
            do {
                int alt21=2;
                int LA21_0 = input.LA(1);

                if ( (LA21_0==32) ) {
                    alt21=1;
                }


                switch (alt21) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7389:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7389:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7390:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1903);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDeclaration();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_PROPERTY_DECLARATION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop21;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 71));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_149, 71));
              	
            }
            a3=(Token)match(input,26,FOLLOW_26_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1929); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_150, 72));
              	
            }
            a4=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1943); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 73));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 73));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 73));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7439:2: (a5_0= parse_west_twouse_language_owl2fs_AnnotationProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7440:3: a5_0= parse_west_twouse_language_owl2fs_AnnotationProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1961);
            a5_0=parse_west_twouse_language_owl2fs_AnnotationProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDeclaration();
              			}
              			if (a5_0 != null) {
              				if (a5_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_PROPERTY_DECLARATION__ENTITY), a5_0);
              					completedElement(a5_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a5_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_121, 74));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1979); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_151, 75));
              	
            }
            a7=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1993); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 76));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 76));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 12, parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration"


    // $ANTLR start "parse_west_twouse_language_owl2fs_NamedIndividualDeclaration"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7533:1: parse_west_twouse_language_owl2fs_NamedIndividualDeclaration returns [west.twouse.language.owl2fs.NamedIndividualDeclaration element = null] : a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'NamedIndividual' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_NamedIndividual ) a6= ')' a7= ')' ;
    public final west.twouse.language.owl2fs.NamedIndividualDeclaration parse_west_twouse_language_owl2fs_NamedIndividualDeclaration() throws RecognitionException {
        west.twouse.language.owl2fs.NamedIndividualDeclaration element =  null;
        int parse_west_twouse_language_owl2fs_NamedIndividualDeclaration_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.NamedIndividual a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 13) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7536:1: (a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'NamedIndividual' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_NamedIndividual ) a6= ')' a7= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7537:2: a0= 'Declaration' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'NamedIndividual' a4= '(' (a5_0= parse_west_twouse_language_owl2fs_NamedIndividual ) a6= ')' a7= ')'
            {
            a0=(Token)match(input,21,FOLLOW_21_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2022); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNamedIndividualDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_152, 77));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2036); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNamedIndividualDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 78));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_153, 78));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7562:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop22:
            do {
                int alt22=2;
                int LA22_0 = input.LA(1);

                if ( (LA22_0==32) ) {
                    alt22=1;
                }


                switch (alt22) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7563:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7563:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7564:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2059);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNamedIndividualDeclaration();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.NAMED_INDIVIDUAL_DECLARATION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop22;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 79));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_153, 79));
              	
            }
            a3=(Token)match(input,27,FOLLOW_27_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2085); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNamedIndividualDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_154, 80));
              	
            }
            a4=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2099); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNamedIndividualDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 81));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 81));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 81));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7613:2: (a5_0= parse_west_twouse_language_owl2fs_NamedIndividual )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7614:3: a5_0= parse_west_twouse_language_owl2fs_NamedIndividual
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2117);
            a5_0=parse_west_twouse_language_owl2fs_NamedIndividual();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNamedIndividualDeclaration();
              			}
              			if (a5_0 != null) {
              				if (a5_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.NAMED_INDIVIDUAL_DECLARATION__ENTITY), a5_0);
              					completedElement(a5_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a5_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_122, 82));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2135); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNamedIndividualDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_155, 83));
              	
            }
            a7=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2149); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNamedIndividualDeclaration();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 84));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 84));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 13, parse_west_twouse_language_owl2fs_NamedIndividualDeclaration_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_NamedIndividualDeclaration"


    // $ANTLR start "parse_west_twouse_language_owl2fs_Class"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7707:1: parse_west_twouse_language_owl2fs_Class returns [west.twouse.language.owl2fs.Class element = null] : (a0_0= parse_west_twouse_language_owl2fs_IRI ) ;
    public final west.twouse.language.owl2fs.Class parse_west_twouse_language_owl2fs_Class() throws RecognitionException {
        west.twouse.language.owl2fs.Class element =  null;
        int parse_west_twouse_language_owl2fs_Class_StartIndex = input.index();
        west.twouse.language.owl2fs.IRI a0_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 14) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7710:1: ( (a0_0= parse_west_twouse_language_owl2fs_IRI ) )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7711:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7711:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7712:3: a0_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_Class2182);
            a0_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClass();
              			}
              			if (a0_0 != null) {
              				if (a0_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.CLASS__ENTITY_IRI), a0_0);
              					completedElement(a0_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a0_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_55, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 85));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_85, 85));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 14, parse_west_twouse_language_owl2fs_Class_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_Class"


    // $ANTLR start "parse_west_twouse_language_owl2fs_Datatype"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7768:1: parse_west_twouse_language_owl2fs_Datatype returns [west.twouse.language.owl2fs.Datatype element = null] : (a0_0= parse_west_twouse_language_owl2fs_IRI ) ;
    public final west.twouse.language.owl2fs.Datatype parse_west_twouse_language_owl2fs_Datatype() throws RecognitionException {
        west.twouse.language.owl2fs.Datatype element =  null;
        int parse_west_twouse_language_owl2fs_Datatype_StartIndex = input.index();
        west.twouse.language.owl2fs.IRI a0_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 15) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7771:1: ( (a0_0= parse_west_twouse_language_owl2fs_IRI ) )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7772:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7772:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7773:3: a0_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_Datatype2219);
            a0_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatype();
              			}
              			if (a0_0 != null) {
              				if (a0_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATATYPE__ENTITY_IRI), a0_0);
              					completedElement(a0_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a0_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_86, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_87, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_88, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_90, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_91, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_92, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_93, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_94, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_95, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_96, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_97, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_98, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_99, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_100, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_101, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_102, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_103, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_104, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 86));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 86));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 15, parse_west_twouse_language_owl2fs_Datatype_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_Datatype"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectProperty"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7821:1: parse_west_twouse_language_owl2fs_ObjectProperty returns [west.twouse.language.owl2fs.ObjectProperty element = null] : (a0_0= parse_west_twouse_language_owl2fs_IRI ) ;
    public final west.twouse.language.owl2fs.ObjectProperty parse_west_twouse_language_owl2fs_ObjectProperty() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectProperty element =  null;
        int parse_west_twouse_language_owl2fs_ObjectProperty_StartIndex = input.index();
        west.twouse.language.owl2fs.IRI a0_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 16) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7824:1: ( (a0_0= parse_west_twouse_language_owl2fs_IRI ) )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7825:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7825:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7826:3: a0_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_ObjectProperty2256);
            a0_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectProperty();
              			}
              			if (a0_0 != null) {
              				if (a0_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY__ENTITY_IRI), a0_0);
              					completedElement(a0_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a0_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_108, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_109, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_110, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_112, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_113, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_114, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_115, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_116, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_117, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_118, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_156, 87));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 87));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 16, parse_west_twouse_language_owl2fs_ObjectProperty_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectProperty"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataProperty"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7885:1: parse_west_twouse_language_owl2fs_DataProperty returns [west.twouse.language.owl2fs.DataProperty element = null] : (a0_0= parse_west_twouse_language_owl2fs_IRI ) ;
    public final west.twouse.language.owl2fs.DataProperty parse_west_twouse_language_owl2fs_DataProperty() throws RecognitionException {
        west.twouse.language.owl2fs.DataProperty element =  null;
        int parse_west_twouse_language_owl2fs_DataProperty_StartIndex = input.index();
        west.twouse.language.owl2fs.IRI a0_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 17) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7888:1: ( (a0_0= parse_west_twouse_language_owl2fs_IRI ) )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7889:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7889:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7890:3: a0_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_DataProperty2293);
            a0_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataProperty();
              			}
              			if (a0_0 != null) {
              				if (a0_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY__ENTITY_IRI), a0_0);
              					completedElement(a0_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a0_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_119, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_101, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_102, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_103, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_120, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_157, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 88));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 88));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 17, parse_west_twouse_language_owl2fs_DataProperty_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataProperty"


    // $ANTLR start "parse_west_twouse_language_owl2fs_AnnotationProperty"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7944:1: parse_west_twouse_language_owl2fs_AnnotationProperty returns [west.twouse.language.owl2fs.AnnotationProperty element = null] : (a0_0= parse_west_twouse_language_owl2fs_IRI ) ;
    public final west.twouse.language.owl2fs.AnnotationProperty parse_west_twouse_language_owl2fs_AnnotationProperty() throws RecognitionException {
        west.twouse.language.owl2fs.AnnotationProperty element =  null;
        int parse_west_twouse_language_owl2fs_AnnotationProperty_StartIndex = input.index();
        west.twouse.language.owl2fs.IRI a0_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 18) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7947:1: ( (a0_0= parse_west_twouse_language_owl2fs_IRI ) )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7948:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7948:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7949:3: a0_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_AnnotationProperty2330);
            a0_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationProperty();
              			}
              			if (a0_0 != null) {
              				if (a0_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_PROPERTY__ENTITY_IRI), a0_0);
              					completedElement(a0_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a0_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_121, 89));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 89));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 89));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 89));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 89));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 89));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 18, parse_west_twouse_language_owl2fs_AnnotationProperty_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_AnnotationProperty"


    // $ANTLR start "parse_west_twouse_language_owl2fs_NamedIndividual"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7977:1: parse_west_twouse_language_owl2fs_NamedIndividual returns [west.twouse.language.owl2fs.NamedIndividual element = null] : (a0_0= parse_west_twouse_language_owl2fs_IRI ) ;
    public final west.twouse.language.owl2fs.NamedIndividual parse_west_twouse_language_owl2fs_NamedIndividual() throws RecognitionException {
        west.twouse.language.owl2fs.NamedIndividual element =  null;
        int parse_west_twouse_language_owl2fs_NamedIndividual_StartIndex = input.index();
        west.twouse.language.owl2fs.IRI a0_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 19) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7980:1: ( (a0_0= parse_west_twouse_language_owl2fs_IRI ) )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7981:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7981:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:7982:3: a0_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_NamedIndividual2367);
            a0_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNamedIndividual();
              			}
              			if (a0_0 != null) {
              				if (a0_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.NAMED_INDIVIDUAL__ENTITY_IRI), a0_0);
              					completedElement(a0_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a0_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_122, 90));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 90));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 90));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 90));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 90));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_123, 90));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_158, 90));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_159, 90));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 90));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_160, 90));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 90));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 19, parse_west_twouse_language_owl2fs_NamedIndividual_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_NamedIndividual"


    // $ANTLR start "parse_west_twouse_language_owl2fs_AnnotationAssertion"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8015:1: parse_west_twouse_language_owl2fs_AnnotationAssertion returns [west.twouse.language.owl2fs.AnnotationAssertion element = null] : a0= 'AnnotationAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_AnnotationSubject ) (a5_0= parse_west_twouse_language_owl2fs_AnnotationValue ) a6= ')' ;
    public final west.twouse.language.owl2fs.AnnotationAssertion parse_west_twouse_language_owl2fs_AnnotationAssertion() throws RecognitionException {
        west.twouse.language.owl2fs.AnnotationAssertion element =  null;
        int parse_west_twouse_language_owl2fs_AnnotationAssertion_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a6=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.AnnotationProperty a3_0 = null;

        west.twouse.language.owl2fs.AnnotationSubject a4_0 = null;

        west.twouse.language.owl2fs.AnnotationValue a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 20) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8018:1: (a0= 'AnnotationAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_AnnotationSubject ) (a5_0= parse_west_twouse_language_owl2fs_AnnotationValue ) a6= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8019:2: a0= 'AnnotationAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_AnnotationSubject ) (a5_0= parse_west_twouse_language_owl2fs_AnnotationValue ) a6= ')'
            {
            a0=(Token)match(input,28,FOLLOW_28_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2400); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_161, 91));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2414); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 92));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 92));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 92));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 92));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8046:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop23:
            do {
                int alt23=2;
                int LA23_0 = input.LA(1);

                if ( (LA23_0==32) ) {
                    alt23=1;
                }


                switch (alt23) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8047:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8047:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8048:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2437);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationAssertion();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_ASSERTION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop23;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 93));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 93));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 93));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 93));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8073:2: (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8074:3: a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2467);
            a3_0=parse_west_twouse_language_owl2fs_AnnotationProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationAssertion();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_ASSERTION__ANNOTATION_PROPERTY), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 94));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 94));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 94));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 94));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8098:2: (a4_0= parse_west_twouse_language_owl2fs_AnnotationSubject )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8099:3: a4_0= parse_west_twouse_language_owl2fs_AnnotationSubject
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationSubject_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2489);
            a4_0=parse_west_twouse_language_owl2fs_AnnotationSubject();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationAssertion();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_ASSERTION__ANNOTATION_SUBJECT), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 95));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 95));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 95));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 95));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 95));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8124:2: (a5_0= parse_west_twouse_language_owl2fs_AnnotationValue )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8125:3: a5_0= parse_west_twouse_language_owl2fs_AnnotationValue
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationValue_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2511);
            a5_0=parse_west_twouse_language_owl2fs_AnnotationValue();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationAssertion();
              			}
              			if (a5_0 != null) {
              				if (a5_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_ASSERTION__ANNOTATION_VALUE), a5_0);
              					completedElement(a5_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a5_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_87, 96));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2529); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 97));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 97));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 20, parse_west_twouse_language_owl2fs_AnnotationAssertion_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_AnnotationAssertion"


    // $ANTLR start "parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8206:1: parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf returns [west.twouse.language.owl2fs.SubAnnotationPropertyOf element = null] : a0= 'SubAnnotationPropertyOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) a5= ')' ;
    public final west.twouse.language.owl2fs.SubAnnotationPropertyOf parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf() throws RecognitionException {
        west.twouse.language.owl2fs.SubAnnotationPropertyOf element =  null;
        int parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.AnnotationProperty a3_0 = null;

        west.twouse.language.owl2fs.AnnotationProperty a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 21) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8209:1: (a0= 'SubAnnotationPropertyOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8210:2: a0= 'SubAnnotationPropertyOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) a5= ')'
            {
            a0=(Token)match(input,29,FOLLOW_29_in_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf2558); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubAnnotationPropertyOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_162, 98));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf2572); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubAnnotationPropertyOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 99));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 99));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 99));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 99));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8237:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop24:
            do {
                int alt24=2;
                int LA24_0 = input.LA(1);

                if ( (LA24_0==32) ) {
                    alt24=1;
                }


                switch (alt24) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8238:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8238:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8239:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf2595);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubAnnotationPropertyOf();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.SUB_ANNOTATION_PROPERTY_OF__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop24;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 100));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 100));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 100));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 100));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8264:2: (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8265:3: a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf2625);
            a3_0=parse_west_twouse_language_owl2fs_AnnotationProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubAnnotationPropertyOf();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.SUB_ANNOTATION_PROPERTY_OF__SUB_ANNOTATION_PROPERTY), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 101));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 101));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 101));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8288:2: (a4_0= parse_west_twouse_language_owl2fs_AnnotationProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8289:3: a4_0= parse_west_twouse_language_owl2fs_AnnotationProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf2647);
            a4_0=parse_west_twouse_language_owl2fs_AnnotationProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubAnnotationPropertyOf();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.SUB_ANNOTATION_PROPERTY_OF__SUPER_ANNOTATION_PROPERTY), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_163, 102));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf2665); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubAnnotationPropertyOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 103));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 103));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 21, parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf"


    // $ANTLR start "parse_west_twouse_language_owl2fs_AnnotationPropertyDomain"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8370:1: parse_west_twouse_language_owl2fs_AnnotationPropertyDomain returns [west.twouse.language.owl2fs.AnnotationPropertyDomain element = null] : a0= 'AnnotationPropertyDomain' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_IRI ) a5= ')' ;
    public final west.twouse.language.owl2fs.AnnotationPropertyDomain parse_west_twouse_language_owl2fs_AnnotationPropertyDomain() throws RecognitionException {
        west.twouse.language.owl2fs.AnnotationPropertyDomain element =  null;
        int parse_west_twouse_language_owl2fs_AnnotationPropertyDomain_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.AnnotationProperty a3_0 = null;

        west.twouse.language.owl2fs.IRI a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 22) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8373:1: (a0= 'AnnotationPropertyDomain' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_IRI ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8374:2: a0= 'AnnotationPropertyDomain' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_IRI ) a5= ')'
            {
            a0=(Token)match(input,30,FOLLOW_30_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain2694); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDomain();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_164, 104));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain2708); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDomain();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 105));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 105));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 105));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 105));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8401:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop25:
            do {
                int alt25=2;
                int LA25_0 = input.LA(1);

                if ( (LA25_0==32) ) {
                    alt25=1;
                }


                switch (alt25) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8402:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8402:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8403:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain2731);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDomain();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_PROPERTY_DOMAIN__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop25;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 106));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 106));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 106));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 106));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8428:2: (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8429:3: a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain2761);
            a3_0=parse_west_twouse_language_owl2fs_AnnotationProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDomain();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_PROPERTY_DOMAIN__ANNOTATION_PROPERTY), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 107));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 107));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 107));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8452:2: (a4_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8453:3: a4_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain2783);
            a4_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDomain();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_PROPERTY_DOMAIN__IRI), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_165, 108));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain2801); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyDomain();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 109));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 109));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 22, parse_west_twouse_language_owl2fs_AnnotationPropertyDomain_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_AnnotationPropertyDomain"


    // $ANTLR start "parse_west_twouse_language_owl2fs_AnnotationPropertyRange"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8534:1: parse_west_twouse_language_owl2fs_AnnotationPropertyRange returns [west.twouse.language.owl2fs.AnnotationPropertyRange element = null] : a0= 'AnnotationPropertyRange' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_IRI ) a5= ')' ;
    public final west.twouse.language.owl2fs.AnnotationPropertyRange parse_west_twouse_language_owl2fs_AnnotationPropertyRange() throws RecognitionException {
        west.twouse.language.owl2fs.AnnotationPropertyRange element =  null;
        int parse_west_twouse_language_owl2fs_AnnotationPropertyRange_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.AnnotationProperty a3_0 = null;

        west.twouse.language.owl2fs.IRI a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 23) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8537:1: (a0= 'AnnotationPropertyRange' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_IRI ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8538:2: a0= 'AnnotationPropertyRange' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_IRI ) a5= ')'
            {
            a0=(Token)match(input,31,FOLLOW_31_in_parse_west_twouse_language_owl2fs_AnnotationPropertyRange2830); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyRange();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_166, 110));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_AnnotationPropertyRange2844); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyRange();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 111));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 111));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 111));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 111));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8565:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop26:
            do {
                int alt26=2;
                int LA26_0 = input.LA(1);

                if ( (LA26_0==32) ) {
                    alt26=1;
                }


                switch (alt26) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8566:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8566:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8567:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_AnnotationPropertyRange2867);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyRange();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_PROPERTY_RANGE__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop26;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 112));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 112));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 112));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 112));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8592:2: (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8593:3: a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_AnnotationPropertyRange2897);
            a3_0=parse_west_twouse_language_owl2fs_AnnotationProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyRange();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_PROPERTY_RANGE__ANNOTATION_PROPERTY), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 113));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 113));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 113));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8616:2: (a4_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8617:3: a4_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_AnnotationPropertyRange2919);
            a4_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyRange();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION_PROPERTY_RANGE__IRI), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_167, 114));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_AnnotationPropertyRange2937); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotationPropertyRange();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 115));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 115));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 23, parse_west_twouse_language_owl2fs_AnnotationPropertyRange_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_AnnotationPropertyRange"


    // $ANTLR start "parse_west_twouse_language_owl2fs_Annotation"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8698:1: parse_west_twouse_language_owl2fs_Annotation returns [west.twouse.language.owl2fs.Annotation element = null] : a0= 'Annotation' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_AnnotationValue ) a5= ')' ;
    public final west.twouse.language.owl2fs.Annotation parse_west_twouse_language_owl2fs_Annotation() throws RecognitionException {
        west.twouse.language.owl2fs.Annotation element =  null;
        int parse_west_twouse_language_owl2fs_Annotation_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.AnnotationProperty a3_0 = null;

        west.twouse.language.owl2fs.AnnotationValue a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 24) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8701:1: (a0= 'Annotation' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_AnnotationValue ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8702:2: a0= 'Annotation' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty ) (a4_0= parse_west_twouse_language_owl2fs_AnnotationValue ) a5= ')'
            {
            a0=(Token)match(input,32,FOLLOW_32_in_parse_west_twouse_language_owl2fs_Annotation2966); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_168, 116));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_Annotation2980); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 117));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 117));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 117));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 117));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8729:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop27:
            do {
                int alt27=2;
                int LA27_0 = input.LA(1);

                if ( (LA27_0==32) ) {
                    alt27=1;
                }


                switch (alt27) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8730:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8730:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8731:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_Annotation3003);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotation();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION__ANNOTATION_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop27;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 118));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 118));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 118));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 118));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8756:2: (a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8757:3: a3_0= parse_west_twouse_language_owl2fs_AnnotationProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_Annotation3033);
            a3_0=parse_west_twouse_language_owl2fs_AnnotationProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotation();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION__ANNOTATION_PROPERTY), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 119));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 119));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 119));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 119));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 119));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8782:2: (a4_0= parse_west_twouse_language_owl2fs_AnnotationValue )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8783:3: a4_0= parse_west_twouse_language_owl2fs_AnnotationValue
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationValue_in_parse_west_twouse_language_owl2fs_Annotation3055);
            a4_0=parse_west_twouse_language_owl2fs_AnnotationValue();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotation();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANNOTATION__ANNOTATION_VALUE), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_88, 120));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_Annotation3073); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnnotation();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_133, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_137, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_141, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_145, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_149, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_153, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_169, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_156, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_170, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_171, 121));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_172, 121));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 24, parse_west_twouse_language_owl2fs_Annotation_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_Annotation"


    // $ANTLR start "parse_west_twouse_language_owl2fs_AnonymousIndividual"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8897:1: parse_west_twouse_language_owl2fs_AnonymousIndividual returns [west.twouse.language.owl2fs.AnonymousIndividual element = null] : (a0= NODE ) ;
    public final west.twouse.language.owl2fs.AnonymousIndividual parse_west_twouse_language_owl2fs_AnonymousIndividual() throws RecognitionException {
        west.twouse.language.owl2fs.AnonymousIndividual element =  null;
        int parse_west_twouse_language_owl2fs_AnonymousIndividual_StartIndex = input.index();
        Token a0=null;



        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 25) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8900:1: ( (a0= NODE ) )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8901:2: (a0= NODE )
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8901:2: (a0= NODE )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8902:3: a0= NODE
            {
            a0=(Token)match(input,NODE,FOLLOW_NODE_in_parse_west_twouse_language_owl2fs_AnonymousIndividual3106); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAnonymousIndividual();
              			}
              			if (a0 != null) {
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("NODE");
              				tokenResolver.setOptions(getOptions());
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANONYMOUS_INDIVIDUAL__NODE_ID), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ANONYMOUS_INDIVIDUAL__NODE_ID), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 122));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 122));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 122));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 122));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 122));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_88, 122));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_123, 122));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_158, 122));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_160, 122));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 122));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 25, parse_west_twouse_language_owl2fs_AnonymousIndividual_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_AnonymousIndividual"


    // $ANTLR start "parse_west_twouse_language_owl2fs_Literal"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8945:1: parse_west_twouse_language_owl2fs_Literal returns [west.twouse.language.owl2fs.Literal element = null] : (a0= LITERAL ) ( (a1= '^^' (a2_0= parse_west_twouse_language_owl2fs_Datatype ) | (a3= LANGTAG ) ) )? ;
    public final west.twouse.language.owl2fs.Literal parse_west_twouse_language_owl2fs_Literal() throws RecognitionException {
        west.twouse.language.owl2fs.Literal element =  null;
        int parse_west_twouse_language_owl2fs_Literal_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        west.twouse.language.owl2fs.Datatype a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 26) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8948:1: ( (a0= LITERAL ) ( (a1= '^^' (a2_0= parse_west_twouse_language_owl2fs_Datatype ) | (a3= LANGTAG ) ) )? )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8949:2: (a0= LITERAL ) ( (a1= '^^' (a2_0= parse_west_twouse_language_owl2fs_Datatype ) | (a3= LANGTAG ) ) )?
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8949:2: (a0= LITERAL )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8950:3: a0= LITERAL
            {
            a0=(Token)match(input,LITERAL,FOLLOW_LITERAL_in_parse_west_twouse_language_owl2fs_Literal3146); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createLiteral();
              			}
              			if (a0 != null) {
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("LITERAL");
              				tokenResolver.setOptions(getOptions());
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a0.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.LITERAL__LEXICAL_VALUE), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a0).getLine(), ((org.antlr.runtime.CommonToken) a0).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a0).getStartIndex(), ((org.antlr.runtime.CommonToken) a0).getStopIndex());
              				}
              				java.lang.String resolved = (java.lang.String)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.LITERAL__LEXICAL_VALUE), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a0, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_173, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_174, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_87, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_88, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_90, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_91, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_92, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_93, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_94, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_95, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_96, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 123));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_97, 123));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8998:2: ( (a1= '^^' (a2_0= parse_west_twouse_language_owl2fs_Datatype ) | (a3= LANGTAG ) ) )?
            int alt29=2;
            int LA29_0 = input.LA(1);

            if ( (LA29_0==LANGTAG||LA29_0==33) ) {
                alt29=1;
            }
            switch (alt29) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8999:3: (a1= '^^' (a2_0= parse_west_twouse_language_owl2fs_Datatype ) | (a3= LANGTAG ) )
                    {
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:8999:3: (a1= '^^' (a2_0= parse_west_twouse_language_owl2fs_Datatype ) | (a3= LANGTAG ) )
                    int alt28=2;
                    int LA28_0 = input.LA(1);

                    if ( (LA28_0==33) ) {
                        alt28=1;
                    }
                    else if ( (LA28_0==LANGTAG) ) {
                        alt28=2;
                    }
                    else {
                        if (state.backtracking>0) {state.failed=true; return element;}
                        NoViableAltException nvae =
                            new NoViableAltException("", 28, 0, input);

                        throw nvae;
                    }
                    switch (alt28) {
                        case 1 :
                            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9000:4: a1= '^^' (a2_0= parse_west_twouse_language_owl2fs_Datatype )
                            {
                            a1=(Token)match(input,33,FOLLOW_33_in_parse_west_twouse_language_owl2fs_Literal3176); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              				if (element == null) {
                              					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createLiteral();
                              				}
                              				collectHiddenTokens(element);
                              				copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
                              			
                            }
                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 124));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 124));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 124));
                              			
                            }
                            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9014:4: (a2_0= parse_west_twouse_language_owl2fs_Datatype )
                            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9015:5: a2_0= parse_west_twouse_language_owl2fs_Datatype
                            {
                            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Datatype_in_parse_west_twouse_language_owl2fs_Literal3202);
                            a2_0=parse_west_twouse_language_owl2fs_Datatype();

                            state._fsp--;
                            if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createLiteral();
                              					}
                              					if (a2_0 != null) {
                              						if (a2_0 != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.LITERAL__DATATYPE), a2_0);
                              							completedElement(a2_0);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos(a2_0, element); 					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_87, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_88, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_90, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_91, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_92, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_93, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_94, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_95, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_96, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 125));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_97, 125));
                              			
                            }

                            }
                            break;
                        case 2 :
                            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9051:8: (a3= LANGTAG )
                            {
                            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9051:8: (a3= LANGTAG )
                            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9052:5: a3= LANGTAG
                            {
                            a3=(Token)match(input,LANGTAG,FOLLOW_LANGTAG_in_parse_west_twouse_language_owl2fs_Literal3244); if (state.failed) return element;
                            if ( state.backtracking==0 ) {

                              					if (terminateParsing) {
                              						throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                              					}
                              					if (element == null) {
                              						element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createLiteral();
                              					}
                              					if (a3 != null) {
                              						west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("LANGTAG");
                              						tokenResolver.setOptions(getOptions());
                              						west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
                              						tokenResolver.resolve(a3.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.LITERAL__LANGUAGE_TAG), result);
                              						java.lang.Object resolvedObject = result.getResolvedToken();
                              						if (resolvedObject == null) {
                              							addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a3).getLine(), ((org.antlr.runtime.CommonToken) a3).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a3).getStartIndex(), ((org.antlr.runtime.CommonToken) a3).getStopIndex());
                              						}
                              						java.lang.String resolved = (java.lang.String)resolvedObject;
                              						if (resolved != null) {
                              							element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.LITERAL__LANGUAGE_TAG), resolved);
                              							completedElement(resolved);
                              						}
                              						collectHiddenTokens(element);
                              						copyLocalizationInfos((org.antlr.runtime.CommonToken) a3, element);
                              					}
                              				
                            }

                            }

                            if ( state.backtracking==0 ) {

                              				// expected elements (follow set)
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_87, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_88, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_90, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_91, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_92, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_93, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_94, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_95, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_96, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 126));
                              				addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_97, 126));
                              			
                            }

                            }
                            break;

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_87, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_88, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_90, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_91, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_92, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_93, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_94, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_95, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_96, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 127));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_97, 127));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 26, parse_west_twouse_language_owl2fs_Literal_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_Literal"


    // $ANTLR start "parse_west_twouse_language_owl2fs_InverseObjectProperty"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9121:1: parse_west_twouse_language_owl2fs_InverseObjectProperty returns [west.twouse.language.owl2fs.InverseObjectProperty element = null] : a0= 'ObjectInverseOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectProperty ) a3= ')' ;
    public final west.twouse.language.owl2fs.InverseObjectProperty parse_west_twouse_language_owl2fs_InverseObjectProperty() throws RecognitionException {
        west.twouse.language.owl2fs.InverseObjectProperty element =  null;
        int parse_west_twouse_language_owl2fs_InverseObjectProperty_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        west.twouse.language.owl2fs.ObjectProperty a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 27) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9124:1: (a0= 'ObjectInverseOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectProperty ) a3= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9125:2: a0= 'ObjectInverseOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectProperty ) a3= ')'
            {
            a0=(Token)match(input,34,FOLLOW_34_in_parse_west_twouse_language_owl2fs_InverseObjectProperty3305); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_175, 128));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_InverseObjectProperty3319); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 129));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 129));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 129));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9151:2: (a2_0= parse_west_twouse_language_owl2fs_ObjectProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9152:3: a2_0= parse_west_twouse_language_owl2fs_ObjectProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectProperty_in_parse_west_twouse_language_owl2fs_InverseObjectProperty3337);
            a2_0=parse_west_twouse_language_owl2fs_ObjectProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseObjectProperty();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.INVERSE_OBJECT_PROPERTY__OBJECT_PROPERTY), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_109, 130));
              	
            }
            a3=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_InverseObjectProperty3355); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_110, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_112, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_113, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_114, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_115, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_116, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_117, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_118, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_156, 131));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 131));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 27, parse_west_twouse_language_owl2fs_InverseObjectProperty_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_InverseObjectProperty"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataComplementOf"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9221:1: parse_west_twouse_language_owl2fs_DataComplementOf returns [west.twouse.language.owl2fs.DataComplementOf element = null] : a0= 'DataComplementOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataRange ) a3= ')' ;
    public final west.twouse.language.owl2fs.DataComplementOf parse_west_twouse_language_owl2fs_DataComplementOf() throws RecognitionException {
        west.twouse.language.owl2fs.DataComplementOf element =  null;
        int parse_west_twouse_language_owl2fs_DataComplementOf_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        west.twouse.language.owl2fs.DataRange a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 28) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9224:1: (a0= 'DataComplementOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataRange ) a3= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9225:2: a0= 'DataComplementOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataRange ) a3= ')'
            {
            a0=(Token)match(input,35,FOLLOW_35_in_parse_west_twouse_language_owl2fs_DataComplementOf3384); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataComplementOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_176, 132));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataComplementOf3398); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataComplementOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 133));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 133));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 133));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 133));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 133));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 133));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9254:2: (a2_0= parse_west_twouse_language_owl2fs_DataRange )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9255:3: a2_0= parse_west_twouse_language_owl2fs_DataRange
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataComplementOf3416);
            a2_0=parse_west_twouse_language_owl2fs_DataRange();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataComplementOf();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_COMPLEMENT_OF__DATA_RANGE), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_98, 134));
              	
            }
            a3=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataComplementOf3434); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataComplementOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_98, 135));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_99, 135));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_100, 135));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_101, 135));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_102, 135));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_103, 135));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_104, 135));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_177, 135));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 135));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 135));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 28, parse_west_twouse_language_owl2fs_DataComplementOf_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataComplementOf"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataOneOf"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9299:1: parse_west_twouse_language_owl2fs_DataOneOf returns [west.twouse.language.owl2fs.DataOneOf element = null] : a0= 'DataOneOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Literal ) )+ a3= ')' ;
    public final west.twouse.language.owl2fs.DataOneOf parse_west_twouse_language_owl2fs_DataOneOf() throws RecognitionException {
        west.twouse.language.owl2fs.DataOneOf element =  null;
        int parse_west_twouse_language_owl2fs_DataOneOf_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        west.twouse.language.owl2fs.Literal a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 29) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9302:1: (a0= 'DataOneOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Literal ) )+ a3= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9303:2: a0= 'DataOneOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Literal ) )+ a3= ')'
            {
            a0=(Token)match(input,36,FOLLOW_36_in_parse_west_twouse_language_owl2fs_DataOneOf3463); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataOneOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_178, 136));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataOneOf3477); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataOneOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 137));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9327:2: ( (a2_0= parse_west_twouse_language_owl2fs_Literal ) )+
            int cnt30=0;
            loop30:
            do {
                int alt30=2;
                int LA30_0 = input.LA(1);

                if ( (LA30_0==LITERAL) ) {
                    alt30=1;
                }


                switch (alt30) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9328:3: (a2_0= parse_west_twouse_language_owl2fs_Literal )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9328:3: (a2_0= parse_west_twouse_language_owl2fs_Literal )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9329:4: a2_0= parse_west_twouse_language_owl2fs_Literal
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_DataOneOf3500);
            	    a2_0=parse_west_twouse_language_owl2fs_Literal();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataOneOf();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DATA_ONE_OF__CONSTANTS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt30 >= 1 ) break loop30;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(30, input);
                        throw eee;
                }
                cnt30++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 138));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_90, 138));
              	
            }
            a3=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataOneOf3526); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataOneOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_98, 139));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_99, 139));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_100, 139));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_101, 139));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_102, 139));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_103, 139));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_104, 139));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_177, 139));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 139));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 139));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 29, parse_west_twouse_language_owl2fs_DataOneOf_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataOneOf"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DatatypeRestriction"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9375:1: parse_west_twouse_language_owl2fs_DatatypeRestriction returns [west.twouse.language.owl2fs.DatatypeRestriction element = null] : a0= 'DatatypeRestriction' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_Datatype ) ( (a3_0= parse_west_twouse_language_owl2fs_FacetConstraintPair ) )+ a4= ')' ;
    public final west.twouse.language.owl2fs.DatatypeRestriction parse_west_twouse_language_owl2fs_DatatypeRestriction() throws RecognitionException {
        west.twouse.language.owl2fs.DatatypeRestriction element =  null;
        int parse_west_twouse_language_owl2fs_DatatypeRestriction_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.Datatype a2_0 = null;

        west.twouse.language.owl2fs.FacetConstraintPair a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 30) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9378:1: (a0= 'DatatypeRestriction' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_Datatype ) ( (a3_0= parse_west_twouse_language_owl2fs_FacetConstraintPair ) )+ a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9379:2: a0= 'DatatypeRestriction' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_Datatype ) ( (a3_0= parse_west_twouse_language_owl2fs_FacetConstraintPair ) )+ a4= ')'
            {
            a0=(Token)match(input,37,FOLLOW_37_in_parse_west_twouse_language_owl2fs_DatatypeRestriction3555); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeRestriction();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_179, 140));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DatatypeRestriction3569); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeRestriction();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 141));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 141));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 141));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9405:2: (a2_0= parse_west_twouse_language_owl2fs_Datatype )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9406:3: a2_0= parse_west_twouse_language_owl2fs_Datatype
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Datatype_in_parse_west_twouse_language_owl2fs_DatatypeRestriction3587);
            a2_0=parse_west_twouse_language_owl2fs_Datatype();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeRestriction();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATATYPE_RESTRICTION__DATATYPE), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 142));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 142));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 142));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9429:2: ( (a3_0= parse_west_twouse_language_owl2fs_FacetConstraintPair ) )+
            int cnt31=0;
            loop31:
            do {
                int alt31=2;
                int LA31_0 = input.LA(1);

                if ( ((LA31_0>=FULLIRI && LA31_0<=ABBRIRI)||LA31_0==14) ) {
                    alt31=1;
                }


                switch (alt31) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9430:3: (a3_0= parse_west_twouse_language_owl2fs_FacetConstraintPair )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9430:3: (a3_0= parse_west_twouse_language_owl2fs_FacetConstraintPair )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9431:4: a3_0= parse_west_twouse_language_owl2fs_FacetConstraintPair
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_FacetConstraintPair_in_parse_west_twouse_language_owl2fs_DatatypeRestriction3614);
            	    a3_0=parse_west_twouse_language_owl2fs_FacetConstraintPair();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeRestriction();
            	      				}
            	      				if (a3_0 != null) {
            	      					if (a3_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DATATYPE_RESTRICTION__RESTRICTIONS, a3_0);
            	      						completedElement(a3_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a3_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt31 >= 1 ) break loop31;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(31, input);
                        throw eee;
                }
                cnt31++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 143));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 143));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 143));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_91, 143));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DatatypeRestriction3640); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeRestriction();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_98, 144));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_99, 144));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_100, 144));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_101, 144));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_102, 144));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_103, 144));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_104, 144));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_177, 144));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 144));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 144));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 30, parse_west_twouse_language_owl2fs_DatatypeRestriction_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DatatypeRestriction"


    // $ANTLR start "parse_west_twouse_language_owl2fs_FacetConstraintPair"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9479:1: parse_west_twouse_language_owl2fs_FacetConstraintPair returns [west.twouse.language.owl2fs.FacetConstraintPair element = null] : (a0_0= parse_west_twouse_language_owl2fs_IRI ) (a1_0= parse_west_twouse_language_owl2fs_Literal ) ;
    public final west.twouse.language.owl2fs.FacetConstraintPair parse_west_twouse_language_owl2fs_FacetConstraintPair() throws RecognitionException {
        west.twouse.language.owl2fs.FacetConstraintPair element =  null;
        int parse_west_twouse_language_owl2fs_FacetConstraintPair_StartIndex = input.index();
        west.twouse.language.owl2fs.IRI a0_0 = null;

        west.twouse.language.owl2fs.Literal a1_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 31) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9482:1: ( (a0_0= parse_west_twouse_language_owl2fs_IRI ) (a1_0= parse_west_twouse_language_owl2fs_Literal ) )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9483:2: (a0_0= parse_west_twouse_language_owl2fs_IRI ) (a1_0= parse_west_twouse_language_owl2fs_Literal )
            {
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9483:2: (a0_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9484:3: a0_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_FacetConstraintPair3673);
            a0_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFacetConstraintPair();
              			}
              			if (a0_0 != null) {
              				if (a0_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.FACET_CONSTRAINT_PAIR__FACET), a0_0);
              					completedElement(a0_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a0_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 145));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9505:2: (a1_0= parse_west_twouse_language_owl2fs_Literal )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9506:3: a1_0= parse_west_twouse_language_owl2fs_Literal
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_FacetConstraintPair3695);
            a1_0=parse_west_twouse_language_owl2fs_Literal();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFacetConstraintPair();
              			}
              			if (a1_0 != null) {
              				if (a1_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.FACET_CONSTRAINT_PAIR__CONSTANT), a1_0);
              					completedElement(a1_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a1_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 146));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 146));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 146));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_91, 146));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 31, parse_west_twouse_language_owl2fs_FacetConstraintPair_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_FacetConstraintPair"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectIntersectionOf"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9532:1: parse_west_twouse_language_owl2fs_ObjectIntersectionOf returns [west.twouse.language.owl2fs.ObjectIntersectionOf element = null] : a0= 'ObjectIntersectionOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a4= ')' ;
    public final west.twouse.language.owl2fs.ObjectIntersectionOf parse_west_twouse_language_owl2fs_ObjectIntersectionOf() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectIntersectionOf element =  null;
        int parse_west_twouse_language_owl2fs_ObjectIntersectionOf_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.ClassExpression a2_0 = null;

        west.twouse.language.owl2fs.ClassExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 32) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9535:1: (a0= 'ObjectIntersectionOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9536:2: a0= 'ObjectIntersectionOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a4= ')'
            {
            a0=(Token)match(input,38,FOLLOW_38_in_parse_west_twouse_language_owl2fs_ObjectIntersectionOf3728); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectIntersectionOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_180, 147));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectIntersectionOf3742); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectIntersectionOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 148));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 148));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9579:2: (a2_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9580:3: a2_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectIntersectionOf3760);
            a2_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectIntersectionOf();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_INTERSECTION_OF__CLASS_EXPRESSIONS, a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 149));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 149));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9620:2: ( (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+
            int cnt32=0;
            loop32:
            do {
                int alt32=2;
                int LA32_0 = input.LA(1);

                if ( ((LA32_0>=FULLIRI && LA32_0<=ABBRIRI)||LA32_0==14||(LA32_0>=38 && LA32_0<=54)) ) {
                    alt32=1;
                }


                switch (alt32) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9621:3: (a3_0= parse_west_twouse_language_owl2fs_ClassExpression )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9621:3: (a3_0= parse_west_twouse_language_owl2fs_ClassExpression )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9622:4: a3_0= parse_west_twouse_language_owl2fs_ClassExpression
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectIntersectionOf3787);
            	    a3_0=parse_west_twouse_language_owl2fs_ClassExpression();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectIntersectionOf();
            	      				}
            	      				if (a3_0 != null) {
            	      					if (a3_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_INTERSECTION_OF__CLASS_EXPRESSIONS, a3_0);
            	      						completedElement(a3_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a3_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt32 >= 1 ) break loop32;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(32, input);
                        throw eee;
                }
                cnt32++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 150));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_181, 150));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectIntersectionOf3813); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectIntersectionOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 151));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 151));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 32, parse_west_twouse_language_owl2fs_ObjectIntersectionOf_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectIntersectionOf"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectUnionOf"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9709:1: parse_west_twouse_language_owl2fs_ObjectUnionOf returns [west.twouse.language.owl2fs.ObjectUnionOf element = null] : a0= 'ObjectUnionOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a4= ')' ;
    public final west.twouse.language.owl2fs.ObjectUnionOf parse_west_twouse_language_owl2fs_ObjectUnionOf() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectUnionOf element =  null;
        int parse_west_twouse_language_owl2fs_ObjectUnionOf_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.ClassExpression a2_0 = null;

        west.twouse.language.owl2fs.ClassExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 33) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9712:1: (a0= 'ObjectUnionOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9713:2: a0= 'ObjectUnionOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a4= ')'
            {
            a0=(Token)match(input,39,FOLLOW_39_in_parse_west_twouse_language_owl2fs_ObjectUnionOf3842); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectUnionOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_182, 152));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectUnionOf3856); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectUnionOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 153));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 153));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9756:2: (a2_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9757:3: a2_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectUnionOf3874);
            a2_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectUnionOf();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_UNION_OF__CLASS_EXPRESSIONS, a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 154));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 154));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9797:2: ( (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+
            int cnt33=0;
            loop33:
            do {
                int alt33=2;
                int LA33_0 = input.LA(1);

                if ( ((LA33_0>=FULLIRI && LA33_0<=ABBRIRI)||LA33_0==14||(LA33_0>=38 && LA33_0<=54)) ) {
                    alt33=1;
                }


                switch (alt33) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9798:3: (a3_0= parse_west_twouse_language_owl2fs_ClassExpression )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9798:3: (a3_0= parse_west_twouse_language_owl2fs_ClassExpression )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9799:4: a3_0= parse_west_twouse_language_owl2fs_ClassExpression
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectUnionOf3901);
            	    a3_0=parse_west_twouse_language_owl2fs_ClassExpression();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectUnionOf();
            	      				}
            	      				if (a3_0 != null) {
            	      					if (a3_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_UNION_OF__CLASS_EXPRESSIONS, a3_0);
            	      						completedElement(a3_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a3_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt33 >= 1 ) break loop33;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(33, input);
                        throw eee;
                }
                cnt33++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 155));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_183, 155));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectUnionOf3927); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectUnionOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 156));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 156));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 33, parse_west_twouse_language_owl2fs_ObjectUnionOf_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectUnionOf"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectComplementOf"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9886:1: parse_west_twouse_language_owl2fs_ObjectComplementOf returns [west.twouse.language.owl2fs.ObjectComplementOf element = null] : a0= 'ObjectComplementOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) a3= ')' ;
    public final west.twouse.language.owl2fs.ObjectComplementOf parse_west_twouse_language_owl2fs_ObjectComplementOf() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectComplementOf element =  null;
        int parse_west_twouse_language_owl2fs_ObjectComplementOf_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        west.twouse.language.owl2fs.ClassExpression a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 34) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9889:1: (a0= 'ObjectComplementOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) a3= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9890:2: a0= 'ObjectComplementOf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) a3= ')'
            {
            a0=(Token)match(input,40,FOLLOW_40_in_parse_west_twouse_language_owl2fs_ObjectComplementOf3956); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectComplementOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_184, 157));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectComplementOf3970); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectComplementOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 158));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 158));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9933:2: (a2_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:9934:3: a2_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectComplementOf3988);
            a2_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectComplementOf();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_COMPLEMENT_OF__CLASS_EXPRESSION), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 159));
              	
            }
            a3=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectComplementOf4006); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectComplementOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 160));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 160));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 34, parse_west_twouse_language_owl2fs_ObjectComplementOf_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectComplementOf"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectOneOf"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10000:1: parse_west_twouse_language_owl2fs_ObjectOneOf returns [west.twouse.language.owl2fs.ObjectOneOf element = null] : a0= 'ObjectOneOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Individual ) )+ a3= ')' ;
    public final west.twouse.language.owl2fs.ObjectOneOf parse_west_twouse_language_owl2fs_ObjectOneOf() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectOneOf element =  null;
        int parse_west_twouse_language_owl2fs_ObjectOneOf_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        west.twouse.language.owl2fs.Individual a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 35) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10003:1: (a0= 'ObjectOneOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Individual ) )+ a3= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10004:2: a0= 'ObjectOneOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Individual ) )+ a3= ')'
            {
            a0=(Token)match(input,41,FOLLOW_41_in_parse_west_twouse_language_owl2fs_ObjectOneOf4035); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectOneOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_185, 161));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectOneOf4049); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectOneOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 162));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 162));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 162));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 162));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10031:2: ( (a2_0= parse_west_twouse_language_owl2fs_Individual ) )+
            int cnt34=0;
            loop34:
            do {
                int alt34=2;
                int LA34_0 = input.LA(1);

                if ( ((LA34_0>=FULLIRI && LA34_0<=ABBRIRI)||LA34_0==NODE||LA34_0==14) ) {
                    alt34=1;
                }


                switch (alt34) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10032:3: (a2_0= parse_west_twouse_language_owl2fs_Individual )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10032:3: (a2_0= parse_west_twouse_language_owl2fs_Individual )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10033:4: a2_0= parse_west_twouse_language_owl2fs_Individual
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_ObjectOneOf4072);
            	    a2_0=parse_west_twouse_language_owl2fs_Individual();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectOneOf();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_ONE_OF__INDIVIDUALS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt34 >= 1 ) break loop34;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(34, input);
                        throw eee;
                }
                cnt34++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 163));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 163));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 163));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 163));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_123, 163));
              	
            }
            a3=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectOneOf4098); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectOneOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 164));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 164));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 35, parse_west_twouse_language_owl2fs_ObjectOneOf_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectOneOf"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10104:1: parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom returns [west.twouse.language.owl2fs.ObjectSomeValuesFrom element = null] : a0= 'ObjectSomeValuesFrom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) a4= ')' ;
    public final west.twouse.language.owl2fs.ObjectSomeValuesFrom parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectSomeValuesFrom element =  null;
        int parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.ObjectPropertyExpression a2_0 = null;

        west.twouse.language.owl2fs.ClassExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 36) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10107:1: (a0= 'ObjectSomeValuesFrom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10108:2: a0= 'ObjectSomeValuesFrom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) a4= ')'
            {
            a0=(Token)match(input,42,FOLLOW_42_in_parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom4127); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectSomeValuesFrom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_186, 165));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom4141); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectSomeValuesFrom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 166));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 166));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 166));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 166));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10135:2: (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10136:3: a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom4159);
            a2_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectSomeValuesFrom();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_SOME_VALUES_FROM__OBJECT_PROPERTY_EXPRESSION), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 167));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 167));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10176:2: (a3_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10177:3: a3_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom4181);
            a3_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectSomeValuesFrom();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_SOME_VALUES_FROM__CLASS_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 168));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom4199); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectSomeValuesFrom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 169));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 169));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 36, parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectAllValuesFrom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10243:1: parse_west_twouse_language_owl2fs_ObjectAllValuesFrom returns [west.twouse.language.owl2fs.ObjectAllValuesFrom element = null] : a0= 'ObjectAllValuesFrom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) a4= ')' ;
    public final west.twouse.language.owl2fs.ObjectAllValuesFrom parse_west_twouse_language_owl2fs_ObjectAllValuesFrom() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectAllValuesFrom element =  null;
        int parse_west_twouse_language_owl2fs_ObjectAllValuesFrom_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.ObjectPropertyExpression a2_0 = null;

        west.twouse.language.owl2fs.ClassExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 37) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10246:1: (a0= 'ObjectAllValuesFrom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10247:2: a0= 'ObjectAllValuesFrom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) a4= ')'
            {
            a0=(Token)match(input,43,FOLLOW_43_in_parse_west_twouse_language_owl2fs_ObjectAllValuesFrom4228); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectAllValuesFrom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_187, 170));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectAllValuesFrom4242); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectAllValuesFrom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 171));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 171));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 171));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 171));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10274:2: (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10275:3: a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectAllValuesFrom4260);
            a2_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectAllValuesFrom();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_ALL_VALUES_FROM__OBJECT_PROPERTY_EXPRESSION), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 172));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 172));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10315:2: (a3_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10316:3: a3_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectAllValuesFrom4282);
            a3_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectAllValuesFrom();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_ALL_VALUES_FROM__CLASS_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 173));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectAllValuesFrom4300); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectAllValuesFrom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 174));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 174));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 37, parse_west_twouse_language_owl2fs_ObjectAllValuesFrom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectAllValuesFrom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectHasValue"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10382:1: parse_west_twouse_language_owl2fs_ObjectHasValue returns [west.twouse.language.owl2fs.ObjectHasValue element = null] : a0= 'ObjectHasValue' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_Individual ) a4= ')' ;
    public final west.twouse.language.owl2fs.ObjectHasValue parse_west_twouse_language_owl2fs_ObjectHasValue() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectHasValue element =  null;
        int parse_west_twouse_language_owl2fs_ObjectHasValue_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.ObjectPropertyExpression a2_0 = null;

        west.twouse.language.owl2fs.Individual a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 38) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10385:1: (a0= 'ObjectHasValue' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_Individual ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10386:2: a0= 'ObjectHasValue' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_Individual ) a4= ')'
            {
            a0=(Token)match(input,44,FOLLOW_44_in_parse_west_twouse_language_owl2fs_ObjectHasValue4329); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectHasValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_188, 175));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectHasValue4343); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectHasValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 176));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 176));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 176));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 176));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10413:2: (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10414:3: a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectHasValue4361);
            a2_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectHasValue();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_HAS_VALUE__OBJECT_PROPERTY_EXPRESSION), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 177));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 177));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 177));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 177));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10438:2: (a3_0= parse_west_twouse_language_owl2fs_Individual )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10439:3: a3_0= parse_west_twouse_language_owl2fs_Individual
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_ObjectHasValue4383);
            a3_0=parse_west_twouse_language_owl2fs_Individual();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectHasValue();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_HAS_VALUE__INDIVIDUAL), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_158, 178));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectHasValue4401); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectHasValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 179));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 179));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 38, parse_west_twouse_language_owl2fs_ObjectHasValue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectHasValue"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectHasSelf"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10505:1: parse_west_twouse_language_owl2fs_ObjectHasSelf returns [west.twouse.language.owl2fs.ObjectHasSelf element = null] : a0= 'ObjectHasSelf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a3= ')' ;
    public final west.twouse.language.owl2fs.ObjectHasSelf parse_west_twouse_language_owl2fs_ObjectHasSelf() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectHasSelf element =  null;
        int parse_west_twouse_language_owl2fs_ObjectHasSelf_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        west.twouse.language.owl2fs.ObjectPropertyExpression a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 39) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10508:1: (a0= 'ObjectHasSelf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a3= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10509:2: a0= 'ObjectHasSelf' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a3= ')'
            {
            a0=(Token)match(input,45,FOLLOW_45_in_parse_west_twouse_language_owl2fs_ObjectHasSelf4430); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectHasSelf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_189, 180));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectHasSelf4444); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectHasSelf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 181));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 181));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 181));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 181));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10536:2: (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10537:3: a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectHasSelf4462);
            a2_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectHasSelf();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_HAS_SELF__OBJECT_PROPERTY_EXPRESSION), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_110, 182));
              	
            }
            a3=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectHasSelf4480); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectHasSelf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 183));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 183));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 39, parse_west_twouse_language_owl2fs_ObjectHasSelf_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectHasSelf"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectMinCardinality"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10603:1: parse_west_twouse_language_owl2fs_ObjectMinCardinality returns [west.twouse.language.owl2fs.ObjectMinCardinality element = null] : a0= 'ObjectMinCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )? a5= ')' ;
    public final west.twouse.language.owl2fs.ObjectMinCardinality parse_west_twouse_language_owl2fs_ObjectMinCardinality() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectMinCardinality element =  null;
        int parse_west_twouse_language_owl2fs_ObjectMinCardinality_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a5=null;
        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.ClassExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 40) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10606:1: (a0= 'ObjectMinCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )? a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10607:2: a0= 'ObjectMinCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )? a5= ')'
            {
            a0=(Token)match(input,46,FOLLOW_46_in_parse_west_twouse_language_owl2fs_ObjectMinCardinality4509); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectMinCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_190, 184));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectMinCardinality4523); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectMinCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_191, 185));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10631:2: (a2= INTEGER )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10632:3: a2= INTEGER
            {
            a2=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_west_twouse_language_owl2fs_ObjectMinCardinality4541); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectMinCardinality();
              			}
              			if (a2 != null) {
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
              				tokenResolver.setOptions(getOptions());
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_MIN_CARDINALITY__CARDINALITY), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
              				}
              				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_MIN_CARDINALITY__CARDINALITY), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 186));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 186));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 186));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 186));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10667:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10668:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectMinCardinality4566);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectMinCardinality();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_MIN_CARDINALITY__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 187));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 187));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10709:2: ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )?
            int alt35=2;
            int LA35_0 = input.LA(1);

            if ( ((LA35_0>=FULLIRI && LA35_0<=ABBRIRI)||LA35_0==14||(LA35_0>=38 && LA35_0<=54)) ) {
                alt35=1;
            }
            switch (alt35) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10710:3: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
                    {
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10710:3: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10711:4: a4_0= parse_west_twouse_language_owl2fs_ClassExpression
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectMinCardinality4593);
                    a4_0=parse_west_twouse_language_owl2fs_ClassExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectMinCardinality();
                      				}
                      				if (a4_0 != null) {
                      					if (a4_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_MIN_CARDINALITY__CLASS_EXPRESSION), a4_0);
                      						completedElement(a4_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a4_0, element); 				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 188));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectMinCardinality4619); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectMinCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 189));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 189));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 40, parse_west_twouse_language_owl2fs_ObjectMinCardinality_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectMinCardinality"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectMaxCardinality"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10778:1: parse_west_twouse_language_owl2fs_ObjectMaxCardinality returns [west.twouse.language.owl2fs.ObjectMaxCardinality element = null] : a0= 'ObjectMaxCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )? a5= ')' ;
    public final west.twouse.language.owl2fs.ObjectMaxCardinality parse_west_twouse_language_owl2fs_ObjectMaxCardinality() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectMaxCardinality element =  null;
        int parse_west_twouse_language_owl2fs_ObjectMaxCardinality_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a5=null;
        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.ClassExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 41) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10781:1: (a0= 'ObjectMaxCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )? a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10782:2: a0= 'ObjectMaxCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )? a5= ')'
            {
            a0=(Token)match(input,47,FOLLOW_47_in_parse_west_twouse_language_owl2fs_ObjectMaxCardinality4648); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectMaxCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_192, 190));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectMaxCardinality4662); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectMaxCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_193, 191));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10806:2: (a2= INTEGER )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10807:3: a2= INTEGER
            {
            a2=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_west_twouse_language_owl2fs_ObjectMaxCardinality4680); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectMaxCardinality();
              			}
              			if (a2 != null) {
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
              				tokenResolver.setOptions(getOptions());
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_MAX_CARDINALITY__CARDINALITY), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
              				}
              				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_MAX_CARDINALITY__CARDINALITY), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 192));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 192));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 192));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 192));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10842:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10843:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectMaxCardinality4705);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectMaxCardinality();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_MAX_CARDINALITY__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 193));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 193));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10884:2: ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )?
            int alt36=2;
            int LA36_0 = input.LA(1);

            if ( ((LA36_0>=FULLIRI && LA36_0<=ABBRIRI)||LA36_0==14||(LA36_0>=38 && LA36_0<=54)) ) {
                alt36=1;
            }
            switch (alt36) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10885:3: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
                    {
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10885:3: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10886:4: a4_0= parse_west_twouse_language_owl2fs_ClassExpression
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectMaxCardinality4732);
                    a4_0=parse_west_twouse_language_owl2fs_ClassExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectMaxCardinality();
                      				}
                      				if (a4_0 != null) {
                      					if (a4_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_MAX_CARDINALITY__CLASS_EXPRESSION), a4_0);
                      						completedElement(a4_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a4_0, element); 				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 194));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectMaxCardinality4758); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectMaxCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 195));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 195));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 41, parse_west_twouse_language_owl2fs_ObjectMaxCardinality_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectMaxCardinality"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectExactCardinality"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10953:1: parse_west_twouse_language_owl2fs_ObjectExactCardinality returns [west.twouse.language.owl2fs.ObjectExactCardinality element = null] : a0= 'ObjectExactCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )? a5= ')' ;
    public final west.twouse.language.owl2fs.ObjectExactCardinality parse_west_twouse_language_owl2fs_ObjectExactCardinality() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectExactCardinality element =  null;
        int parse_west_twouse_language_owl2fs_ObjectExactCardinality_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a5=null;
        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.ClassExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 42) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10956:1: (a0= 'ObjectExactCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )? a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10957:2: a0= 'ObjectExactCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )? a5= ')'
            {
            a0=(Token)match(input,48,FOLLOW_48_in_parse_west_twouse_language_owl2fs_ObjectExactCardinality4787); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectExactCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_194, 196));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectExactCardinality4801); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectExactCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_195, 197));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10981:2: (a2= INTEGER )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:10982:3: a2= INTEGER
            {
            a2=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_west_twouse_language_owl2fs_ObjectExactCardinality4819); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectExactCardinality();
              			}
              			if (a2 != null) {
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
              				tokenResolver.setOptions(getOptions());
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_EXACT_CARDINALITY__CARDINALITY), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
              				}
              				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_EXACT_CARDINALITY__CARDINALITY), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 198));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 198));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 198));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 198));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11017:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11018:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectExactCardinality4844);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectExactCardinality();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_EXACT_CARDINALITY__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 199));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 199));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11059:2: ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )?
            int alt37=2;
            int LA37_0 = input.LA(1);

            if ( ((LA37_0>=FULLIRI && LA37_0<=ABBRIRI)||LA37_0==14||(LA37_0>=38 && LA37_0<=54)) ) {
                alt37=1;
            }
            switch (alt37) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11060:3: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
                    {
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11060:3: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11061:4: a4_0= parse_west_twouse_language_owl2fs_ClassExpression
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectExactCardinality4871);
                    a4_0=parse_west_twouse_language_owl2fs_ClassExpression();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectExactCardinality();
                      				}
                      				if (a4_0 != null) {
                      					if (a4_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_EXACT_CARDINALITY__CLASS_EXPRESSION), a4_0);
                      						completedElement(a4_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a4_0, element); 				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 200));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectExactCardinality4897); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectExactCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 201));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 201));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 42, parse_west_twouse_language_owl2fs_ObjectExactCardinality_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectExactCardinality"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataSomeValuesFrom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11128:1: parse_west_twouse_language_owl2fs_DataSomeValuesFrom returns [west.twouse.language.owl2fs.DataSomeValuesFrom element = null] : a0= 'DataSomeValuesFrom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_DataRange ) a4= ')' ;
    public final west.twouse.language.owl2fs.DataSomeValuesFrom parse_west_twouse_language_owl2fs_DataSomeValuesFrom() throws RecognitionException {
        west.twouse.language.owl2fs.DataSomeValuesFrom element =  null;
        int parse_west_twouse_language_owl2fs_DataSomeValuesFrom_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.DataPropertyExpression a2_0 = null;

        west.twouse.language.owl2fs.DataRange a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 43) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11131:1: (a0= 'DataSomeValuesFrom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_DataRange ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11132:2: a0= 'DataSomeValuesFrom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_DataRange ) a4= ')'
            {
            a0=(Token)match(input,49,FOLLOW_49_in_parse_west_twouse_language_owl2fs_DataSomeValuesFrom4926); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataSomeValuesFrom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_196, 202));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataSomeValuesFrom4940); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataSomeValuesFrom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 203));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 203));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 203));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11158:2: (a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11159:3: a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataSomeValuesFrom4958);
            a2_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataSomeValuesFrom();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DATA_SOME_VALUES_FROM__DATA_PROPERTY_EXPRESSIONS, a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 204));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 204));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 204));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 204));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 204));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 204));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11185:2: (a3_0= parse_west_twouse_language_owl2fs_DataRange )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11186:3: a3_0= parse_west_twouse_language_owl2fs_DataRange
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataSomeValuesFrom4980);
            a3_0=parse_west_twouse_language_owl2fs_DataRange();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataSomeValuesFrom();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_SOME_VALUES_FROM__DATA_RANGE), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_99, 205));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataSomeValuesFrom4998); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataSomeValuesFrom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 206));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 206));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 43, parse_west_twouse_language_owl2fs_DataSomeValuesFrom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataSomeValuesFrom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataAllValuesFrom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11252:1: parse_west_twouse_language_owl2fs_DataAllValuesFrom returns [west.twouse.language.owl2fs.DataAllValuesFrom element = null] : a0= 'DataAllValuesFrom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_DataRange ) a4= ')' ;
    public final west.twouse.language.owl2fs.DataAllValuesFrom parse_west_twouse_language_owl2fs_DataAllValuesFrom() throws RecognitionException {
        west.twouse.language.owl2fs.DataAllValuesFrom element =  null;
        int parse_west_twouse_language_owl2fs_DataAllValuesFrom_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.DataPropertyExpression a2_0 = null;

        west.twouse.language.owl2fs.DataRange a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 44) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11255:1: (a0= 'DataAllValuesFrom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_DataRange ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11256:2: a0= 'DataAllValuesFrom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_DataRange ) a4= ')'
            {
            a0=(Token)match(input,50,FOLLOW_50_in_parse_west_twouse_language_owl2fs_DataAllValuesFrom5027); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataAllValuesFrom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_197, 207));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataAllValuesFrom5041); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataAllValuesFrom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 208));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 208));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 208));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11282:2: (a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11283:3: a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataAllValuesFrom5059);
            a2_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataAllValuesFrom();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DATA_ALL_VALUES_FROM__DATA_PROPERTY_EXPRESSIONS, a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 209));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 209));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 209));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 209));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 209));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 209));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11309:2: (a3_0= parse_west_twouse_language_owl2fs_DataRange )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11310:3: a3_0= parse_west_twouse_language_owl2fs_DataRange
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataAllValuesFrom5081);
            a3_0=parse_west_twouse_language_owl2fs_DataRange();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataAllValuesFrom();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_ALL_VALUES_FROM__DATA_RANGE), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_100, 210));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataAllValuesFrom5099); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataAllValuesFrom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 211));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 211));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 44, parse_west_twouse_language_owl2fs_DataAllValuesFrom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataAllValuesFrom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataHasValue"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11376:1: parse_west_twouse_language_owl2fs_DataHasValue returns [west.twouse.language.owl2fs.DataHasValue element = null] : a0= 'DataHasValue' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_Literal ) a4= ')' ;
    public final west.twouse.language.owl2fs.DataHasValue parse_west_twouse_language_owl2fs_DataHasValue() throws RecognitionException {
        west.twouse.language.owl2fs.DataHasValue element =  null;
        int parse_west_twouse_language_owl2fs_DataHasValue_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.DataPropertyExpression a2_0 = null;

        west.twouse.language.owl2fs.Literal a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 45) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11379:1: (a0= 'DataHasValue' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_Literal ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11380:2: a0= 'DataHasValue' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_Literal ) a4= ')'
            {
            a0=(Token)match(input,51,FOLLOW_51_in_parse_west_twouse_language_owl2fs_DataHasValue5128); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataHasValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_198, 212));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataHasValue5142); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataHasValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 213));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 213));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 213));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11406:2: (a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11407:3: a2_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataHasValue5160);
            a2_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataHasValue();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_HAS_VALUE__DATA_PROPERTY_EXPRESSION), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 214));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11428:2: (a3_0= parse_west_twouse_language_owl2fs_Literal )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11429:3: a3_0= parse_west_twouse_language_owl2fs_Literal
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_DataHasValue5182);
            a3_0=parse_west_twouse_language_owl2fs_Literal();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataHasValue();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_HAS_VALUE__CONSTANT), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_92, 215));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataHasValue5200); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataHasValue();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 216));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 216));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 45, parse_west_twouse_language_owl2fs_DataHasValue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataHasValue"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataMinCardinality"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11495:1: parse_west_twouse_language_owl2fs_DataMinCardinality returns [west.twouse.language.owl2fs.DataMinCardinality element = null] : a0= 'DataMinCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataRange ) )? a5= ')' ;
    public final west.twouse.language.owl2fs.DataMinCardinality parse_west_twouse_language_owl2fs_DataMinCardinality() throws RecognitionException {
        west.twouse.language.owl2fs.DataMinCardinality element =  null;
        int parse_west_twouse_language_owl2fs_DataMinCardinality_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a5=null;
        west.twouse.language.owl2fs.DataPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.DataRange a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 46) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11498:1: (a0= 'DataMinCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataRange ) )? a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11499:2: a0= 'DataMinCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataRange ) )? a5= ')'
            {
            a0=(Token)match(input,52,FOLLOW_52_in_parse_west_twouse_language_owl2fs_DataMinCardinality5229); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataMinCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_199, 217));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataMinCardinality5243); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataMinCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_200, 218));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11523:2: (a2= INTEGER )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11524:3: a2= INTEGER
            {
            a2=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_west_twouse_language_owl2fs_DataMinCardinality5261); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataMinCardinality();
              			}
              			if (a2 != null) {
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
              				tokenResolver.setOptions(getOptions());
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_MIN_CARDINALITY__CARDINALITY), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
              				}
              				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_MIN_CARDINALITY__CARDINALITY), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 219));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 219));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 219));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11558:2: (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11559:3: a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataMinCardinality5286);
            a3_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataMinCardinality();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_MIN_CARDINALITY__DATA_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 220));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 220));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 220));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 220));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 220));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 220));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_101, 220));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11586:2: ( (a4_0= parse_west_twouse_language_owl2fs_DataRange ) )?
            int alt38=2;
            int LA38_0 = input.LA(1);

            if ( ((LA38_0>=FULLIRI && LA38_0<=ABBRIRI)||LA38_0==14||(LA38_0>=35 && LA38_0<=37)) ) {
                alt38=1;
            }
            switch (alt38) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11587:3: (a4_0= parse_west_twouse_language_owl2fs_DataRange )
                    {
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11587:3: (a4_0= parse_west_twouse_language_owl2fs_DataRange )
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11588:4: a4_0= parse_west_twouse_language_owl2fs_DataRange
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataMinCardinality5313);
                    a4_0=parse_west_twouse_language_owl2fs_DataRange();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataMinCardinality();
                      				}
                      				if (a4_0 != null) {
                      					if (a4_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_MIN_CARDINALITY__DATA_RANGE), a4_0);
                      						completedElement(a4_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a4_0, element); 				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_101, 221));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataMinCardinality5339); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataMinCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 222));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 222));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 46, parse_west_twouse_language_owl2fs_DataMinCardinality_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataMinCardinality"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataMaxCardinality"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11655:1: parse_west_twouse_language_owl2fs_DataMaxCardinality returns [west.twouse.language.owl2fs.DataMaxCardinality element = null] : a0= 'DataMaxCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataRange ) )? a5= ')' ;
    public final west.twouse.language.owl2fs.DataMaxCardinality parse_west_twouse_language_owl2fs_DataMaxCardinality() throws RecognitionException {
        west.twouse.language.owl2fs.DataMaxCardinality element =  null;
        int parse_west_twouse_language_owl2fs_DataMaxCardinality_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a5=null;
        west.twouse.language.owl2fs.DataPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.DataRange a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 47) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11658:1: (a0= 'DataMaxCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataRange ) )? a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11659:2: a0= 'DataMaxCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataRange ) )? a5= ')'
            {
            a0=(Token)match(input,53,FOLLOW_53_in_parse_west_twouse_language_owl2fs_DataMaxCardinality5368); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataMaxCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_201, 223));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataMaxCardinality5382); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataMaxCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_202, 224));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11683:2: (a2= INTEGER )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11684:3: a2= INTEGER
            {
            a2=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_west_twouse_language_owl2fs_DataMaxCardinality5400); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataMaxCardinality();
              			}
              			if (a2 != null) {
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
              				tokenResolver.setOptions(getOptions());
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_MAX_CARDINALITY__CARDINALITY), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
              				}
              				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_MAX_CARDINALITY__CARDINALITY), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 225));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 225));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 225));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11718:2: (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11719:3: a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataMaxCardinality5425);
            a3_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataMaxCardinality();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_MAX_CARDINALITY__DATA_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 226));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 226));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 226));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 226));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 226));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 226));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_102, 226));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11746:2: ( (a4_0= parse_west_twouse_language_owl2fs_DataRange ) )?
            int alt39=2;
            int LA39_0 = input.LA(1);

            if ( ((LA39_0>=FULLIRI && LA39_0<=ABBRIRI)||LA39_0==14||(LA39_0>=35 && LA39_0<=37)) ) {
                alt39=1;
            }
            switch (alt39) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11747:3: (a4_0= parse_west_twouse_language_owl2fs_DataRange )
                    {
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11747:3: (a4_0= parse_west_twouse_language_owl2fs_DataRange )
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11748:4: a4_0= parse_west_twouse_language_owl2fs_DataRange
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataMaxCardinality5452);
                    a4_0=parse_west_twouse_language_owl2fs_DataRange();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataMaxCardinality();
                      				}
                      				if (a4_0 != null) {
                      					if (a4_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_MAX_CARDINALITY__DATA_RANGE), a4_0);
                      						completedElement(a4_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a4_0, element); 				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_102, 227));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataMaxCardinality5478); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataMaxCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 228));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 228));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 47, parse_west_twouse_language_owl2fs_DataMaxCardinality_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataMaxCardinality"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataExactCardinality"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11815:1: parse_west_twouse_language_owl2fs_DataExactCardinality returns [west.twouse.language.owl2fs.DataExactCardinality element = null] : a0= 'DataExactCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataRange ) )? a5= ')' ;
    public final west.twouse.language.owl2fs.DataExactCardinality parse_west_twouse_language_owl2fs_DataExactCardinality() throws RecognitionException {
        west.twouse.language.owl2fs.DataExactCardinality element =  null;
        int parse_west_twouse_language_owl2fs_DataExactCardinality_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a2=null;
        Token a5=null;
        west.twouse.language.owl2fs.DataPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.DataRange a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 48) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11818:1: (a0= 'DataExactCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataRange ) )? a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11819:2: a0= 'DataExactCardinality' a1= '(' (a2= INTEGER ) (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataRange ) )? a5= ')'
            {
            a0=(Token)match(input,54,FOLLOW_54_in_parse_west_twouse_language_owl2fs_DataExactCardinality5507); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataExactCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_203, 229));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataExactCardinality5521); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataExactCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_204, 230));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11843:2: (a2= INTEGER )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11844:3: a2= INTEGER
            {
            a2=(Token)match(input,INTEGER,FOLLOW_INTEGER_in_parse_west_twouse_language_owl2fs_DataExactCardinality5539); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataExactCardinality();
              			}
              			if (a2 != null) {
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolver tokenResolver = tokenResolverFactory.createTokenResolver("INTEGER");
              				tokenResolver.setOptions(getOptions());
              				west.twouse.language.owl2fs.resource.owl2fs.IOwl2fsTokenResolveResult result = getFreshTokenResolveResult();
              				tokenResolver.resolve(a2.getText(), element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_EXACT_CARDINALITY__CARDINALITY), result);
              				java.lang.Object resolvedObject = result.getResolvedToken();
              				if (resolvedObject == null) {
              					addErrorToResource(result.getErrorMessage(), ((org.antlr.runtime.CommonToken) a2).getLine(), ((org.antlr.runtime.CommonToken) a2).getCharPositionInLine(), ((org.antlr.runtime.CommonToken) a2).getStartIndex(), ((org.antlr.runtime.CommonToken) a2).getStopIndex());
              				}
              				java.lang.Integer resolved = (java.lang.Integer)resolvedObject;
              				if (resolved != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_EXACT_CARDINALITY__CARDINALITY), resolved);
              					completedElement(resolved);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos((org.antlr.runtime.CommonToken) a2, element);
              			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 231));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 231));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 231));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11878:2: (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11879:3: a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataExactCardinality5564);
            a3_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataExactCardinality();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_EXACT_CARDINALITY__DATA_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 232));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 232));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 232));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 232));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 232));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 232));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_103, 232));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11906:2: ( (a4_0= parse_west_twouse_language_owl2fs_DataRange ) )?
            int alt40=2;
            int LA40_0 = input.LA(1);

            if ( ((LA40_0>=FULLIRI && LA40_0<=ABBRIRI)||LA40_0==14||(LA40_0>=35 && LA40_0<=37)) ) {
                alt40=1;
            }
            switch (alt40) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11907:3: (a4_0= parse_west_twouse_language_owl2fs_DataRange )
                    {
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11907:3: (a4_0= parse_west_twouse_language_owl2fs_DataRange )
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11908:4: a4_0= parse_west_twouse_language_owl2fs_DataRange
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataExactCardinality5591);
                    a4_0=parse_west_twouse_language_owl2fs_DataRange();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {

                      				if (terminateParsing) {
                      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
                      				}
                      				if (element == null) {
                      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataExactCardinality();
                      				}
                      				if (a4_0 != null) {
                      					if (a4_0 != null) {
                      						element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_EXACT_CARDINALITY__DATA_RANGE), a4_0);
                      						completedElement(a4_0);
                      					}
                      					collectHiddenTokens(element);
                      					copyLocalizationInfos(a4_0, element); 				}
                      			
                    }

                    }


                    }
                    break;

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_103, 233));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataExactCardinality5617); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataExactCardinality();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_73, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_74, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_75, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_76, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_77, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_78, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 234));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 234));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 48, parse_west_twouse_language_owl2fs_DataExactCardinality_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataExactCardinality"


    // $ANTLR start "parse_west_twouse_language_owl2fs_SubClassOf"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11975:1: parse_west_twouse_language_owl2fs_SubClassOf returns [west.twouse.language.owl2fs.SubClassOf element = null] : a0= 'SubClassOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) a5= ')' ;
    public final west.twouse.language.owl2fs.SubClassOf parse_west_twouse_language_owl2fs_SubClassOf() throws RecognitionException {
        west.twouse.language.owl2fs.SubClassOf element =  null;
        int parse_west_twouse_language_owl2fs_SubClassOf_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ClassExpression a3_0 = null;

        west.twouse.language.owl2fs.ClassExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 49) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11978:1: (a0= 'SubClassOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:11979:2: a0= 'SubClassOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) a5= ')'
            {
            a0=(Token)match(input,55,FOLLOW_55_in_parse_west_twouse_language_owl2fs_SubClassOf5646); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubClassOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_205, 235));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_SubClassOf5660); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubClassOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 236));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 236));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12023:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop41:
            do {
                int alt41=2;
                int LA41_0 = input.LA(1);

                if ( (LA41_0==32) ) {
                    alt41=1;
                }


                switch (alt41) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12024:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12024:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12025:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_SubClassOf5683);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubClassOf();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.SUB_CLASS_OF__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop41;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 237));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 237));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12067:2: (a3_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12068:3: a3_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_SubClassOf5713);
            a3_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubClassOf();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.SUB_CLASS_OF__SUB_CLASS_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 238));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 238));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12108:2: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12109:3: a4_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_SubClassOf5735);
            a4_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubClassOf();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.SUB_CLASS_OF__SUPER_CLASS_EXPRESSION), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_206, 239));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_SubClassOf5753); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubClassOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 240));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 240));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 49, parse_west_twouse_language_owl2fs_SubClassOf_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_SubClassOf"


    // $ANTLR start "parse_west_twouse_language_owl2fs_EquivalentClasses"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12190:1: parse_west_twouse_language_owl2fs_EquivalentClasses returns [west.twouse.language.owl2fs.EquivalentClasses element = null] : a0= 'EquivalentClasses' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a5= ')' ;
    public final west.twouse.language.owl2fs.EquivalentClasses parse_west_twouse_language_owl2fs_EquivalentClasses() throws RecognitionException {
        west.twouse.language.owl2fs.EquivalentClasses element =  null;
        int parse_west_twouse_language_owl2fs_EquivalentClasses_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ClassExpression a3_0 = null;

        west.twouse.language.owl2fs.ClassExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 50) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12193:1: (a0= 'EquivalentClasses' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12194:2: a0= 'EquivalentClasses' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a5= ')'
            {
            a0=(Token)match(input,56,FOLLOW_56_in_parse_west_twouse_language_owl2fs_EquivalentClasses5782); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentClasses();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_207, 241));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_EquivalentClasses5796); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentClasses();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 242));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 242));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12238:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop42:
            do {
                int alt42=2;
                int LA42_0 = input.LA(1);

                if ( (LA42_0==32) ) {
                    alt42=1;
                }


                switch (alt42) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12239:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12239:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12240:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_EquivalentClasses5819);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentClasses();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.EQUIVALENT_CLASSES__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop42;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 243));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 243));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12282:2: (a3_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12283:3: a3_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_EquivalentClasses5849);
            a3_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentClasses();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.EQUIVALENT_CLASSES__EQUIVALENT_CLASS_EXPRESSIONS, a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 244));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 244));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12323:2: ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+
            int cnt43=0;
            loop43:
            do {
                int alt43=2;
                int LA43_0 = input.LA(1);

                if ( ((LA43_0>=FULLIRI && LA43_0<=ABBRIRI)||LA43_0==14||(LA43_0>=38 && LA43_0<=54)) ) {
                    alt43=1;
                }


                switch (alt43) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12324:3: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12324:3: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12325:4: a4_0= parse_west_twouse_language_owl2fs_ClassExpression
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_EquivalentClasses5876);
            	    a4_0=parse_west_twouse_language_owl2fs_ClassExpression();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentClasses();
            	      				}
            	      				if (a4_0 != null) {
            	      					if (a4_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.EQUIVALENT_CLASSES__EQUIVALENT_CLASS_EXPRESSIONS, a4_0);
            	      						completedElement(a4_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a4_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt43 >= 1 ) break loop43;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(43, input);
                        throw eee;
                }
                cnt43++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 245));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_208, 245));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_EquivalentClasses5902); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentClasses();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 246));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 246));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 50, parse_west_twouse_language_owl2fs_EquivalentClasses_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_EquivalentClasses"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DisjointClasses"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12427:1: parse_west_twouse_language_owl2fs_DisjointClasses returns [west.twouse.language.owl2fs.DisjointClasses element = null] : a0= 'DisjointClasses' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a5= ')' ;
    public final west.twouse.language.owl2fs.DisjointClasses parse_west_twouse_language_owl2fs_DisjointClasses() throws RecognitionException {
        west.twouse.language.owl2fs.DisjointClasses element =  null;
        int parse_west_twouse_language_owl2fs_DisjointClasses_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ClassExpression a3_0 = null;

        west.twouse.language.owl2fs.ClassExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 51) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12430:1: (a0= 'DisjointClasses' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12431:2: a0= 'DisjointClasses' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a5= ')'
            {
            a0=(Token)match(input,57,FOLLOW_57_in_parse_west_twouse_language_owl2fs_DisjointClasses5931); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointClasses();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_209, 247));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DisjointClasses5945); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointClasses();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 248));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 248));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12475:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop44:
            do {
                int alt44=2;
                int LA44_0 = input.LA(1);

                if ( (LA44_0==32) ) {
                    alt44=1;
                }


                switch (alt44) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12476:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12476:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12477:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DisjointClasses5968);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointClasses();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_CLASSES__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop44;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 249));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 249));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12519:2: (a3_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12520:3: a3_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_DisjointClasses5998);
            a3_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointClasses();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_CLASSES__DISJOINT_CLASS_EXPRESSIONS, a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 250));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 250));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12560:2: ( (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+
            int cnt45=0;
            loop45:
            do {
                int alt45=2;
                int LA45_0 = input.LA(1);

                if ( ((LA45_0>=FULLIRI && LA45_0<=ABBRIRI)||LA45_0==14||(LA45_0>=38 && LA45_0<=54)) ) {
                    alt45=1;
                }


                switch (alt45) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12561:3: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12561:3: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12562:4: a4_0= parse_west_twouse_language_owl2fs_ClassExpression
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_DisjointClasses6025);
            	    a4_0=parse_west_twouse_language_owl2fs_ClassExpression();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointClasses();
            	      				}
            	      				if (a4_0 != null) {
            	      					if (a4_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_CLASSES__DISJOINT_CLASS_EXPRESSIONS, a4_0);
            	      						completedElement(a4_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a4_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt45 >= 1 ) break loop45;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(45, input);
                        throw eee;
                }
                cnt45++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 251));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_210, 251));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DisjointClasses6051); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointClasses();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 252));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 252));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 51, parse_west_twouse_language_owl2fs_DisjointClasses_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DisjointClasses"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DisjointUnion"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12664:1: parse_west_twouse_language_owl2fs_DisjointUnion returns [west.twouse.language.owl2fs.DisjointUnion element = null] : a0= 'DisjointUnion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_Class ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a5_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a6= ')' ;
    public final west.twouse.language.owl2fs.DisjointUnion parse_west_twouse_language_owl2fs_DisjointUnion() throws RecognitionException {
        west.twouse.language.owl2fs.DisjointUnion element =  null;
        int parse_west_twouse_language_owl2fs_DisjointUnion_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a6=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.Class a3_0 = null;

        west.twouse.language.owl2fs.ClassExpression a4_0 = null;

        west.twouse.language.owl2fs.ClassExpression a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 52) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12667:1: (a0= 'DisjointUnion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_Class ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a5_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a6= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12668:2: a0= 'DisjointUnion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_Class ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) ( (a5_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+ a6= ')'
            {
            a0=(Token)match(input,58,FOLLOW_58_in_parse_west_twouse_language_owl2fs_DisjointUnion6080); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointUnion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_211, 253));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DisjointUnion6094); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointUnion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 254));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 254));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 254));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 254));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12695:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop46:
            do {
                int alt46=2;
                int LA46_0 = input.LA(1);

                if ( (LA46_0==32) ) {
                    alt46=1;
                }


                switch (alt46) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12696:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12696:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12697:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DisjointUnion6117);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointUnion();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_UNION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop46;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 255));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 255));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 255));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 255));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12722:2: (a3_0= parse_west_twouse_language_owl2fs_Class )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12723:3: a3_0= parse_west_twouse_language_owl2fs_Class
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Class_in_parse_west_twouse_language_owl2fs_DisjointUnion6147);
            a3_0=parse_west_twouse_language_owl2fs_Class();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointUnion();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_UNION__UNION_CLASS), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 256));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 256));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12763:2: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12764:3: a4_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_DisjointUnion6169);
            a4_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointUnion();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_UNION__DISJOINT_CLASS_EXPRESSIONS, a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 257));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 257));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12804:2: ( (a5_0= parse_west_twouse_language_owl2fs_ClassExpression ) )+
            int cnt47=0;
            loop47:
            do {
                int alt47=2;
                int LA47_0 = input.LA(1);

                if ( ((LA47_0>=FULLIRI && LA47_0<=ABBRIRI)||LA47_0==14||(LA47_0>=38 && LA47_0<=54)) ) {
                    alt47=1;
                }


                switch (alt47) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12805:3: (a5_0= parse_west_twouse_language_owl2fs_ClassExpression )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12805:3: (a5_0= parse_west_twouse_language_owl2fs_ClassExpression )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12806:4: a5_0= parse_west_twouse_language_owl2fs_ClassExpression
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_DisjointUnion6196);
            	    a5_0=parse_west_twouse_language_owl2fs_ClassExpression();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointUnion();
            	      				}
            	      				if (a5_0 != null) {
            	      					if (a5_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_UNION__DISJOINT_CLASS_EXPRESSIONS, a5_0);
            	      						completedElement(a5_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a5_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt47 >= 1 ) break loop47;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(47, input);
                        throw eee;
                }
                cnt47++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 258));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_212, 258));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DisjointUnion6222); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointUnion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 259));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 259));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 52, parse_west_twouse_language_owl2fs_DisjointUnion_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DisjointUnion"


    // $ANTLR start "parse_west_twouse_language_owl2fs_SubObjectPropertyOf"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12908:1: parse_west_twouse_language_owl2fs_SubObjectPropertyOf returns [west.twouse.language.owl2fs.SubObjectPropertyOf element = null] : a0= 'SubObjectPropertyOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_SubObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a5= ')' ;
    public final west.twouse.language.owl2fs.SubObjectPropertyOf parse_west_twouse_language_owl2fs_SubObjectPropertyOf() throws RecognitionException {
        west.twouse.language.owl2fs.SubObjectPropertyOf element =  null;
        int parse_west_twouse_language_owl2fs_SubObjectPropertyOf_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.SubObjectPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 53) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12911:1: (a0= 'SubObjectPropertyOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_SubObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12912:2: a0= 'SubObjectPropertyOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_SubObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a5= ')'
            {
            a0=(Token)match(input,59,FOLLOW_59_in_parse_west_twouse_language_owl2fs_SubObjectPropertyOf6251); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubObjectPropertyOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_213, 260));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_SubObjectPropertyOf6265); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubObjectPropertyOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 261));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 261));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 261));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 261));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 261));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_169, 261));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12941:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop48:
            do {
                int alt48=2;
                int LA48_0 = input.LA(1);

                if ( (LA48_0==32) ) {
                    alt48=1;
                }


                switch (alt48) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12942:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12942:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12943:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_SubObjectPropertyOf6288);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubObjectPropertyOf();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.SUB_OBJECT_PROPERTY_OF__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop48;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 262));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 262));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 262));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 262));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 262));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_169, 262));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12970:2: (a3_0= parse_west_twouse_language_owl2fs_SubObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12971:3: a3_0= parse_west_twouse_language_owl2fs_SubObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_SubObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_SubObjectPropertyOf6318);
            a3_0=parse_west_twouse_language_owl2fs_SubObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubObjectPropertyOf();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.SUB_OBJECT_PROPERTY_OF__SUB_OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 263));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 263));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 263));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 263));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12995:2: (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:12996:3: a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_SubObjectPropertyOf6340);
            a4_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubObjectPropertyOf();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.SUB_OBJECT_PROPERTY_OF__SUPER_OBJECT_PROPERTY_EXPRESSION), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_214, 264));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_SubObjectPropertyOf6358); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubObjectPropertyOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 265));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 265));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 53, parse_west_twouse_language_owl2fs_SubObjectPropertyOf_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_SubObjectPropertyOf"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectPropertyChain"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13077:1: parse_west_twouse_language_owl2fs_ObjectPropertyChain returns [west.twouse.language.owl2fs.ObjectPropertyChain element = null] : a0= 'ObjectPropertyChain' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )+ a4= ')' ;
    public final west.twouse.language.owl2fs.ObjectPropertyChain parse_west_twouse_language_owl2fs_ObjectPropertyChain() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectPropertyChain element =  null;
        int parse_west_twouse_language_owl2fs_ObjectPropertyChain_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.ObjectPropertyExpression a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 54) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13080:1: (a0= 'ObjectPropertyChain' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )+ a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13081:2: a0= 'ObjectPropertyChain' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )+ a4= ')'
            {
            a0=(Token)match(input,60,FOLLOW_60_in_parse_west_twouse_language_owl2fs_ObjectPropertyChain6387); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyChain();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_215, 266));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyChain6401); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyChain();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 267));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 267));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 267));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 267));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13108:2: (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13109:3: a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyChain6419);
            a2_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyChain();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_CHAIN__OBJECT_PROPERTY_EXPRESSIONS, a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 268));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 268));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 268));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 268));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13133:2: ( (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )+
            int cnt49=0;
            loop49:
            do {
                int alt49=2;
                int LA49_0 = input.LA(1);

                if ( ((LA49_0>=FULLIRI && LA49_0<=ABBRIRI)||LA49_0==14||LA49_0==34) ) {
                    alt49=1;
                }


                switch (alt49) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13134:3: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13134:3: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13135:4: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyChain6446);
            	    a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyChain();
            	      				}
            	      				if (a3_0 != null) {
            	      					if (a3_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_CHAIN__OBJECT_PROPERTY_EXPRESSIONS, a3_0);
            	      						completedElement(a3_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a3_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt49 >= 1 ) break loop49;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(49, input);
                        throw eee;
                }
                cnt49++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 269));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 269));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 269));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 269));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_216, 269));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyChain6472); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyChain();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 270));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 270));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 270));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 270));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 54, parse_west_twouse_language_owl2fs_ObjectPropertyChain_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectPropertyChain"


    // $ANTLR start "parse_west_twouse_language_owl2fs_EquivalentObjectProperties"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13178:1: parse_west_twouse_language_owl2fs_EquivalentObjectProperties returns [west.twouse.language.owl2fs.EquivalentObjectProperties element = null] : a0= 'EquivalentObjectProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )+ a5= ')' ;
    public final west.twouse.language.owl2fs.EquivalentObjectProperties parse_west_twouse_language_owl2fs_EquivalentObjectProperties() throws RecognitionException {
        west.twouse.language.owl2fs.EquivalentObjectProperties element =  null;
        int parse_west_twouse_language_owl2fs_EquivalentObjectProperties_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 55) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13181:1: (a0= 'EquivalentObjectProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )+ a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13182:2: a0= 'EquivalentObjectProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )+ a5= ')'
            {
            a0=(Token)match(input,61,FOLLOW_61_in_parse_west_twouse_language_owl2fs_EquivalentObjectProperties6501); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentObjectProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_217, 271));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_EquivalentObjectProperties6515); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentObjectProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 272));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 272));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 272));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 272));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 272));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13210:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop50:
            do {
                int alt50=2;
                int LA50_0 = input.LA(1);

                if ( (LA50_0==32) ) {
                    alt50=1;
                }


                switch (alt50) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13211:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13211:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13212:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_EquivalentObjectProperties6538);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentObjectProperties();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.EQUIVALENT_OBJECT_PROPERTIES__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop50;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 273));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 273));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 273));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 273));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 273));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13238:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13239:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_EquivalentObjectProperties6568);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentObjectProperties();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.EQUIVALENT_OBJECT_PROPERTIES__OBJECT_PROPERTY_EXPRESSIONS, a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 274));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 274));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 274));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 274));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13263:2: ( (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )+
            int cnt51=0;
            loop51:
            do {
                int alt51=2;
                int LA51_0 = input.LA(1);

                if ( ((LA51_0>=FULLIRI && LA51_0<=ABBRIRI)||LA51_0==14||LA51_0==34) ) {
                    alt51=1;
                }


                switch (alt51) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13264:3: (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13264:3: (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13265:4: a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_EquivalentObjectProperties6595);
            	    a4_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentObjectProperties();
            	      				}
            	      				if (a4_0 != null) {
            	      					if (a4_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.EQUIVALENT_OBJECT_PROPERTIES__OBJECT_PROPERTY_EXPRESSIONS, a4_0);
            	      						completedElement(a4_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a4_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt51 >= 1 ) break loop51;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(51, input);
                        throw eee;
                }
                cnt51++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 275));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 275));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 275));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 275));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_218, 275));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_EquivalentObjectProperties6621); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentObjectProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 276));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 276));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 55, parse_west_twouse_language_owl2fs_EquivalentObjectProperties_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_EquivalentObjectProperties"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DisjointObjectProperties"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13351:1: parse_west_twouse_language_owl2fs_DisjointObjectProperties returns [west.twouse.language.owl2fs.DisjointObjectProperties element = null] : a0= 'DisjointObjectProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )+ a5= ')' ;
    public final west.twouse.language.owl2fs.DisjointObjectProperties parse_west_twouse_language_owl2fs_DisjointObjectProperties() throws RecognitionException {
        west.twouse.language.owl2fs.DisjointObjectProperties element =  null;
        int parse_west_twouse_language_owl2fs_DisjointObjectProperties_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 56) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13354:1: (a0= 'DisjointObjectProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )+ a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13355:2: a0= 'DisjointObjectProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )+ a5= ')'
            {
            a0=(Token)match(input,62,FOLLOW_62_in_parse_west_twouse_language_owl2fs_DisjointObjectProperties6650); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointObjectProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_219, 277));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DisjointObjectProperties6664); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointObjectProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 278));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 278));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 278));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 278));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 278));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13383:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop52:
            do {
                int alt52=2;
                int LA52_0 = input.LA(1);

                if ( (LA52_0==32) ) {
                    alt52=1;
                }


                switch (alt52) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13384:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13384:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13385:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DisjointObjectProperties6687);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointObjectProperties();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_OBJECT_PROPERTIES__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop52;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 279));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 279));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 279));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 279));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 279));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13411:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13412:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_DisjointObjectProperties6717);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointObjectProperties();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_OBJECT_PROPERTIES__OBJECT_PROPERTY_EXPRESSIONS, a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 280));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 280));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 280));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 280));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13436:2: ( (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )+
            int cnt53=0;
            loop53:
            do {
                int alt53=2;
                int LA53_0 = input.LA(1);

                if ( ((LA53_0>=FULLIRI && LA53_0<=ABBRIRI)||LA53_0==14||LA53_0==34) ) {
                    alt53=1;
                }


                switch (alt53) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13437:3: (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13437:3: (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13438:4: a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_DisjointObjectProperties6744);
            	    a4_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointObjectProperties();
            	      				}
            	      				if (a4_0 != null) {
            	      					if (a4_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_OBJECT_PROPERTIES__OBJECT_PROPERTY_EXPRESSIONS, a4_0);
            	      						completedElement(a4_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a4_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt53 >= 1 ) break loop53;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(53, input);
                        throw eee;
                }
                cnt53++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 281));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 281));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 281));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 281));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_220, 281));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DisjointObjectProperties6770); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointObjectProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 282));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 282));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 56, parse_west_twouse_language_owl2fs_DisjointObjectProperties_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DisjointObjectProperties"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectPropertyDomain"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13524:1: parse_west_twouse_language_owl2fs_ObjectPropertyDomain returns [west.twouse.language.owl2fs.ObjectPropertyDomain element = null] : a0= 'ObjectPropertyDomain' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) a5= ')' ;
    public final west.twouse.language.owl2fs.ObjectPropertyDomain parse_west_twouse_language_owl2fs_ObjectPropertyDomain() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectPropertyDomain element =  null;
        int parse_west_twouse_language_owl2fs_ObjectPropertyDomain_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.ClassExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 57) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13527:1: (a0= 'ObjectPropertyDomain' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13528:2: a0= 'ObjectPropertyDomain' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) a5= ')'
            {
            a0=(Token)match(input,63,FOLLOW_63_in_parse_west_twouse_language_owl2fs_ObjectPropertyDomain6799); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDomain();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_221, 283));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyDomain6813); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDomain();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 284));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 284));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 284));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 284));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 284));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13556:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop54:
            do {
                int alt54=2;
                int LA54_0 = input.LA(1);

                if ( (LA54_0==32) ) {
                    alt54=1;
                }


                switch (alt54) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13557:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13557:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13558:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ObjectPropertyDomain6836);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDomain();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_DOMAIN__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop54;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 285));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 285));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 285));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 285));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 285));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13584:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13585:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyDomain6866);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDomain();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_DOMAIN__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 286));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 286));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13625:2: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13626:3: a4_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyDomain6888);
            a4_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDomain();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_DOMAIN__DOMAIN), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_79, 287));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyDomain6906); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyDomain();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 288));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 288));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 57, parse_west_twouse_language_owl2fs_ObjectPropertyDomain_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectPropertyDomain"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectPropertyRange"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13707:1: parse_west_twouse_language_owl2fs_ObjectPropertyRange returns [west.twouse.language.owl2fs.ObjectPropertyRange element = null] : a0= 'ObjectPropertyRange' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) a5= ')' ;
    public final west.twouse.language.owl2fs.ObjectPropertyRange parse_west_twouse_language_owl2fs_ObjectPropertyRange() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectPropertyRange element =  null;
        int parse_west_twouse_language_owl2fs_ObjectPropertyRange_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.ClassExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 58) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13710:1: (a0= 'ObjectPropertyRange' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13711:2: a0= 'ObjectPropertyRange' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) a5= ')'
            {
            a0=(Token)match(input,64,FOLLOW_64_in_parse_west_twouse_language_owl2fs_ObjectPropertyRange6935); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyRange();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_222, 289));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyRange6949); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyRange();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 290));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 290));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 290));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 290));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 290));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13739:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop55:
            do {
                int alt55=2;
                int LA55_0 = input.LA(1);

                if ( (LA55_0==32) ) {
                    alt55=1;
                }


                switch (alt55) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13740:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13740:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13741:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ObjectPropertyRange6972);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyRange();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_RANGE__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop55;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 291));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 291));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 291));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 291));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 291));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13767:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13768:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyRange7002);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyRange();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_RANGE__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 292));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 292));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13808:2: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13809:3: a4_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyRange7024);
            a4_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyRange();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_RANGE__RANGE), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_80, 293));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyRange7042); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyRange();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 294));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 294));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 58, parse_west_twouse_language_owl2fs_ObjectPropertyRange_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectPropertyRange"


    // $ANTLR start "parse_west_twouse_language_owl2fs_InverseObjectProperties"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13890:1: parse_west_twouse_language_owl2fs_InverseObjectProperties returns [west.twouse.language.owl2fs.InverseObjectProperties element = null] : a0= 'InverseObjectProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a5= ')' ;
    public final west.twouse.language.owl2fs.InverseObjectProperties parse_west_twouse_language_owl2fs_InverseObjectProperties() throws RecognitionException {
        west.twouse.language.owl2fs.InverseObjectProperties element =  null;
        int parse_west_twouse_language_owl2fs_InverseObjectProperties_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 59) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13893:1: (a0= 'InverseObjectProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13894:2: a0= 'InverseObjectProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a5= ')'
            {
            a0=(Token)match(input,65,FOLLOW_65_in_parse_west_twouse_language_owl2fs_InverseObjectProperties7071); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseObjectProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_223, 295));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_InverseObjectProperties7085); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseObjectProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 296));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 296));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 296));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 296));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 296));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13922:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop56:
            do {
                int alt56=2;
                int LA56_0 = input.LA(1);

                if ( (LA56_0==32) ) {
                    alt56=1;
                }


                switch (alt56) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13923:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13923:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13924:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_InverseObjectProperties7108);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseObjectProperties();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.INVERSE_OBJECT_PROPERTIES__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop56;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 297));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 297));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 297));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 297));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 297));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13950:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13951:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_InverseObjectProperties7138);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseObjectProperties();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.INVERSE_OBJECT_PROPERTIES__OBJECT_PROPERTY_EXPRESSION1), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 298));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 298));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 298));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 298));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13975:2: (a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:13976:3: a4_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_InverseObjectProperties7160);
            a4_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseObjectProperties();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.INVERSE_OBJECT_PROPERTIES__OBJECT_PROPERTY_EXPRESSION2), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_224, 299));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_InverseObjectProperties7178); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseObjectProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 300));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 300));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 59, parse_west_twouse_language_owl2fs_InverseObjectProperties_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_InverseObjectProperties"


    // $ANTLR start "parse_west_twouse_language_owl2fs_FunctionalObjectProperty"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14057:1: parse_west_twouse_language_owl2fs_FunctionalObjectProperty returns [west.twouse.language.owl2fs.FunctionalObjectProperty element = null] : a0= 'FunctionalObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' ;
    public final west.twouse.language.owl2fs.FunctionalObjectProperty parse_west_twouse_language_owl2fs_FunctionalObjectProperty() throws RecognitionException {
        west.twouse.language.owl2fs.FunctionalObjectProperty element =  null;
        int parse_west_twouse_language_owl2fs_FunctionalObjectProperty_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 60) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14060:1: (a0= 'FunctionalObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14061:2: a0= 'FunctionalObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')'
            {
            a0=(Token)match(input,66,FOLLOW_66_in_parse_west_twouse_language_owl2fs_FunctionalObjectProperty7207); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFunctionalObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_225, 301));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_FunctionalObjectProperty7221); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFunctionalObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 302));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 302));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 302));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 302));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 302));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14089:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop57:
            do {
                int alt57=2;
                int LA57_0 = input.LA(1);

                if ( (LA57_0==32) ) {
                    alt57=1;
                }


                switch (alt57) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14090:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14090:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14091:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_FunctionalObjectProperty7244);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFunctionalObjectProperty();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.FUNCTIONAL_OBJECT_PROPERTY__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop57;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 303));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 303));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 303));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 303));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 303));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14117:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14118:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_FunctionalObjectProperty7274);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFunctionalObjectProperty();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.FUNCTIONAL_OBJECT_PROPERTY__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_112, 304));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_FunctionalObjectProperty7292); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFunctionalObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 305));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 305));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 60, parse_west_twouse_language_owl2fs_FunctionalObjectProperty_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_FunctionalObjectProperty"


    // $ANTLR start "parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14199:1: parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty returns [west.twouse.language.owl2fs.InverseFunctionalObjectProperty element = null] : a0= 'InverseFunctionalObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' ;
    public final west.twouse.language.owl2fs.InverseFunctionalObjectProperty parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty() throws RecognitionException {
        west.twouse.language.owl2fs.InverseFunctionalObjectProperty element =  null;
        int parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 61) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14202:1: (a0= 'InverseFunctionalObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14203:2: a0= 'InverseFunctionalObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')'
            {
            a0=(Token)match(input,67,FOLLOW_67_in_parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty7321); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseFunctionalObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_226, 306));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty7335); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseFunctionalObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 307));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 307));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 307));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 307));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 307));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14231:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop58:
            do {
                int alt58=2;
                int LA58_0 = input.LA(1);

                if ( (LA58_0==32) ) {
                    alt58=1;
                }


                switch (alt58) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14232:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14232:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14233:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty7358);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseFunctionalObjectProperty();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.INVERSE_FUNCTIONAL_OBJECT_PROPERTY__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop58;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 308));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 308));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 308));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 308));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 308));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14259:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14260:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty7388);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseFunctionalObjectProperty();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.INVERSE_FUNCTIONAL_OBJECT_PROPERTY__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_113, 309));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty7406); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createInverseFunctionalObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 310));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 310));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 61, parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ReflexiveObjectProperty"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14341:1: parse_west_twouse_language_owl2fs_ReflexiveObjectProperty returns [west.twouse.language.owl2fs.ReflexiveObjectProperty element = null] : a0= 'ReflexiveObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' ;
    public final west.twouse.language.owl2fs.ReflexiveObjectProperty parse_west_twouse_language_owl2fs_ReflexiveObjectProperty() throws RecognitionException {
        west.twouse.language.owl2fs.ReflexiveObjectProperty element =  null;
        int parse_west_twouse_language_owl2fs_ReflexiveObjectProperty_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 62) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14344:1: (a0= 'ReflexiveObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14345:2: a0= 'ReflexiveObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')'
            {
            a0=(Token)match(input,68,FOLLOW_68_in_parse_west_twouse_language_owl2fs_ReflexiveObjectProperty7435); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createReflexiveObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_227, 311));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ReflexiveObjectProperty7449); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createReflexiveObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 312));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 312));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 312));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 312));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 312));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14373:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop59:
            do {
                int alt59=2;
                int LA59_0 = input.LA(1);

                if ( (LA59_0==32) ) {
                    alt59=1;
                }


                switch (alt59) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14374:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14374:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14375:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ReflexiveObjectProperty7472);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createReflexiveObjectProperty();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.REFLEXIVE_OBJECT_PROPERTY__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop59;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 313));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 313));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 313));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 313));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 313));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14401:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14402:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ReflexiveObjectProperty7502);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createReflexiveObjectProperty();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.REFLEXIVE_OBJECT_PROPERTY__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_114, 314));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ReflexiveObjectProperty7520); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createReflexiveObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 315));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 315));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 62, parse_west_twouse_language_owl2fs_ReflexiveObjectProperty_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ReflexiveObjectProperty"


    // $ANTLR start "parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14483:1: parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty returns [west.twouse.language.owl2fs.IrreflexiveObjectProperty element = null] : a0= 'IrreflexiveObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' ;
    public final west.twouse.language.owl2fs.IrreflexiveObjectProperty parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty() throws RecognitionException {
        west.twouse.language.owl2fs.IrreflexiveObjectProperty element =  null;
        int parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 63) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14486:1: (a0= 'IrreflexiveObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14487:2: a0= 'IrreflexiveObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')'
            {
            a0=(Token)match(input,69,FOLLOW_69_in_parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty7549); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createIrreflexiveObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_228, 316));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty7563); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createIrreflexiveObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 317));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 317));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 317));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 317));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 317));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14515:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop60:
            do {
                int alt60=2;
                int LA60_0 = input.LA(1);

                if ( (LA60_0==32) ) {
                    alt60=1;
                }


                switch (alt60) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14516:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14516:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14517:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty7586);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createIrreflexiveObjectProperty();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.IRREFLEXIVE_OBJECT_PROPERTY__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop60;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 318));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 318));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 318));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 318));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 318));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14543:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14544:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty7616);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createIrreflexiveObjectProperty();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.IRREFLEXIVE_OBJECT_PROPERTY__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_115, 319));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty7634); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createIrreflexiveObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 320));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 320));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 63, parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty"


    // $ANTLR start "parse_west_twouse_language_owl2fs_SymmetricObjectProperty"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14625:1: parse_west_twouse_language_owl2fs_SymmetricObjectProperty returns [west.twouse.language.owl2fs.SymmetricObjectProperty element = null] : a0= 'SymmetricObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' ;
    public final west.twouse.language.owl2fs.SymmetricObjectProperty parse_west_twouse_language_owl2fs_SymmetricObjectProperty() throws RecognitionException {
        west.twouse.language.owl2fs.SymmetricObjectProperty element =  null;
        int parse_west_twouse_language_owl2fs_SymmetricObjectProperty_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 64) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14628:1: (a0= 'SymmetricObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14629:2: a0= 'SymmetricObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')'
            {
            a0=(Token)match(input,70,FOLLOW_70_in_parse_west_twouse_language_owl2fs_SymmetricObjectProperty7663); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSymmetricObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_229, 321));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_SymmetricObjectProperty7677); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSymmetricObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 322));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 322));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 322));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 322));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 322));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14657:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop61:
            do {
                int alt61=2;
                int LA61_0 = input.LA(1);

                if ( (LA61_0==32) ) {
                    alt61=1;
                }


                switch (alt61) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14658:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14658:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14659:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_SymmetricObjectProperty7700);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSymmetricObjectProperty();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.SYMMETRIC_OBJECT_PROPERTY__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop61;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 323));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 323));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 323));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 323));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 323));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14685:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14686:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_SymmetricObjectProperty7730);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSymmetricObjectProperty();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.SYMMETRIC_OBJECT_PROPERTY__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_116, 324));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_SymmetricObjectProperty7748); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSymmetricObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 325));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 325));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 64, parse_west_twouse_language_owl2fs_SymmetricObjectProperty_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_SymmetricObjectProperty"


    // $ANTLR start "parse_west_twouse_language_owl2fs_AsymmetricObjectProperty"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14767:1: parse_west_twouse_language_owl2fs_AsymmetricObjectProperty returns [west.twouse.language.owl2fs.AsymmetricObjectProperty element = null] : a0= 'AntiSymmetricObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' ;
    public final west.twouse.language.owl2fs.AsymmetricObjectProperty parse_west_twouse_language_owl2fs_AsymmetricObjectProperty() throws RecognitionException {
        west.twouse.language.owl2fs.AsymmetricObjectProperty element =  null;
        int parse_west_twouse_language_owl2fs_AsymmetricObjectProperty_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 65) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14770:1: (a0= 'AntiSymmetricObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14771:2: a0= 'AntiSymmetricObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')'
            {
            a0=(Token)match(input,71,FOLLOW_71_in_parse_west_twouse_language_owl2fs_AsymmetricObjectProperty7777); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAsymmetricObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_230, 326));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_AsymmetricObjectProperty7791); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAsymmetricObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 327));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 327));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 327));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 327));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 327));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14799:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop62:
            do {
                int alt62=2;
                int LA62_0 = input.LA(1);

                if ( (LA62_0==32) ) {
                    alt62=1;
                }


                switch (alt62) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14800:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14800:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14801:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_AsymmetricObjectProperty7814);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAsymmetricObjectProperty();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.ASYMMETRIC_OBJECT_PROPERTY__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop62;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 328));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 328));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 328));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 328));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 328));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14827:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14828:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_AsymmetricObjectProperty7844);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAsymmetricObjectProperty();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.ASYMMETRIC_OBJECT_PROPERTY__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_117, 329));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_AsymmetricObjectProperty7862); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createAsymmetricObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 330));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 330));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 65, parse_west_twouse_language_owl2fs_AsymmetricObjectProperty_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_AsymmetricObjectProperty"


    // $ANTLR start "parse_west_twouse_language_owl2fs_TransitiveObjectProperty"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14909:1: parse_west_twouse_language_owl2fs_TransitiveObjectProperty returns [west.twouse.language.owl2fs.TransitiveObjectProperty element = null] : a0= 'TransitiveObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' ;
    public final west.twouse.language.owl2fs.TransitiveObjectProperty parse_west_twouse_language_owl2fs_TransitiveObjectProperty() throws RecognitionException {
        west.twouse.language.owl2fs.TransitiveObjectProperty element =  null;
        int parse_west_twouse_language_owl2fs_TransitiveObjectProperty_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 66) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14912:1: (a0= 'TransitiveObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14913:2: a0= 'TransitiveObjectProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) a4= ')'
            {
            a0=(Token)match(input,72,FOLLOW_72_in_parse_west_twouse_language_owl2fs_TransitiveObjectProperty7891); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createTransitiveObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_231, 331));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_TransitiveObjectProperty7905); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createTransitiveObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 332));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 332));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 332));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 332));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 332));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14941:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop63:
            do {
                int alt63=2;
                int LA63_0 = input.LA(1);

                if ( (LA63_0==32) ) {
                    alt63=1;
                }


                switch (alt63) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14942:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14942:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14943:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_TransitiveObjectProperty7928);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createTransitiveObjectProperty();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.TRANSITIVE_OBJECT_PROPERTY__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop63;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 333));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 333));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 333));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 333));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 333));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14969:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:14970:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_TransitiveObjectProperty7958);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createTransitiveObjectProperty();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.TRANSITIVE_OBJECT_PROPERTY__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_118, 334));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_TransitiveObjectProperty7976); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createTransitiveObjectProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 335));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 335));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 66, parse_west_twouse_language_owl2fs_TransitiveObjectProperty_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_TransitiveObjectProperty"


    // $ANTLR start "parse_west_twouse_language_owl2fs_SubDataPropertyOf"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15051:1: parse_west_twouse_language_owl2fs_SubDataPropertyOf returns [west.twouse.language.owl2fs.SubDataPropertyOf element = null] : a0= 'SubDataPropertyOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) a5= ')' ;
    public final west.twouse.language.owl2fs.SubDataPropertyOf parse_west_twouse_language_owl2fs_SubDataPropertyOf() throws RecognitionException {
        west.twouse.language.owl2fs.SubDataPropertyOf element =  null;
        int parse_west_twouse_language_owl2fs_SubDataPropertyOf_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.DataPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.DataPropertyExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 67) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15054:1: (a0= 'SubDataPropertyOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15055:2: a0= 'SubDataPropertyOf' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) a5= ')'
            {
            a0=(Token)match(input,73,FOLLOW_73_in_parse_west_twouse_language_owl2fs_SubDataPropertyOf8005); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubDataPropertyOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_232, 336));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_SubDataPropertyOf8019); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubDataPropertyOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 337));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 337));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 337));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 337));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15082:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop64:
            do {
                int alt64=2;
                int LA64_0 = input.LA(1);

                if ( (LA64_0==32) ) {
                    alt64=1;
                }


                switch (alt64) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15083:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15083:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15084:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_SubDataPropertyOf8042);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubDataPropertyOf();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.SUB_DATA_PROPERTY_OF__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop64;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 338));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 338));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 338));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 338));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15109:2: (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15110:3: a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_SubDataPropertyOf8072);
            a3_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubDataPropertyOf();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.SUB_DATA_PROPERTY_OF__SUB_DATA_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 339));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 339));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 339));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15133:2: (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15134:3: a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_SubDataPropertyOf8094);
            a4_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubDataPropertyOf();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.SUB_DATA_PROPERTY_OF__SUPER_DATA_PROPERTY_EXPRESSION), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_233, 340));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_SubDataPropertyOf8112); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSubDataPropertyOf();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 341));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 341));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 67, parse_west_twouse_language_owl2fs_SubDataPropertyOf_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_SubDataPropertyOf"


    // $ANTLR start "parse_west_twouse_language_owl2fs_EquivalentDataProperties"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15215:1: parse_west_twouse_language_owl2fs_EquivalentDataProperties returns [west.twouse.language.owl2fs.EquivalentDataProperties element = null] : a0= 'EquivalentDataProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) )+ a5= ')' ;
    public final west.twouse.language.owl2fs.EquivalentDataProperties parse_west_twouse_language_owl2fs_EquivalentDataProperties() throws RecognitionException {
        west.twouse.language.owl2fs.EquivalentDataProperties element =  null;
        int parse_west_twouse_language_owl2fs_EquivalentDataProperties_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.DataPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.DataPropertyExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 68) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15218:1: (a0= 'EquivalentDataProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) )+ a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15219:2: a0= 'EquivalentDataProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) )+ a5= ')'
            {
            a0=(Token)match(input,74,FOLLOW_74_in_parse_west_twouse_language_owl2fs_EquivalentDataProperties8141); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentDataProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_234, 342));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_EquivalentDataProperties8155); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentDataProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 343));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 343));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 343));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 343));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15246:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop65:
            do {
                int alt65=2;
                int LA65_0 = input.LA(1);

                if ( (LA65_0==32) ) {
                    alt65=1;
                }


                switch (alt65) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15247:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15247:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15248:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_EquivalentDataProperties8178);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentDataProperties();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.EQUIVALENT_DATA_PROPERTIES__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop65;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 344));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 344));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 344));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 344));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15273:2: (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15274:3: a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_EquivalentDataProperties8208);
            a3_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentDataProperties();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.EQUIVALENT_DATA_PROPERTIES__DATA_PROPERTY_EXPRESSIONS, a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 345));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 345));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 345));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15297:2: ( (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) )+
            int cnt66=0;
            loop66:
            do {
                int alt66=2;
                int LA66_0 = input.LA(1);

                if ( ((LA66_0>=FULLIRI && LA66_0<=ABBRIRI)||LA66_0==14) ) {
                    alt66=1;
                }


                switch (alt66) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15298:3: (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15298:3: (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15299:4: a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_EquivalentDataProperties8235);
            	    a4_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentDataProperties();
            	      				}
            	      				if (a4_0 != null) {
            	      					if (a4_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.EQUIVALENT_DATA_PROPERTIES__DATA_PROPERTY_EXPRESSIONS, a4_0);
            	      						completedElement(a4_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a4_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt66 >= 1 ) break loop66;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(66, input);
                        throw eee;
                }
                cnt66++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 346));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 346));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 346));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_235, 346));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_EquivalentDataProperties8261); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEquivalentDataProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 347));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 347));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 68, parse_west_twouse_language_owl2fs_EquivalentDataProperties_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_EquivalentDataProperties"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DisjointDataProperties"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15384:1: parse_west_twouse_language_owl2fs_DisjointDataProperties returns [west.twouse.language.owl2fs.DisjointDataProperties element = null] : a0= 'DisjointDataProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) )+ a5= ')' ;
    public final west.twouse.language.owl2fs.DisjointDataProperties parse_west_twouse_language_owl2fs_DisjointDataProperties() throws RecognitionException {
        west.twouse.language.owl2fs.DisjointDataProperties element =  null;
        int parse_west_twouse_language_owl2fs_DisjointDataProperties_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.DataPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.DataPropertyExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 69) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15387:1: (a0= 'DisjointDataProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) )+ a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15388:2: a0= 'DisjointDataProperties' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) ( (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) )+ a5= ')'
            {
            a0=(Token)match(input,75,FOLLOW_75_in_parse_west_twouse_language_owl2fs_DisjointDataProperties8290); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointDataProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_236, 348));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DisjointDataProperties8304); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointDataProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 349));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 349));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 349));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 349));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15415:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop67:
            do {
                int alt67=2;
                int LA67_0 = input.LA(1);

                if ( (LA67_0==32) ) {
                    alt67=1;
                }


                switch (alt67) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15416:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15416:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15417:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DisjointDataProperties8327);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointDataProperties();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_DATA_PROPERTIES__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop67;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 350));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 350));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 350));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 350));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15442:2: (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15443:3: a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DisjointDataProperties8357);
            a3_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointDataProperties();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_DATA_PROPERTIES__DATA_PROPERTY_EXPRESSIONS, a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 351));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 351));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 351));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15466:2: ( (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) )+
            int cnt68=0;
            loop68:
            do {
                int alt68=2;
                int LA68_0 = input.LA(1);

                if ( ((LA68_0>=FULLIRI && LA68_0<=ABBRIRI)||LA68_0==14) ) {
                    alt68=1;
                }


                switch (alt68) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15467:3: (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15467:3: (a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15468:4: a4_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DisjointDataProperties8384);
            	    a4_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointDataProperties();
            	      				}
            	      				if (a4_0 != null) {
            	      					if (a4_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DISJOINT_DATA_PROPERTIES__DATA_PROPERTY_EXPRESSIONS, a4_0);
            	      						completedElement(a4_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a4_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt68 >= 1 ) break loop68;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(68, input);
                        throw eee;
                }
                cnt68++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 352));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 352));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 352));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_237, 352));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DisjointDataProperties8410); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDisjointDataProperties();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 353));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 353));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 69, parse_west_twouse_language_owl2fs_DisjointDataProperties_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DisjointDataProperties"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataPropertyDomain"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15553:1: parse_west_twouse_language_owl2fs_DataPropertyDomain returns [west.twouse.language.owl2fs.DataPropertyDomain element = null] : a0= 'DataPropertyDomain' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) a5= ')' ;
    public final west.twouse.language.owl2fs.DataPropertyDomain parse_west_twouse_language_owl2fs_DataPropertyDomain() throws RecognitionException {
        west.twouse.language.owl2fs.DataPropertyDomain element =  null;
        int parse_west_twouse_language_owl2fs_DataPropertyDomain_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.DataPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.ClassExpression a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 70) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15556:1: (a0= 'DataPropertyDomain' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15557:2: a0= 'DataPropertyDomain' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_ClassExpression ) a5= ')'
            {
            a0=(Token)match(input,76,FOLLOW_76_in_parse_west_twouse_language_owl2fs_DataPropertyDomain8439); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDomain();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_238, 354));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataPropertyDomain8453); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDomain();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 355));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 355));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 355));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 355));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15584:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop69:
            do {
                int alt69=2;
                int LA69_0 = input.LA(1);

                if ( (LA69_0==32) ) {
                    alt69=1;
                }


                switch (alt69) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15585:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15585:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15586:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DataPropertyDomain8476);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDomain();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY_DOMAIN__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop69;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 356));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 356));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 356));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 356));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15611:2: (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15612:3: a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataPropertyDomain8506);
            a3_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDomain();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY_DOMAIN__DATA_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 357));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 357));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15652:2: (a4_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15653:3: a4_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_DataPropertyDomain8528);
            a4_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDomain();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY_DOMAIN__DOMAIN), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_81, 358));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataPropertyDomain8546); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyDomain();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 359));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 359));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 70, parse_west_twouse_language_owl2fs_DataPropertyDomain_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataPropertyDomain"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataPropertyRange"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15734:1: parse_west_twouse_language_owl2fs_DataPropertyRange returns [west.twouse.language.owl2fs.DataPropertyRange element = null] : a0= 'DataPropertyRange' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_DataRange ) a5= ')' ;
    public final west.twouse.language.owl2fs.DataPropertyRange parse_west_twouse_language_owl2fs_DataPropertyRange() throws RecognitionException {
        west.twouse.language.owl2fs.DataPropertyRange element =  null;
        int parse_west_twouse_language_owl2fs_DataPropertyRange_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.DataPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.DataRange a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 71) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15737:1: (a0= 'DataPropertyRange' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_DataRange ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15738:2: a0= 'DataPropertyRange' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_DataRange ) a5= ')'
            {
            a0=(Token)match(input,77,FOLLOW_77_in_parse_west_twouse_language_owl2fs_DataPropertyRange8575); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyRange();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_239, 360));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataPropertyRange8589); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyRange();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 361));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 361));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 361));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 361));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15765:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop70:
            do {
                int alt70=2;
                int LA70_0 = input.LA(1);

                if ( (LA70_0==32) ) {
                    alt70=1;
                }


                switch (alt70) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15766:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15766:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15767:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DataPropertyRange8612);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyRange();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY_RANGE__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop70;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 362));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 362));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 362));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 362));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15792:2: (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15793:3: a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataPropertyRange8642);
            a3_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyRange();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY_RANGE__DATA_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 363));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 363));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 363));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 363));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 363));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 363));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15819:2: (a4_0= parse_west_twouse_language_owl2fs_DataRange )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15820:3: a4_0= parse_west_twouse_language_owl2fs_DataRange
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataPropertyRange8664);
            a4_0=parse_west_twouse_language_owl2fs_DataRange();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyRange();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY_RANGE__RANGE), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_104, 364));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataPropertyRange8682); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyRange();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 365));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 365));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 71, parse_west_twouse_language_owl2fs_DataPropertyRange_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataPropertyRange"


    // $ANTLR start "parse_west_twouse_language_owl2fs_FunctionalDataProperty"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15901:1: parse_west_twouse_language_owl2fs_FunctionalDataProperty returns [west.twouse.language.owl2fs.FunctionalDataProperty element = null] : a0= 'FunctionalDataProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) a4= ')' ;
    public final west.twouse.language.owl2fs.FunctionalDataProperty parse_west_twouse_language_owl2fs_FunctionalDataProperty() throws RecognitionException {
        west.twouse.language.owl2fs.FunctionalDataProperty element =  null;
        int parse_west_twouse_language_owl2fs_FunctionalDataProperty_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.DataPropertyExpression a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 72) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15904:1: (a0= 'FunctionalDataProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15905:2: a0= 'FunctionalDataProperty' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) a4= ')'
            {
            a0=(Token)match(input,78,FOLLOW_78_in_parse_west_twouse_language_owl2fs_FunctionalDataProperty8711); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFunctionalDataProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_240, 366));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_FunctionalDataProperty8725); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFunctionalDataProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 367));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 367));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 367));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 367));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15932:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop71:
            do {
                int alt71=2;
                int LA71_0 = input.LA(1);

                if ( (LA71_0==32) ) {
                    alt71=1;
                }


                switch (alt71) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15933:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15933:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15934:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_FunctionalDataProperty8748);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFunctionalDataProperty();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.FUNCTIONAL_DATA_PROPERTY__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop71;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 368));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 368));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 368));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 368));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15959:2: (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:15960:3: a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_FunctionalDataProperty8778);
            a3_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFunctionalDataProperty();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.FUNCTIONAL_DATA_PROPERTY__DATA_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_120, 369));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_FunctionalDataProperty8796); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createFunctionalDataProperty();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 370));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 370));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 72, parse_west_twouse_language_owl2fs_FunctionalDataProperty_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_FunctionalDataProperty"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DatatypeDefinition"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16041:1: parse_west_twouse_language_owl2fs_DatatypeDefinition returns [west.twouse.language.owl2fs.DatatypeDefinition element = null] : a0= 'DatatypeDefinition' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_Datatype ) (a4_0= parse_west_twouse_language_owl2fs_DataRange ) a5= ')' ;
    public final west.twouse.language.owl2fs.DatatypeDefinition parse_west_twouse_language_owl2fs_DatatypeDefinition() throws RecognitionException {
        west.twouse.language.owl2fs.DatatypeDefinition element =  null;
        int parse_west_twouse_language_owl2fs_DatatypeDefinition_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.Datatype a3_0 = null;

        west.twouse.language.owl2fs.DataRange a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 73) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16044:1: (a0= 'DatatypeDefinition' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_Datatype ) (a4_0= parse_west_twouse_language_owl2fs_DataRange ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16045:2: a0= 'DatatypeDefinition' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_Datatype ) (a4_0= parse_west_twouse_language_owl2fs_DataRange ) a5= ')'
            {
            a0=(Token)match(input,79,FOLLOW_79_in_parse_west_twouse_language_owl2fs_DatatypeDefinition8825); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_241, 371));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DatatypeDefinition8839); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 372));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 372));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 372));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 372));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16072:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop72:
            do {
                int alt72=2;
                int LA72_0 = input.LA(1);

                if ( (LA72_0==32) ) {
                    alt72=1;
                }


                switch (alt72) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16073:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16073:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16074:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DatatypeDefinition8862);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDefinition();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DATATYPE_DEFINITION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop72;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 373));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 373));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 373));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 373));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16099:2: (a3_0= parse_west_twouse_language_owl2fs_Datatype )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16100:3: a3_0= parse_west_twouse_language_owl2fs_Datatype
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Datatype_in_parse_west_twouse_language_owl2fs_DatatypeDefinition8892);
            a3_0=parse_west_twouse_language_owl2fs_Datatype();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDefinition();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATATYPE_DEFINITION__DATATYPE), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 374));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 374));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 374));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 374));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 374));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 374));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16126:2: (a4_0= parse_west_twouse_language_owl2fs_DataRange )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16127:3: a4_0= parse_west_twouse_language_owl2fs_DataRange
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DatatypeDefinition8914);
            a4_0=parse_west_twouse_language_owl2fs_DataRange();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDefinition();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATATYPE_DEFINITION__DATA_RANGE), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_177, 375));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DatatypeDefinition8932); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDatatypeDefinition();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 376));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 376));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 73, parse_west_twouse_language_owl2fs_DatatypeDefinition_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DatatypeDefinition"


    // $ANTLR start "parse_west_twouse_language_owl2fs_HasKey"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16208:1: parse_west_twouse_language_owl2fs_HasKey returns [west.twouse.language.owl2fs.HasKey element = null] : a0= 'HasKey' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) a3= '(' ( (a4_0= parse_west_twouse_language_owl2fs_Annotation ) )* ( (a5_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )* a6= ')' a7= '(' ( (a8_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) )* a9= ')' a10= ')' ;
    public final west.twouse.language.owl2fs.HasKey parse_west_twouse_language_owl2fs_HasKey() throws RecognitionException {
        west.twouse.language.owl2fs.HasKey element =  null;
        int parse_west_twouse_language_owl2fs_HasKey_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a6=null;
        Token a7=null;
        Token a9=null;
        Token a10=null;
        west.twouse.language.owl2fs.ClassExpression a2_0 = null;

        west.twouse.language.owl2fs.Annotation a4_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a5_0 = null;

        west.twouse.language.owl2fs.DataPropertyExpression a8_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 74) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16211:1: (a0= 'HasKey' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) a3= '(' ( (a4_0= parse_west_twouse_language_owl2fs_Annotation ) )* ( (a5_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )* a6= ')' a7= '(' ( (a8_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) )* a9= ')' a10= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16212:2: a0= 'HasKey' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) a3= '(' ( (a4_0= parse_west_twouse_language_owl2fs_Annotation ) )* ( (a5_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )* a6= ')' a7= '(' ( (a8_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) )* a9= ')' a10= ')'
            {
            a0=(Token)match(input,80,FOLLOW_80_in_parse_west_twouse_language_owl2fs_HasKey8961); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createHasKey();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_242, 377));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_HasKey8975); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createHasKey();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 378));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 378));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16255:2: (a2_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16256:3: a2_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_HasKey8993);
            a2_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createHasKey();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.HAS_KEY__CLASS_EXPRESSION), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_82, 379));
              	
            }
            a3=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_HasKey9011); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createHasKey();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 380));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 380));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 380));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 380));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 380));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_156, 380));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16294:2: ( (a4_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop73:
            do {
                int alt73=2;
                int LA73_0 = input.LA(1);

                if ( (LA73_0==32) ) {
                    alt73=1;
                }


                switch (alt73) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16295:3: (a4_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16295:3: (a4_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16296:4: a4_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_HasKey9034);
            	    a4_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createHasKey();
            	      				}
            	      				if (a4_0 != null) {
            	      					if (a4_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.HAS_KEY__AXIOM_ANNOTATIONS, a4_0);
            	      						completedElement(a4_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a4_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop73;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 381));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 381));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 381));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 381));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 381));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_156, 381));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16323:2: ( (a5_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) )*
            loop74:
            do {
                int alt74=2;
                int LA74_0 = input.LA(1);

                if ( ((LA74_0>=FULLIRI && LA74_0<=ABBRIRI)||LA74_0==14||LA74_0==34) ) {
                    alt74=1;
                }


                switch (alt74) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16324:3: (a5_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16324:3: (a5_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16325:4: a5_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_HasKey9069);
            	    a5_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createHasKey();
            	      				}
            	      				if (a5_0 != null) {
            	      					if (a5_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.HAS_KEY__OBJECT_PROPERTY_EXPRESSIONS, a5_0);
            	      						completedElement(a5_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a5_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop74;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 382));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 382));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 382));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 382));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_156, 382));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_HasKey9095); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createHasKey();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_243, 383));
              	
            }
            a7=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_HasKey9109); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createHasKey();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 384));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 384));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 384));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_157, 384));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16378:2: ( (a8_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) )*
            loop75:
            do {
                int alt75=2;
                int LA75_0 = input.LA(1);

                if ( ((LA75_0>=FULLIRI && LA75_0<=ABBRIRI)||LA75_0==14) ) {
                    alt75=1;
                }


                switch (alt75) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16379:3: (a8_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16379:3: (a8_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16380:4: a8_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_HasKey9132);
            	    a8_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createHasKey();
            	      				}
            	      				if (a8_0 != null) {
            	      					if (a8_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.HAS_KEY__DATA_PROPERTY_EXPRESSIONS, a8_0);
            	      						completedElement(a8_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a8_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop75;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 385));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 385));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 385));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_157, 385));
              	
            }
            a9=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_HasKey9158); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createHasKey();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a9, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_244, 386));
              	
            }
            a10=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_HasKey9172); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createHasKey();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 387));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 387));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 74, parse_west_twouse_language_owl2fs_HasKey_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_HasKey"


    // $ANTLR start "parse_west_twouse_language_owl2fs_SameIndividual"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16477:1: parse_west_twouse_language_owl2fs_SameIndividual returns [west.twouse.language.owl2fs.SameIndividual element = null] : a0= 'SameIndividual' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_NamedIndividual ) ( (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual ) )+ a5= ')' ;
    public final west.twouse.language.owl2fs.SameIndividual parse_west_twouse_language_owl2fs_SameIndividual() throws RecognitionException {
        west.twouse.language.owl2fs.SameIndividual element =  null;
        int parse_west_twouse_language_owl2fs_SameIndividual_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.NamedIndividual a3_0 = null;

        west.twouse.language.owl2fs.NamedIndividual a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 75) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16480:1: (a0= 'SameIndividual' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_NamedIndividual ) ( (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual ) )+ a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16481:2: a0= 'SameIndividual' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_NamedIndividual ) ( (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual ) )+ a5= ')'
            {
            a0=(Token)match(input,81,FOLLOW_81_in_parse_west_twouse_language_owl2fs_SameIndividual9201); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSameIndividual();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_245, 388));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_SameIndividual9215); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSameIndividual();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 389));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 389));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 389));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 389));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16508:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop76:
            do {
                int alt76=2;
                int LA76_0 = input.LA(1);

                if ( (LA76_0==32) ) {
                    alt76=1;
                }


                switch (alt76) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16509:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16509:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16510:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_SameIndividual9238);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSameIndividual();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.SAME_INDIVIDUAL__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop76;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 390));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 390));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 390));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 390));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16535:2: (a3_0= parse_west_twouse_language_owl2fs_NamedIndividual )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16536:3: a3_0= parse_west_twouse_language_owl2fs_NamedIndividual
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_SameIndividual9268);
            a3_0=parse_west_twouse_language_owl2fs_NamedIndividual();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSameIndividual();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.SAME_INDIVIDUAL__SAME_INDIVIDUALS, a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 391));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 391));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 391));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16559:2: ( (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual ) )+
            int cnt77=0;
            loop77:
            do {
                int alt77=2;
                int LA77_0 = input.LA(1);

                if ( ((LA77_0>=FULLIRI && LA77_0<=ABBRIRI)||LA77_0==14) ) {
                    alt77=1;
                }


                switch (alt77) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16560:3: (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16560:3: (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16561:4: a4_0= parse_west_twouse_language_owl2fs_NamedIndividual
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_SameIndividual9295);
            	    a4_0=parse_west_twouse_language_owl2fs_NamedIndividual();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSameIndividual();
            	      				}
            	      				if (a4_0 != null) {
            	      					if (a4_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.SAME_INDIVIDUAL__SAME_INDIVIDUALS, a4_0);
            	      						completedElement(a4_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a4_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt77 >= 1 ) break loop77;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(77, input);
                        throw eee;
                }
                cnt77++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 392));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 392));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 392));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_246, 392));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_SameIndividual9321); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSameIndividual();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 393));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 393));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 75, parse_west_twouse_language_owl2fs_SameIndividual_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_SameIndividual"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DifferentIndividuals"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16646:1: parse_west_twouse_language_owl2fs_DifferentIndividuals returns [west.twouse.language.owl2fs.DifferentIndividuals element = null] : a0= 'DifferentIndividuals' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_NamedIndividual ) ( (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual ) )+ a5= ')' ;
    public final west.twouse.language.owl2fs.DifferentIndividuals parse_west_twouse_language_owl2fs_DifferentIndividuals() throws RecognitionException {
        west.twouse.language.owl2fs.DifferentIndividuals element =  null;
        int parse_west_twouse_language_owl2fs_DifferentIndividuals_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.NamedIndividual a3_0 = null;

        west.twouse.language.owl2fs.NamedIndividual a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 76) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16649:1: (a0= 'DifferentIndividuals' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_NamedIndividual ) ( (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual ) )+ a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16650:2: a0= 'DifferentIndividuals' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_NamedIndividual ) ( (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual ) )+ a5= ')'
            {
            a0=(Token)match(input,82,FOLLOW_82_in_parse_west_twouse_language_owl2fs_DifferentIndividuals9350); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDifferentIndividuals();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_247, 394));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DifferentIndividuals9364); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDifferentIndividuals();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 395));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 395));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 395));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 395));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16677:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop78:
            do {
                int alt78=2;
                int LA78_0 = input.LA(1);

                if ( (LA78_0==32) ) {
                    alt78=1;
                }


                switch (alt78) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16678:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16678:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16679:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DifferentIndividuals9387);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDifferentIndividuals();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DIFFERENT_INDIVIDUALS__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop78;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 396));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 396));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 396));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 396));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16704:2: (a3_0= parse_west_twouse_language_owl2fs_NamedIndividual )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16705:3: a3_0= parse_west_twouse_language_owl2fs_NamedIndividual
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_DifferentIndividuals9417);
            a3_0=parse_west_twouse_language_owl2fs_NamedIndividual();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDifferentIndividuals();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DIFFERENT_INDIVIDUALS__DIFFERENT_INDIVIDUALS, a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 397));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 397));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 397));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16728:2: ( (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual ) )+
            int cnt79=0;
            loop79:
            do {
                int alt79=2;
                int LA79_0 = input.LA(1);

                if ( ((LA79_0>=FULLIRI && LA79_0<=ABBRIRI)||LA79_0==14) ) {
                    alt79=1;
                }


                switch (alt79) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16729:3: (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16729:3: (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16730:4: a4_0= parse_west_twouse_language_owl2fs_NamedIndividual
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_DifferentIndividuals9444);
            	    a4_0=parse_west_twouse_language_owl2fs_NamedIndividual();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDifferentIndividuals();
            	      				}
            	      				if (a4_0 != null) {
            	      					if (a4_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DIFFERENT_INDIVIDUALS__DIFFERENT_INDIVIDUALS, a4_0);
            	      						completedElement(a4_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a4_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt79 >= 1 ) break loop79;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(79, input);
                        throw eee;
                }
                cnt79++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 398));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 398));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 398));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_248, 398));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DifferentIndividuals9470); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDifferentIndividuals();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 399));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 399));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 76, parse_west_twouse_language_owl2fs_DifferentIndividuals_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DifferentIndividuals"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ClassAssertion"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16815:1: parse_west_twouse_language_owl2fs_ClassAssertion returns [west.twouse.language.owl2fs.ClassAssertion element = null] : a0= 'ClassAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual ) a5= ')' ;
    public final west.twouse.language.owl2fs.ClassAssertion parse_west_twouse_language_owl2fs_ClassAssertion() throws RecognitionException {
        west.twouse.language.owl2fs.ClassAssertion element =  null;
        int parse_west_twouse_language_owl2fs_ClassAssertion_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ClassExpression a3_0 = null;

        west.twouse.language.owl2fs.NamedIndividual a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 77) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16818:1: (a0= 'ClassAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16819:2: a0= 'ClassAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ClassExpression ) (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual ) a5= ')'
            {
            a0=(Token)match(input,83,FOLLOW_83_in_parse_west_twouse_language_owl2fs_ClassAssertion9499); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_249, 400));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ClassAssertion9513); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 401));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 401));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16863:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop80:
            do {
                int alt80=2;
                int LA80_0 = input.LA(1);

                if ( (LA80_0==32) ) {
                    alt80=1;
                }


                switch (alt80) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16864:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16864:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16865:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ClassAssertion9536);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassAssertion();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.CLASS_ASSERTION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop80;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 402));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 402));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16907:2: (a3_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16908:3: a3_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ClassAssertion9566);
            a3_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassAssertion();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.CLASS_ASSERTION__CLASS_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 403));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 403));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 403));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16931:2: (a4_0= parse_west_twouse_language_owl2fs_NamedIndividual )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:16932:3: a4_0= parse_west_twouse_language_owl2fs_NamedIndividual
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_ClassAssertion9588);
            a4_0=parse_west_twouse_language_owl2fs_NamedIndividual();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassAssertion();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.CLASS_ASSERTION__INDIVIDUAL), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_159, 404));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ClassAssertion9606); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 405));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 405));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 77, parse_west_twouse_language_owl2fs_ClassAssertion_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ClassAssertion"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectPropertyAssertion"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17013:1: parse_west_twouse_language_owl2fs_ObjectPropertyAssertion returns [west.twouse.language.owl2fs.ObjectPropertyAssertion element = null] : a0= 'ObjectPropertyAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_Individual ) (a5_0= parse_west_twouse_language_owl2fs_Individual ) a6= ')' ;
    public final west.twouse.language.owl2fs.ObjectPropertyAssertion parse_west_twouse_language_owl2fs_ObjectPropertyAssertion() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectPropertyAssertion element =  null;
        int parse_west_twouse_language_owl2fs_ObjectPropertyAssertion_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a6=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.Individual a4_0 = null;

        west.twouse.language.owl2fs.Individual a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 78) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17016:1: (a0= 'ObjectPropertyAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_Individual ) (a5_0= parse_west_twouse_language_owl2fs_Individual ) a6= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17017:2: a0= 'ObjectPropertyAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_Individual ) (a5_0= parse_west_twouse_language_owl2fs_Individual ) a6= ')'
            {
            a0=(Token)match(input,84,FOLLOW_84_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9635); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_250, 406));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9649); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 407));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 407));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 407));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 407));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 407));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17045:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop81:
            do {
                int alt81=2;
                int LA81_0 = input.LA(1);

                if ( (LA81_0==32) ) {
                    alt81=1;
                }


                switch (alt81) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17046:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17046:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17047:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9672);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAssertion();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_ASSERTION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop81;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 408));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 408));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 408));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 408));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 408));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17073:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17074:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9702);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAssertion();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_ASSERTION__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 409));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 409));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 409));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 409));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17098:2: (a4_0= parse_west_twouse_language_owl2fs_Individual )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17099:3: a4_0= parse_west_twouse_language_owl2fs_Individual
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9724);
            a4_0=parse_west_twouse_language_owl2fs_Individual();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAssertion();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_ASSERTION__SOURCE_INDIVIDUAL), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 410));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 410));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 410));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 410));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17123:2: (a5_0= parse_west_twouse_language_owl2fs_Individual )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17124:3: a5_0= parse_west_twouse_language_owl2fs_Individual
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9746);
            a5_0=parse_west_twouse_language_owl2fs_Individual();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAssertion();
              			}
              			if (a5_0 != null) {
              				if (a5_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_ASSERTION__TARGET_INDIVIDUAL), a5_0);
              					completedElement(a5_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a5_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_251, 411));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9764); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 412));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 412));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 78, parse_west_twouse_language_owl2fs_ObjectPropertyAssertion_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectPropertyAssertion"


    // $ANTLR start "parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17205:1: parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion returns [west.twouse.language.owl2fs.NegativeObjectPropertyAssertion element = null] : a0= 'NegativeObjectPropertyAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_Individual ) (a5_0= parse_west_twouse_language_owl2fs_Individual ) a6= ')' ;
    public final west.twouse.language.owl2fs.NegativeObjectPropertyAssertion parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion() throws RecognitionException {
        west.twouse.language.owl2fs.NegativeObjectPropertyAssertion element =  null;
        int parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a6=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.ObjectPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.Individual a4_0 = null;

        west.twouse.language.owl2fs.Individual a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 79) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17208:1: (a0= 'NegativeObjectPropertyAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_Individual ) (a5_0= parse_west_twouse_language_owl2fs_Individual ) a6= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17209:2: a0= 'NegativeObjectPropertyAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_Individual ) (a5_0= parse_west_twouse_language_owl2fs_Individual ) a6= ')'
            {
            a0=(Token)match(input,85,FOLLOW_85_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9793); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeObjectPropertyAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_252, 413));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9807); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeObjectPropertyAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 414));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 414));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 414));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 414));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 414));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17237:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop82:
            do {
                int alt82=2;
                int LA82_0 = input.LA(1);

                if ( (LA82_0==32) ) {
                    alt82=1;
                }


                switch (alt82) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17238:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17238:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17239:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9830);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeObjectPropertyAssertion();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.NEGATIVE_OBJECT_PROPERTY_ASSERTION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop82;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 415));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 415));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 415));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 415));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 415));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17265:2: (a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17266:3: a3_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9860);
            a3_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeObjectPropertyAssertion();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.NEGATIVE_OBJECT_PROPERTY_ASSERTION__OBJECT_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 416));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 416));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 416));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 416));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17290:2: (a4_0= parse_west_twouse_language_owl2fs_Individual )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17291:3: a4_0= parse_west_twouse_language_owl2fs_Individual
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9882);
            a4_0=parse_west_twouse_language_owl2fs_Individual();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeObjectPropertyAssertion();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.NEGATIVE_OBJECT_PROPERTY_ASSERTION__SOURCE_INDIVIDUAL), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 417));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 417));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 417));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 417));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17315:2: (a5_0= parse_west_twouse_language_owl2fs_Individual )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17316:3: a5_0= parse_west_twouse_language_owl2fs_Individual
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9904);
            a5_0=parse_west_twouse_language_owl2fs_Individual();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeObjectPropertyAssertion();
              			}
              			if (a5_0 != null) {
              				if (a5_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.NEGATIVE_OBJECT_PROPERTY_ASSERTION__TARGET_INDIVIDUAL), a5_0);
              					completedElement(a5_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a5_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_253, 418));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9922); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeObjectPropertyAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 419));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 419));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 79, parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataPropertyAssertion"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17397:1: parse_west_twouse_language_owl2fs_DataPropertyAssertion returns [west.twouse.language.owl2fs.DataPropertyAssertion element = null] : a0= 'DataPropertyAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_Individual ) (a5_0= parse_west_twouse_language_owl2fs_Literal ) a6= ')' ;
    public final west.twouse.language.owl2fs.DataPropertyAssertion parse_west_twouse_language_owl2fs_DataPropertyAssertion() throws RecognitionException {
        west.twouse.language.owl2fs.DataPropertyAssertion element =  null;
        int parse_west_twouse_language_owl2fs_DataPropertyAssertion_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a6=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.DataPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.Individual a4_0 = null;

        west.twouse.language.owl2fs.Literal a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 80) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17400:1: (a0= 'DataPropertyAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_Individual ) (a5_0= parse_west_twouse_language_owl2fs_Literal ) a6= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17401:2: a0= 'DataPropertyAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_Individual ) (a5_0= parse_west_twouse_language_owl2fs_Literal ) a6= ')'
            {
            a0=(Token)match(input,86,FOLLOW_86_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion9951); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_254, 420));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion9965); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 421));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 421));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 421));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 421));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17428:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop83:
            do {
                int alt83=2;
                int LA83_0 = input.LA(1);

                if ( (LA83_0==32) ) {
                    alt83=1;
                }


                switch (alt83) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17429:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17429:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17430:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion9988);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyAssertion();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY_ASSERTION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop83;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 422));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 422));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 422));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 422));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17455:2: (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17456:3: a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion10018);
            a3_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyAssertion();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY_ASSERTION__DATA_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 423));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 423));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 423));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 423));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17480:2: (a4_0= parse_west_twouse_language_owl2fs_Individual )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17481:3: a4_0= parse_west_twouse_language_owl2fs_Individual
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion10040);
            a4_0=parse_west_twouse_language_owl2fs_Individual();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyAssertion();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY_ASSERTION__SOURCE_INDIVIDUAL), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 424));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17502:2: (a5_0= parse_west_twouse_language_owl2fs_Literal )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17503:3: a5_0= parse_west_twouse_language_owl2fs_Literal
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion10062);
            a5_0=parse_west_twouse_language_owl2fs_Literal();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyAssertion();
              			}
              			if (a5_0 != null) {
              				if (a5_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPERTY_ASSERTION__TARGET_VALUE), a5_0);
              					completedElement(a5_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a5_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_93, 425));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion10080); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropertyAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 426));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 426));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 80, parse_west_twouse_language_owl2fs_DataPropertyAssertion_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataPropertyAssertion"


    // $ANTLR start "parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17584:1: parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion returns [west.twouse.language.owl2fs.NegativeDataPropertyAssertion element = null] : a0= 'NegativeDataPropertyAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_Individual ) (a5_0= parse_west_twouse_language_owl2fs_Literal ) a6= ')' ;
    public final west.twouse.language.owl2fs.NegativeDataPropertyAssertion parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion() throws RecognitionException {
        west.twouse.language.owl2fs.NegativeDataPropertyAssertion element =  null;
        int parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a6=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.DataPropertyExpression a3_0 = null;

        west.twouse.language.owl2fs.Individual a4_0 = null;

        west.twouse.language.owl2fs.Literal a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 81) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17587:1: (a0= 'NegativeDataPropertyAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_Individual ) (a5_0= parse_west_twouse_language_owl2fs_Literal ) a6= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17588:2: a0= 'NegativeDataPropertyAssertion' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression ) (a4_0= parse_west_twouse_language_owl2fs_Individual ) (a5_0= parse_west_twouse_language_owl2fs_Literal ) a6= ')'
            {
            a0=(Token)match(input,87,FOLLOW_87_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10109); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeDataPropertyAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_255, 427));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10123); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeDataPropertyAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 428));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 428));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 428));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 428));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17615:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop84:
            do {
                int alt84=2;
                int LA84_0 = input.LA(1);

                if ( (LA84_0==32) ) {
                    alt84=1;
                }


                switch (alt84) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17616:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17616:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17617:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10146);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeDataPropertyAssertion();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.NEGATIVE_DATA_PROPERTY_ASSERTION__AXIOM_ANNOTATIONS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop84;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 429));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 429));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 429));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 429));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17642:2: (a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17643:3: a3_0= parse_west_twouse_language_owl2fs_DataPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10176);
            a3_0=parse_west_twouse_language_owl2fs_DataPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeDataPropertyAssertion();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.NEGATIVE_DATA_PROPERTY_ASSERTION__DATA_PROPERTY_EXPRESSION), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 430));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 430));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 430));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 430));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17667:2: (a4_0= parse_west_twouse_language_owl2fs_Individual )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17668:3: a4_0= parse_west_twouse_language_owl2fs_Individual
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10198);
            a4_0=parse_west_twouse_language_owl2fs_Individual();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeDataPropertyAssertion();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.NEGATIVE_DATA_PROPERTY_ASSERTION__SOURCE_INDIVIDUAL), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 431));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17689:2: (a5_0= parse_west_twouse_language_owl2fs_Literal )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17690:3: a5_0= parse_west_twouse_language_owl2fs_Literal
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10220);
            a5_0=parse_west_twouse_language_owl2fs_Literal();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeDataPropertyAssertion();
              			}
              			if (a5_0 != null) {
              				if (a5_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.NEGATIVE_DATA_PROPERTY_ASSERTION__TARGET_VALUE), a5_0);
              					completedElement(a5_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a5_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_94, 432));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10238); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNegativeDataPropertyAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 433));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 433));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 81, parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DLSafeRule"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17771:1: parse_west_twouse_language_owl2fs_DLSafeRule returns [west.twouse.language.owl2fs.DLSafeRule element = null] : a0= 'DLSafeRule' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'Body' a4= '(' ( (a5_0= parse_west_twouse_language_owl2fs_Atom ) )* a6= ')' a7= 'Head' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_Atom ) )* a10= ')' a11= ')' ;
    public final west.twouse.language.owl2fs.DLSafeRule parse_west_twouse_language_owl2fs_DLSafeRule() throws RecognitionException {
        west.twouse.language.owl2fs.DLSafeRule element =  null;
        int parse_west_twouse_language_owl2fs_DLSafeRule_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.Atom a5_0 = null;

        west.twouse.language.owl2fs.Atom a9_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 82) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17774:1: (a0= 'DLSafeRule' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'Body' a4= '(' ( (a5_0= parse_west_twouse_language_owl2fs_Atom ) )* a6= ')' a7= 'Head' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_Atom ) )* a10= ')' a11= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17775:2: a0= 'DLSafeRule' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'Body' a4= '(' ( (a5_0= parse_west_twouse_language_owl2fs_Atom ) )* a6= ')' a7= 'Head' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_Atom ) )* a10= ')' a11= ')'
            {
            a0=(Token)match(input,88,FOLLOW_88_in_parse_west_twouse_language_owl2fs_DLSafeRule10267); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDLSafeRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_256, 434));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DLSafeRule10281); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDLSafeRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 435));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_170, 435));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17800:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop85:
            do {
                int alt85=2;
                int LA85_0 = input.LA(1);

                if ( (LA85_0==32) ) {
                    alt85=1;
                }


                switch (alt85) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17801:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17801:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17802:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DLSafeRule10304);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDLSafeRule();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DL_SAFE_RULE__ANNOTATION, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop85;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 436));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_170, 436));
              	
            }
            a3=(Token)match(input,89,FOLLOW_89_in_parse_west_twouse_language_owl2fs_DLSafeRule10330); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDLSafeRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_257, 437));
              	
            }
            a4=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DLSafeRule10344); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDLSafeRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 438));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_259, 438));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 438));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_261, 438));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_262, 438));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_263, 438));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_264, 438));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_265, 438));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17856:2: ( (a5_0= parse_west_twouse_language_owl2fs_Atom ) )*
            loop86:
            do {
                int alt86=2;
                int LA86_0 = input.LA(1);

                if ( ((LA86_0>=91 && LA86_0<=97)) ) {
                    alt86=1;
                }


                switch (alt86) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17857:3: (a5_0= parse_west_twouse_language_owl2fs_Atom )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17857:3: (a5_0= parse_west_twouse_language_owl2fs_Atom )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17858:4: a5_0= parse_west_twouse_language_owl2fs_Atom
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Atom_in_parse_west_twouse_language_owl2fs_DLSafeRule10367);
            	    a5_0=parse_west_twouse_language_owl2fs_Atom();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDLSafeRule();
            	      				}
            	      				if (a5_0 != null) {
            	      					if (a5_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DL_SAFE_RULE__BODY_ATOM, a5_0);
            	      						completedElement(a5_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a5_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop86;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 439));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_259, 439));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 439));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_261, 439));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_262, 439));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_263, 439));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_264, 439));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_265, 439));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DLSafeRule10393); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDLSafeRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_266, 440));
              	
            }
            a7=(Token)match(input,90,FOLLOW_90_in_parse_west_twouse_language_owl2fs_DLSafeRule10407); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDLSafeRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_267, 441));
              	
            }
            a8=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DLSafeRule10421); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDLSafeRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 442));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_259, 442));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 442));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_261, 442));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_262, 442));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_263, 442));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_264, 442));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_268, 442));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17930:2: ( (a9_0= parse_west_twouse_language_owl2fs_Atom ) )*
            loop87:
            do {
                int alt87=2;
                int LA87_0 = input.LA(1);

                if ( ((LA87_0>=91 && LA87_0<=97)) ) {
                    alt87=1;
                }


                switch (alt87) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17931:3: (a9_0= parse_west_twouse_language_owl2fs_Atom )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17931:3: (a9_0= parse_west_twouse_language_owl2fs_Atom )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:17932:4: a9_0= parse_west_twouse_language_owl2fs_Atom
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Atom_in_parse_west_twouse_language_owl2fs_DLSafeRule10444);
            	    a9_0=parse_west_twouse_language_owl2fs_Atom();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDLSafeRule();
            	      				}
            	      				if (a9_0 != null) {
            	      					if (a9_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DL_SAFE_RULE__HEAD_ATOM, a9_0);
            	      						completedElement(a9_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a9_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop87;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 443));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_259, 443));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 443));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_261, 443));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_262, 443));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_263, 443));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_264, 443));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_268, 443));
              	
            }
            a10=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DLSafeRule10470); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDLSafeRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_269, 444));
              	
            }
            a11=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DLSafeRule10484); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDLSafeRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 445));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 445));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 82, parse_west_twouse_language_owl2fs_DLSafeRule_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DLSafeRule"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ClassAtom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18033:1: parse_west_twouse_language_owl2fs_ClassAtom returns [west.twouse.language.owl2fs.ClassAtom element = null] : a0= 'ClassAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) a4= ')' ;
    public final west.twouse.language.owl2fs.ClassAtom parse_west_twouse_language_owl2fs_ClassAtom() throws RecognitionException {
        west.twouse.language.owl2fs.ClassAtom element =  null;
        int parse_west_twouse_language_owl2fs_ClassAtom_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.ClassExpression a2_0 = null;

        west.twouse.language.owl2fs.IArg a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 83) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18036:1: (a0= 'ClassAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18037:2: a0= 'ClassAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ClassExpression ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) a4= ')'
            {
            a0=(Token)match(input,91,FOLLOW_91_in_parse_west_twouse_language_owl2fs_ClassAtom10513); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_270, 446));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ClassAtom10527); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_56, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_57, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_58, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_59, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_60, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_61, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_62, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_63, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_64, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_65, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_66, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_67, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_68, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_69, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_70, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_71, 447));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_72, 447));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18080:2: (a2_0= parse_west_twouse_language_owl2fs_ClassExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18081:3: a2_0= parse_west_twouse_language_owl2fs_ClassExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ClassAtom10545);
            a2_0=parse_west_twouse_language_owl2fs_ClassExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassAtom();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.CLASS_ATOM__CLASS_EXPRESSION), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 448));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 448));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 448));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 448));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 448));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18106:2: (a3_0= parse_west_twouse_language_owl2fs_IArg )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18107:3: a3_0= parse_west_twouse_language_owl2fs_IArg
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_ClassAtom10567);
            a3_0=parse_west_twouse_language_owl2fs_IArg();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassAtom();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.CLASS_ATOM__IARG), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_160, 449));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ClassAtom10585); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createClassAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 450));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_259, 450));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 450));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_261, 450));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_262, 450));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_263, 450));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_264, 450));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_265, 450));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_271, 450));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 83, parse_west_twouse_language_owl2fs_ClassAtom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ClassAtom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataRangeAtom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18150:1: parse_west_twouse_language_owl2fs_DataRangeAtom returns [west.twouse.language.owl2fs.DataRangeAtom element = null] : a0= 'DataRangeAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataRange ) (a3_0= parse_west_twouse_language_owl2fs_DArg ) a4= ')' ;
    public final west.twouse.language.owl2fs.DataRangeAtom parse_west_twouse_language_owl2fs_DataRangeAtom() throws RecognitionException {
        west.twouse.language.owl2fs.DataRangeAtom element =  null;
        int parse_west_twouse_language_owl2fs_DataRangeAtom_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.DataRange a2_0 = null;

        west.twouse.language.owl2fs.DArg a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 84) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18153:1: (a0= 'DataRangeAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataRange ) (a3_0= parse_west_twouse_language_owl2fs_DArg ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18154:2: a0= 'DataRangeAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataRange ) (a3_0= parse_west_twouse_language_owl2fs_DArg ) a4= ')'
            {
            a0=(Token)match(input,92,FOLLOW_92_in_parse_west_twouse_language_owl2fs_DataRangeAtom10614); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataRangeAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_272, 451));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataRangeAtom10628); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataRangeAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 452));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 452));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 452));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_105, 452));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_106, 452));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_107, 452));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18183:2: (a2_0= parse_west_twouse_language_owl2fs_DataRange )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18184:3: a2_0= parse_west_twouse_language_owl2fs_DataRange
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataRangeAtom10646);
            a2_0=parse_west_twouse_language_owl2fs_DataRange();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataRangeAtom();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_RANGE_ATOM__DATA_RANGE), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 453));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 453));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18206:2: (a3_0= parse_west_twouse_language_owl2fs_DArg )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18207:3: a3_0= parse_west_twouse_language_owl2fs_DArg
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DArg_in_parse_west_twouse_language_owl2fs_DataRangeAtom10668);
            a3_0=parse_west_twouse_language_owl2fs_DArg();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataRangeAtom();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_RANGE_ATOM__DARG), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_95, 454));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataRangeAtom10686); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataRangeAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 455));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_259, 455));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 455));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_261, 455));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_262, 455));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_263, 455));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_264, 455));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_265, 455));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 84, parse_west_twouse_language_owl2fs_DataRangeAtom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataRangeAtom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectPropertyAtom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18249:1: parse_west_twouse_language_owl2fs_ObjectPropertyAtom returns [west.twouse.language.owl2fs.ObjectPropertyAtom element = null] : a0= 'ObjectPropertyAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) (a4_0= parse_west_twouse_language_owl2fs_IArg ) a5= ')' ;
    public final west.twouse.language.owl2fs.ObjectPropertyAtom parse_west_twouse_language_owl2fs_ObjectPropertyAtom() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectPropertyAtom element =  null;
        int parse_west_twouse_language_owl2fs_ObjectPropertyAtom_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.ObjectPropertyExpression a2_0 = null;

        west.twouse.language.owl2fs.IArg a3_0 = null;

        west.twouse.language.owl2fs.IArg a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 85) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18252:1: (a0= 'ObjectPropertyAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) (a4_0= parse_west_twouse_language_owl2fs_IArg ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18253:2: a0= 'ObjectPropertyAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) (a4_0= parse_west_twouse_language_owl2fs_IArg ) a5= ')'
            {
            a0=(Token)match(input,93,FOLLOW_93_in_parse_west_twouse_language_owl2fs_ObjectPropertyAtom10715); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_273, 456));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyAtom10729); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 457));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 457));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 457));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_111, 457));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18280:2: (a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18281:3: a2_0= parse_west_twouse_language_owl2fs_ObjectPropertyExpression
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyAtom10747);
            a2_0=parse_west_twouse_language_owl2fs_ObjectPropertyExpression();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAtom();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_ATOM__OBJECT_PROPERTY_EXPRESSION), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 458));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 458));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 458));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 458));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 458));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18306:2: (a3_0= parse_west_twouse_language_owl2fs_IArg )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18307:3: a3_0= parse_west_twouse_language_owl2fs_IArg
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_ObjectPropertyAtom10769);
            a3_0=parse_west_twouse_language_owl2fs_IArg();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAtom();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_ATOM__IARG1), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 459));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 459));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 459));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 459));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 459));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18332:2: (a4_0= parse_west_twouse_language_owl2fs_IArg )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18333:3: a4_0= parse_west_twouse_language_owl2fs_IArg
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_ObjectPropertyAtom10791);
            a4_0=parse_west_twouse_language_owl2fs_IArg();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAtom();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.OBJECT_PROPERTY_ATOM__IARG2), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_274, 460));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyAtom10809); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createObjectPropertyAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 461));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_259, 461));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 461));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_261, 461));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_262, 461));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_263, 461));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_264, 461));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_265, 461));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_271, 461));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 85, parse_west_twouse_language_owl2fs_ObjectPropertyAtom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectPropertyAtom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataPropetyAtom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18376:1: parse_west_twouse_language_owl2fs_DataPropetyAtom returns [west.twouse.language.owl2fs.DataPropetyAtom element = null] : a0= 'DataPropetyAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataProperty ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) (a4_0= parse_west_twouse_language_owl2fs_DArg ) a5= ')' ;
    public final west.twouse.language.owl2fs.DataPropetyAtom parse_west_twouse_language_owl2fs_DataPropetyAtom() throws RecognitionException {
        west.twouse.language.owl2fs.DataPropetyAtom element =  null;
        int parse_west_twouse_language_owl2fs_DataPropetyAtom_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.DataProperty a2_0 = null;

        west.twouse.language.owl2fs.IArg a3_0 = null;

        west.twouse.language.owl2fs.DArg a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 86) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18379:1: (a0= 'DataPropetyAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataProperty ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) (a4_0= parse_west_twouse_language_owl2fs_DArg ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18380:2: a0= 'DataPropetyAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_DataProperty ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) (a4_0= parse_west_twouse_language_owl2fs_DArg ) a5= ')'
            {
            a0=(Token)match(input,94,FOLLOW_94_in_parse_west_twouse_language_owl2fs_DataPropetyAtom10838); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropetyAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_275, 462));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataPropetyAtom10852); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropetyAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 463));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 463));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 463));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18406:2: (a2_0= parse_west_twouse_language_owl2fs_DataProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18407:3: a2_0= parse_west_twouse_language_owl2fs_DataProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataProperty_in_parse_west_twouse_language_owl2fs_DataPropetyAtom10870);
            a2_0=parse_west_twouse_language_owl2fs_DataProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropetyAtom();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPETY_ATOM__DATA_PROPERTY), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 464));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 464));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 464));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 464));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 464));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18432:2: (a3_0= parse_west_twouse_language_owl2fs_IArg )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18433:3: a3_0= parse_west_twouse_language_owl2fs_IArg
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_DataPropetyAtom10892);
            a3_0=parse_west_twouse_language_owl2fs_IArg();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropetyAtom();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPETY_ATOM__IARG), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 465));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 465));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18455:2: (a4_0= parse_west_twouse_language_owl2fs_DArg )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18456:3: a4_0= parse_west_twouse_language_owl2fs_DArg
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DArg_in_parse_west_twouse_language_owl2fs_DataPropetyAtom10914);
            a4_0=parse_west_twouse_language_owl2fs_DArg();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropetyAtom();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DATA_PROPETY_ATOM__DARG), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_96, 466));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataPropetyAtom10932); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDataPropetyAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 467));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_259, 467));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 467));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_261, 467));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_262, 467));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_263, 467));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_264, 467));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_265, 467));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 86, parse_west_twouse_language_owl2fs_DataPropetyAtom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataPropetyAtom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_BuiltInAtom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18498:1: parse_west_twouse_language_owl2fs_BuiltInAtom returns [west.twouse.language.owl2fs.BuiltInAtom element = null] : a0= 'BuiltInAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_IRI ) ( (a3_0= parse_west_twouse_language_owl2fs_DArg ) )+ a4= ')' ;
    public final west.twouse.language.owl2fs.BuiltInAtom parse_west_twouse_language_owl2fs_BuiltInAtom() throws RecognitionException {
        west.twouse.language.owl2fs.BuiltInAtom element =  null;
        int parse_west_twouse_language_owl2fs_BuiltInAtom_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.IRI a2_0 = null;

        west.twouse.language.owl2fs.DArg a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 87) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18501:1: (a0= 'BuiltInAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_IRI ) ( (a3_0= parse_west_twouse_language_owl2fs_DArg ) )+ a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18502:2: a0= 'BuiltInAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_IRI ) ( (a3_0= parse_west_twouse_language_owl2fs_DArg ) )+ a4= ')'
            {
            a0=(Token)match(input,95,FOLLOW_95_in_parse_west_twouse_language_owl2fs_BuiltInAtom10961); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createBuiltInAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_276, 468));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_BuiltInAtom10975); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createBuiltInAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 469));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 469));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 469));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18528:2: (a2_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18529:3: a2_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_BuiltInAtom10993);
            a2_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createBuiltInAtom();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.BUILT_IN_ATOM__IRI), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 470));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 470));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18551:2: ( (a3_0= parse_west_twouse_language_owl2fs_DArg ) )+
            int cnt88=0;
            loop88:
            do {
                int alt88=2;
                int LA88_0 = input.LA(1);

                if ( (LA88_0==LITERAL||LA88_0==98) ) {
                    alt88=1;
                }


                switch (alt88) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18552:3: (a3_0= parse_west_twouse_language_owl2fs_DArg )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18552:3: (a3_0= parse_west_twouse_language_owl2fs_DArg )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18553:4: a3_0= parse_west_twouse_language_owl2fs_DArg
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DArg_in_parse_west_twouse_language_owl2fs_BuiltInAtom11020);
            	    a3_0=parse_west_twouse_language_owl2fs_DArg();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createBuiltInAtom();
            	      				}
            	      				if (a3_0 != null) {
            	      					if (a3_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.BUILT_IN_ATOM__DARG, a3_0);
            	      						completedElement(a3_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a3_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt88 >= 1 ) break loop88;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(88, input);
                        throw eee;
                }
                cnt88++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 471));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 471));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_97, 471));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_BuiltInAtom11046); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createBuiltInAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 472));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_259, 472));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 472));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_261, 472));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_262, 472));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_263, 472));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_264, 472));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_265, 472));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 87, parse_west_twouse_language_owl2fs_BuiltInAtom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_BuiltInAtom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_SameIndividualAtom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18598:1: parse_west_twouse_language_owl2fs_SameIndividualAtom returns [west.twouse.language.owl2fs.SameIndividualAtom element = null] : a0= 'SameIndividualAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_IArg ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) a4= ')' ;
    public final west.twouse.language.owl2fs.SameIndividualAtom parse_west_twouse_language_owl2fs_SameIndividualAtom() throws RecognitionException {
        west.twouse.language.owl2fs.SameIndividualAtom element =  null;
        int parse_west_twouse_language_owl2fs_SameIndividualAtom_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.IArg a2_0 = null;

        west.twouse.language.owl2fs.IArg a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 88) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18601:1: (a0= 'SameIndividualAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_IArg ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18602:2: a0= 'SameIndividualAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_IArg ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) a4= ')'
            {
            a0=(Token)match(input,96,FOLLOW_96_in_parse_west_twouse_language_owl2fs_SameIndividualAtom11075); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSameIndividualAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_277, 473));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_SameIndividualAtom11089); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSameIndividualAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 474));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 474));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 474));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 474));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 474));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18630:2: (a2_0= parse_west_twouse_language_owl2fs_IArg )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18631:3: a2_0= parse_west_twouse_language_owl2fs_IArg
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_SameIndividualAtom11107);
            a2_0=parse_west_twouse_language_owl2fs_IArg();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSameIndividualAtom();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.SAME_INDIVIDUAL_ATOM__IARG1), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 475));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 475));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 475));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 475));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 475));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18656:2: (a3_0= parse_west_twouse_language_owl2fs_IArg )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18657:3: a3_0= parse_west_twouse_language_owl2fs_IArg
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_SameIndividualAtom11129);
            a3_0=parse_west_twouse_language_owl2fs_IArg();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSameIndividualAtom();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.SAME_INDIVIDUAL_ATOM__IARG2), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_278, 476));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_SameIndividualAtom11147); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createSameIndividualAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 477));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_259, 477));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 477));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_261, 477));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_262, 477));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_263, 477));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_264, 477));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_265, 477));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 88, parse_west_twouse_language_owl2fs_SameIndividualAtom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_SameIndividualAtom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DifferentIndividualsAtom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18699:1: parse_west_twouse_language_owl2fs_DifferentIndividualsAtom returns [west.twouse.language.owl2fs.DifferentIndividualsAtom element = null] : a0= 'DifferentIndividualsAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_IArg ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) a4= ')' ;
    public final west.twouse.language.owl2fs.DifferentIndividualsAtom parse_west_twouse_language_owl2fs_DifferentIndividualsAtom() throws RecognitionException {
        west.twouse.language.owl2fs.DifferentIndividualsAtom element =  null;
        int parse_west_twouse_language_owl2fs_DifferentIndividualsAtom_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.IArg a2_0 = null;

        west.twouse.language.owl2fs.IArg a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 89) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18702:1: (a0= 'DifferentIndividualsAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_IArg ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18703:2: a0= 'DifferentIndividualsAtom' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_IArg ) (a3_0= parse_west_twouse_language_owl2fs_IArg ) a4= ')'
            {
            a0=(Token)match(input,97,FOLLOW_97_in_parse_west_twouse_language_owl2fs_DifferentIndividualsAtom11176); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDifferentIndividualsAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_279, 478));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DifferentIndividualsAtom11190); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDifferentIndividualsAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 479));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 479));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 479));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 479));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 479));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18731:2: (a2_0= parse_west_twouse_language_owl2fs_IArg )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18732:3: a2_0= parse_west_twouse_language_owl2fs_IArg
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_DifferentIndividualsAtom11208);
            a2_0=parse_west_twouse_language_owl2fs_IArg();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDifferentIndividualsAtom();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DIFFERENT_INDIVIDUALS_ATOM__IARG1), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 480));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 480));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 480));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 480));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 480));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18757:2: (a3_0= parse_west_twouse_language_owl2fs_IArg )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18758:3: a3_0= parse_west_twouse_language_owl2fs_IArg
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_DifferentIndividualsAtom11230);
            a3_0=parse_west_twouse_language_owl2fs_IArg();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDifferentIndividualsAtom();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DIFFERENT_INDIVIDUALS_ATOM__IARG2), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_280, 481));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DifferentIndividualsAtom11248); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDifferentIndividualsAtom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 482));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_259, 482));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 482));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_261, 482));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_262, 482));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_263, 482));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_264, 482));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_265, 482));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 89, parse_west_twouse_language_owl2fs_DifferentIndividualsAtom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DifferentIndividualsAtom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_Variable"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18800:1: parse_west_twouse_language_owl2fs_Variable returns [west.twouse.language.owl2fs.Variable element = null] : a0= 'Variable' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_IRI ) a3= ')' ;
    public final west.twouse.language.owl2fs.Variable parse_west_twouse_language_owl2fs_Variable() throws RecognitionException {
        west.twouse.language.owl2fs.Variable element =  null;
        int parse_west_twouse_language_owl2fs_Variable_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        west.twouse.language.owl2fs.IRI a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 90) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18803:1: (a0= 'Variable' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_IRI ) a3= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18804:2: a0= 'Variable' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_IRI ) a3= ')'
            {
            a0=(Token)match(input,98,FOLLOW_98_in_parse_west_twouse_language_owl2fs_Variable11277); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_281, 483));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_Variable11291); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 484));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 484));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 484));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18830:2: (a2_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18831:3: a2_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_Variable11309);
            a2_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createVariable();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.VARIABLE__IRI), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_124, 485));
              	
            }
            a3=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_Variable11327); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createVariable();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_160, 486));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_95, 486));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 486));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 486));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 486));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_83, 486));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_84, 486));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_89, 486));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_97, 486));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 90, parse_west_twouse_language_owl2fs_Variable_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_Variable"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DGRule"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18874:1: parse_west_twouse_language_owl2fs_DGRule returns [west.twouse.language.owl2fs.DGRule element = null] : a0= 'DescriptionGraphRule' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'Body' a4= '(' ( (a5_0= parse_west_twouse_language_owl2fs_DGAtom ) )* a6= ')' a7= 'Head' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_DGAtom ) )* a10= ')' a11= ')' ;
    public final west.twouse.language.owl2fs.DGRule parse_west_twouse_language_owl2fs_DGRule() throws RecognitionException {
        west.twouse.language.owl2fs.DGRule element =  null;
        int parse_west_twouse_language_owl2fs_DGRule_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        Token a4=null;
        Token a6=null;
        Token a7=null;
        Token a8=null;
        Token a10=null;
        Token a11=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.DGAtom a5_0 = null;

        west.twouse.language.owl2fs.DGAtom a9_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 91) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18877:1: (a0= 'DescriptionGraphRule' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'Body' a4= '(' ( (a5_0= parse_west_twouse_language_owl2fs_DGAtom ) )* a6= ')' a7= 'Head' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_DGAtom ) )* a10= ')' a11= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18878:2: a0= 'DescriptionGraphRule' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* a3= 'Body' a4= '(' ( (a5_0= parse_west_twouse_language_owl2fs_DGAtom ) )* a6= ')' a7= 'Head' a8= '(' ( (a9_0= parse_west_twouse_language_owl2fs_DGAtom ) )* a10= ')' a11= ')'
            {
            a0=(Token)match(input,99,FOLLOW_99_in_parse_west_twouse_language_owl2fs_DGRule11356); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_282, 487));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DGRule11370); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 488));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_171, 488));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18903:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop89:
            do {
                int alt89=2;
                int LA89_0 = input.LA(1);

                if ( (LA89_0==32) ) {
                    alt89=1;
                }


                switch (alt89) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18904:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18904:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18905:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DGRule11393);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGRule();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DG_RULE__ANNOTATION, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop89;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 489));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_171, 489));
              	
            }
            a3=(Token)match(input,89,FOLLOW_89_in_parse_west_twouse_language_owl2fs_DGRule11419); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_283, 490));
              	
            }
            a4=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DGRule11433); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 491));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 491));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_271, 491));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18954:2: ( (a5_0= parse_west_twouse_language_owl2fs_DGAtom ) )*
            loop90:
            do {
                int alt90=2;
                int LA90_0 = input.LA(1);

                if ( (LA90_0==91||LA90_0==93) ) {
                    alt90=1;
                }


                switch (alt90) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18955:3: (a5_0= parse_west_twouse_language_owl2fs_DGAtom )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18955:3: (a5_0= parse_west_twouse_language_owl2fs_DGAtom )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:18956:4: a5_0= parse_west_twouse_language_owl2fs_DGAtom
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DGAtom_in_parse_west_twouse_language_owl2fs_DGRule11456);
            	    a5_0=parse_west_twouse_language_owl2fs_DGAtom();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGRule();
            	      				}
            	      				if (a5_0 != null) {
            	      					if (a5_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DG_RULE__BODY_ATOM, a5_0);
            	      						completedElement(a5_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a5_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop90;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 492));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 492));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_271, 492));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DGRule11482); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_284, 493));
              	
            }
            a7=(Token)match(input,90,FOLLOW_90_in_parse_west_twouse_language_owl2fs_DGRule11496); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a7, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_285, 494));
              	
            }
            a8=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DGRule11510); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a8, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 495));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 495));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_286, 495));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19018:2: ( (a9_0= parse_west_twouse_language_owl2fs_DGAtom ) )*
            loop91:
            do {
                int alt91=2;
                int LA91_0 = input.LA(1);

                if ( (LA91_0==91||LA91_0==93) ) {
                    alt91=1;
                }


                switch (alt91) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19019:3: (a9_0= parse_west_twouse_language_owl2fs_DGAtom )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19019:3: (a9_0= parse_west_twouse_language_owl2fs_DGAtom )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19020:4: a9_0= parse_west_twouse_language_owl2fs_DGAtom
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DGAtom_in_parse_west_twouse_language_owl2fs_DGRule11533);
            	    a9_0=parse_west_twouse_language_owl2fs_DGAtom();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGRule();
            	      				}
            	      				if (a9_0 != null) {
            	      					if (a9_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DG_RULE__HEAD_ATOM, a9_0);
            	      						completedElement(a9_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a9_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop91;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_258, 496));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_260, 496));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_286, 496));
              	
            }
            a10=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DGRule11559); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a10, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_287, 497));
              	
            }
            a11=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DGRule11573); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGRule();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a11, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 498));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 498));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 91, parse_west_twouse_language_owl2fs_DGRule_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DGRule"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DGAxiom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19116:1: parse_west_twouse_language_owl2fs_DGAxiom returns [west.twouse.language.owl2fs.DGAxiom element = null] : a0= 'DescriptionGraph' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DGNodes ) (a4_0= parse_west_twouse_language_owl2fs_DGEdges ) (a5_0= parse_west_twouse_language_owl2fs_MainClasses ) a6= ')' ;
    public final west.twouse.language.owl2fs.DGAxiom parse_west_twouse_language_owl2fs_DGAxiom() throws RecognitionException {
        west.twouse.language.owl2fs.DGAxiom element =  null;
        int parse_west_twouse_language_owl2fs_DGAxiom_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a6=null;
        west.twouse.language.owl2fs.Annotation a2_0 = null;

        west.twouse.language.owl2fs.DGNodes a3_0 = null;

        west.twouse.language.owl2fs.DGEdges a4_0 = null;

        west.twouse.language.owl2fs.MainClasses a5_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 92) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19119:1: (a0= 'DescriptionGraph' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DGNodes ) (a4_0= parse_west_twouse_language_owl2fs_DGEdges ) (a5_0= parse_west_twouse_language_owl2fs_MainClasses ) a6= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19120:2: a0= 'DescriptionGraph' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )* (a3_0= parse_west_twouse_language_owl2fs_DGNodes ) (a4_0= parse_west_twouse_language_owl2fs_DGEdges ) (a5_0= parse_west_twouse_language_owl2fs_MainClasses ) a6= ')'
            {
            a0=(Token)match(input,100,FOLLOW_100_in_parse_west_twouse_language_owl2fs_DGAxiom11602); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGAxiom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_288, 499));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DGAxiom11616); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGAxiom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 500));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_172, 500));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19145:2: ( (a2_0= parse_west_twouse_language_owl2fs_Annotation ) )*
            loop92:
            do {
                int alt92=2;
                int LA92_0 = input.LA(1);

                if ( (LA92_0==32) ) {
                    alt92=1;
                }


                switch (alt92) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19146:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19146:3: (a2_0= parse_west_twouse_language_owl2fs_Annotation )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19147:4: a2_0= parse_west_twouse_language_owl2fs_Annotation
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DGAxiom11639);
            	    a2_0=parse_west_twouse_language_owl2fs_Annotation();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGAxiom();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DG_AXIOM__ANNOTATION, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    break loop92;
                }
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_8, 501));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_172, 501));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19170:2: (a3_0= parse_west_twouse_language_owl2fs_DGNodes )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19171:3: a3_0= parse_west_twouse_language_owl2fs_DGNodes
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DGNodes_in_parse_west_twouse_language_owl2fs_DGAxiom11669);
            a3_0=parse_west_twouse_language_owl2fs_DGNodes();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGAxiom();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DG_AXIOM__DG_NODES), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_289, 502));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19192:2: (a4_0= parse_west_twouse_language_owl2fs_DGEdges )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19193:3: a4_0= parse_west_twouse_language_owl2fs_DGEdges
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DGEdges_in_parse_west_twouse_language_owl2fs_DGAxiom11691);
            a4_0=parse_west_twouse_language_owl2fs_DGEdges();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGAxiom();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DG_AXIOM__DG_EDGES), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_290, 503));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19214:2: (a5_0= parse_west_twouse_language_owl2fs_MainClasses )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19215:3: a5_0= parse_west_twouse_language_owl2fs_MainClasses
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_MainClasses_in_parse_west_twouse_language_owl2fs_DGAxiom11713);
            a5_0=parse_west_twouse_language_owl2fs_MainClasses();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGAxiom();
              			}
              			if (a5_0 != null) {
              				if (a5_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.DG_AXIOM__MAIN_CLASSES), a5_0);
              					completedElement(a5_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a5_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_291, 504));
              	
            }
            a6=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DGAxiom11731); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGAxiom();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a6, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_1, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_9, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_10, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_11, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_12, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_13, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_14, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_15, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_16, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_17, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_18, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_19, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_20, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_21, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_22, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_23, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_24, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_25, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_26, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_27, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_28, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_29, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_30, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_31, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_32, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_33, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_34, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_35, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_36, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_37, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_38, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_39, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_40, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_41, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_42, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_43, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_44, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_45, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_46, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_47, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_48, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_49, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_50, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_51, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_52, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_53, 505));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_54, 505));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 92, parse_west_twouse_language_owl2fs_DGAxiom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DGAxiom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DGNodes"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19296:1: parse_west_twouse_language_owl2fs_DGNodes returns [west.twouse.language.owl2fs.DGNodes element = null] : a0= 'Nodes' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_NodeAssertion ) )+ a3= ')' ;
    public final west.twouse.language.owl2fs.DGNodes parse_west_twouse_language_owl2fs_DGNodes() throws RecognitionException {
        west.twouse.language.owl2fs.DGNodes element =  null;
        int parse_west_twouse_language_owl2fs_DGNodes_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        west.twouse.language.owl2fs.NodeAssertion a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 93) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19299:1: (a0= 'Nodes' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_NodeAssertion ) )+ a3= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19300:2: a0= 'Nodes' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_NodeAssertion ) )+ a3= ')'
            {
            a0=(Token)match(input,101,FOLLOW_101_in_parse_west_twouse_language_owl2fs_DGNodes11760); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGNodes();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_292, 506));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DGNodes11774); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGNodes();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_293, 507));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19324:2: ( (a2_0= parse_west_twouse_language_owl2fs_NodeAssertion ) )+
            int cnt93=0;
            loop93:
            do {
                int alt93=2;
                int LA93_0 = input.LA(1);

                if ( (LA93_0==102) ) {
                    alt93=1;
                }


                switch (alt93) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19325:3: (a2_0= parse_west_twouse_language_owl2fs_NodeAssertion )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19325:3: (a2_0= parse_west_twouse_language_owl2fs_NodeAssertion )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19326:4: a2_0= parse_west_twouse_language_owl2fs_NodeAssertion
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NodeAssertion_in_parse_west_twouse_language_owl2fs_DGNodes11797);
            	    a2_0=parse_west_twouse_language_owl2fs_NodeAssertion();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGNodes();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DG_NODES__NODE_ASSERTION, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt93 >= 1 ) break loop93;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(93, input);
                        throw eee;
                }
                cnt93++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_293, 508));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_294, 508));
              	
            }
            a3=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DGNodes11823); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGNodes();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_289, 509));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 93, parse_west_twouse_language_owl2fs_DGNodes_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DGNodes"


    // $ANTLR start "parse_west_twouse_language_owl2fs_NodeAssertion"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19363:1: parse_west_twouse_language_owl2fs_NodeAssertion returns [west.twouse.language.owl2fs.NodeAssertion element = null] : a0= 'NodeAssertion' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_Class ) (a3_0= parse_west_twouse_language_owl2fs_IRI ) a4= ')' ;
    public final west.twouse.language.owl2fs.NodeAssertion parse_west_twouse_language_owl2fs_NodeAssertion() throws RecognitionException {
        west.twouse.language.owl2fs.NodeAssertion element =  null;
        int parse_west_twouse_language_owl2fs_NodeAssertion_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a4=null;
        west.twouse.language.owl2fs.Class a2_0 = null;

        west.twouse.language.owl2fs.IRI a3_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 94) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19366:1: (a0= 'NodeAssertion' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_Class ) (a3_0= parse_west_twouse_language_owl2fs_IRI ) a4= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19367:2: a0= 'NodeAssertion' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_Class ) (a3_0= parse_west_twouse_language_owl2fs_IRI ) a4= ')'
            {
            a0=(Token)match(input,102,FOLLOW_102_in_parse_west_twouse_language_owl2fs_NodeAssertion11852); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNodeAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_295, 510));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_NodeAssertion11866); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNodeAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 511));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 511));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 511));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19393:2: (a2_0= parse_west_twouse_language_owl2fs_Class )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19394:3: a2_0= parse_west_twouse_language_owl2fs_Class
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Class_in_parse_west_twouse_language_owl2fs_NodeAssertion11884);
            a2_0=parse_west_twouse_language_owl2fs_Class();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNodeAssertion();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.NODE_ASSERTION__CLASS), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 512));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 512));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 512));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19417:2: (a3_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19418:3: a3_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_NodeAssertion11906);
            a3_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNodeAssertion();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.NODE_ASSERTION__DG_NODE), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_296, 513));
              	
            }
            a4=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_NodeAssertion11924); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createNodeAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a4, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_293, 514));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_294, 514));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 94, parse_west_twouse_language_owl2fs_NodeAssertion_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_NodeAssertion"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DGEdges"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19454:1: parse_west_twouse_language_owl2fs_DGEdges returns [west.twouse.language.owl2fs.DGEdges element = null] : a0= 'Edges' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_EdgeAssertion ) )+ a3= ')' ;
    public final west.twouse.language.owl2fs.DGEdges parse_west_twouse_language_owl2fs_DGEdges() throws RecognitionException {
        west.twouse.language.owl2fs.DGEdges element =  null;
        int parse_west_twouse_language_owl2fs_DGEdges_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        west.twouse.language.owl2fs.EdgeAssertion a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 95) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19457:1: (a0= 'Edges' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_EdgeAssertion ) )+ a3= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19458:2: a0= 'Edges' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_EdgeAssertion ) )+ a3= ')'
            {
            a0=(Token)match(input,103,FOLLOW_103_in_parse_west_twouse_language_owl2fs_DGEdges11953); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGEdges();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_297, 515));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_DGEdges11967); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGEdges();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_298, 516));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19482:2: ( (a2_0= parse_west_twouse_language_owl2fs_EdgeAssertion ) )+
            int cnt94=0;
            loop94:
            do {
                int alt94=2;
                int LA94_0 = input.LA(1);

                if ( (LA94_0==104) ) {
                    alt94=1;
                }


                switch (alt94) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19483:3: (a2_0= parse_west_twouse_language_owl2fs_EdgeAssertion )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19483:3: (a2_0= parse_west_twouse_language_owl2fs_EdgeAssertion )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19484:4: a2_0= parse_west_twouse_language_owl2fs_EdgeAssertion
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_EdgeAssertion_in_parse_west_twouse_language_owl2fs_DGEdges11990);
            	    a2_0=parse_west_twouse_language_owl2fs_EdgeAssertion();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGEdges();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.DG_EDGES__EDGE_ASSERTION, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt94 >= 1 ) break loop94;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(94, input);
                        throw eee;
                }
                cnt94++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_298, 517));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_299, 517));
              	
            }
            a3=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_DGEdges12016); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createDGEdges();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_290, 518));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 95, parse_west_twouse_language_owl2fs_DGEdges_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DGEdges"


    // $ANTLR start "parse_west_twouse_language_owl2fs_EdgeAssertion"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19521:1: parse_west_twouse_language_owl2fs_EdgeAssertion returns [west.twouse.language.owl2fs.EdgeAssertion element = null] : a0= 'EdgeAssertion' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectProperty ) (a3_0= parse_west_twouse_language_owl2fs_IRI ) (a4_0= parse_west_twouse_language_owl2fs_IRI ) a5= ')' ;
    public final west.twouse.language.owl2fs.EdgeAssertion parse_west_twouse_language_owl2fs_EdgeAssertion() throws RecognitionException {
        west.twouse.language.owl2fs.EdgeAssertion element =  null;
        int parse_west_twouse_language_owl2fs_EdgeAssertion_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a5=null;
        west.twouse.language.owl2fs.ObjectProperty a2_0 = null;

        west.twouse.language.owl2fs.IRI a3_0 = null;

        west.twouse.language.owl2fs.IRI a4_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 96) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19524:1: (a0= 'EdgeAssertion' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectProperty ) (a3_0= parse_west_twouse_language_owl2fs_IRI ) (a4_0= parse_west_twouse_language_owl2fs_IRI ) a5= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19525:2: a0= 'EdgeAssertion' a1= '(' (a2_0= parse_west_twouse_language_owl2fs_ObjectProperty ) (a3_0= parse_west_twouse_language_owl2fs_IRI ) (a4_0= parse_west_twouse_language_owl2fs_IRI ) a5= ')'
            {
            a0=(Token)match(input,104,FOLLOW_104_in_parse_west_twouse_language_owl2fs_EdgeAssertion12045); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEdgeAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_300, 519));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_EdgeAssertion12059); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEdgeAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 520));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 520));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 520));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19551:2: (a2_0= parse_west_twouse_language_owl2fs_ObjectProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19552:3: a2_0= parse_west_twouse_language_owl2fs_ObjectProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectProperty_in_parse_west_twouse_language_owl2fs_EdgeAssertion12077);
            a2_0=parse_west_twouse_language_owl2fs_ObjectProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEdgeAssertion();
              			}
              			if (a2_0 != null) {
              				if (a2_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.EDGE_ASSERTION__OBJECT_PROPERTY), a2_0);
              					completedElement(a2_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a2_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 521));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 521));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 521));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19575:2: (a3_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19576:3: a3_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_EdgeAssertion12099);
            a3_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEdgeAssertion();
              			}
              			if (a3_0 != null) {
              				if (a3_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.EDGE_ASSERTION__DG_NODE1), a3_0);
              					completedElement(a3_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a3_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 522));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 522));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 522));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19599:2: (a4_0= parse_west_twouse_language_owl2fs_IRI )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19600:3: a4_0= parse_west_twouse_language_owl2fs_IRI
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_EdgeAssertion12121);
            a4_0=parse_west_twouse_language_owl2fs_IRI();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {

              			if (terminateParsing) {
              				throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
              			}
              			if (element == null) {
              				element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEdgeAssertion();
              			}
              			if (a4_0 != null) {
              				if (a4_0 != null) {
              					element.eSet(element.eClass().getEStructuralFeature(west.twouse.language.owl2fs.Owl2fsPackage.EDGE_ASSERTION__DG_NODE2), a4_0);
              					completedElement(a4_0);
              				}
              				collectHiddenTokens(element);
              				copyLocalizationInfos(a4_0, element); 			}
              		
            }

            }

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_301, 523));
              	
            }
            a5=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_EdgeAssertion12139); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createEdgeAssertion();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a5, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_298, 524));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_299, 524));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 96, parse_west_twouse_language_owl2fs_EdgeAssertion_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_EdgeAssertion"


    // $ANTLR start "parse_west_twouse_language_owl2fs_MainClasses"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19636:1: parse_west_twouse_language_owl2fs_MainClasses returns [west.twouse.language.owl2fs.MainClasses element = null] : a0= 'MainClasses' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Class ) )+ a3= ')' ;
    public final west.twouse.language.owl2fs.MainClasses parse_west_twouse_language_owl2fs_MainClasses() throws RecognitionException {
        west.twouse.language.owl2fs.MainClasses element =  null;
        int parse_west_twouse_language_owl2fs_MainClasses_StartIndex = input.index();
        Token a0=null;
        Token a1=null;
        Token a3=null;
        west.twouse.language.owl2fs.Class a2_0 = null;




        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 97) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19639:1: (a0= 'MainClasses' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Class ) )+ a3= ')' )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19640:2: a0= 'MainClasses' a1= '(' ( (a2_0= parse_west_twouse_language_owl2fs_Class ) )+ a3= ')'
            {
            a0=(Token)match(input,105,FOLLOW_105_in_parse_west_twouse_language_owl2fs_MainClasses12168); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createMainClasses();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a0, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_302, 525));
              	
            }
            a1=(Token)match(input,16,FOLLOW_16_in_parse_west_twouse_language_owl2fs_MainClasses12182); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createMainClasses();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a1, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 526));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 526));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 526));
              	
            }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19666:2: ( (a2_0= parse_west_twouse_language_owl2fs_Class ) )+
            int cnt95=0;
            loop95:
            do {
                int alt95=2;
                int LA95_0 = input.LA(1);

                if ( ((LA95_0>=FULLIRI && LA95_0<=ABBRIRI)||LA95_0==14) ) {
                    alt95=1;
                }


                switch (alt95) {
            	case 1 :
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19667:3: (a2_0= parse_west_twouse_language_owl2fs_Class )
            	    {
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19667:3: (a2_0= parse_west_twouse_language_owl2fs_Class )
            	    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19668:4: a2_0= parse_west_twouse_language_owl2fs_Class
            	    {
            	    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Class_in_parse_west_twouse_language_owl2fs_MainClasses12205);
            	    a2_0=parse_west_twouse_language_owl2fs_Class();

            	    state._fsp--;
            	    if (state.failed) return element;
            	    if ( state.backtracking==0 ) {

            	      				if (terminateParsing) {
            	      					throw new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsTerminateParsingException();
            	      				}
            	      				if (element == null) {
            	      					element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createMainClasses();
            	      				}
            	      				if (a2_0 != null) {
            	      					if (a2_0 != null) {
            	      						addObjectToList(element, west.twouse.language.owl2fs.Owl2fsPackage.MAIN_CLASSES__CLASS, a2_0);
            	      						completedElement(a2_0);
            	      					}
            	      					collectHiddenTokens(element);
            	      					copyLocalizationInfos(a2_0, element); 				}
            	      			
            	    }

            	    }


            	    }
            	    break;

            	default :
            	    if ( cnt95 >= 1 ) break loop95;
            	    if (state.backtracking>0) {state.failed=true; return element;}
                        EarlyExitException eee =
                            new EarlyExitException(95, input);
                        throw eee;
                }
                cnt95++;
            } while (true);

            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_3, 527));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_5, 527));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_6, 527));
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_85, 527));
              	
            }
            a3=(Token)match(input,18,FOLLOW_18_in_parse_west_twouse_language_owl2fs_MainClasses12231); if (state.failed) return element;
            if ( state.backtracking==0 ) {

              		if (element == null) {
              			element = west.twouse.language.owl2fs.Owl2fsFactory.eINSTANCE.createMainClasses();
              		}
              		collectHiddenTokens(element);
              		copyLocalizationInfos((org.antlr.runtime.CommonToken)a3, element);
              	
            }
            if ( state.backtracking==0 ) {

              		// expected elements (follow set)
              		addExpectedElement(new west.twouse.language.owl2fs.resource.owl2fs.mopp.Owl2fsExpectedTerminal(TERMINAL_291, 528));
              	
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 97, parse_west_twouse_language_owl2fs_MainClasses_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_MainClasses"


    // $ANTLR start "parse_west_twouse_language_owl2fs_IRI"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19707:1: parse_west_twouse_language_owl2fs_IRI returns [west.twouse.language.owl2fs.IRI element = null] : (c0= parse_west_twouse_language_owl2fs_FullIRI | c1= parse_west_twouse_language_owl2fs_AbbreviatedIRI );
    public final west.twouse.language.owl2fs.IRI parse_west_twouse_language_owl2fs_IRI() throws RecognitionException {
        west.twouse.language.owl2fs.IRI element =  null;
        int parse_west_twouse_language_owl2fs_IRI_StartIndex = input.index();
        west.twouse.language.owl2fs.FullIRI c0 = null;

        west.twouse.language.owl2fs.AbbreviatedIRI c1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 98) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19708:1: (c0= parse_west_twouse_language_owl2fs_FullIRI | c1= parse_west_twouse_language_owl2fs_AbbreviatedIRI )
            int alt96=2;
            int LA96_0 = input.LA(1);

            if ( (LA96_0==FULLIRI) ) {
                alt96=1;
            }
            else if ( (LA96_0==ABBRIRI||LA96_0==14) ) {
                alt96=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 96, 0, input);

                throw nvae;
            }
            switch (alt96) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19709:2: c0= parse_west_twouse_language_owl2fs_FullIRI
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_FullIRI_in_parse_west_twouse_language_owl2fs_IRI12256);
                    c0=parse_west_twouse_language_owl2fs_FullIRI();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19710:4: c1= parse_west_twouse_language_owl2fs_AbbreviatedIRI
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AbbreviatedIRI_in_parse_west_twouse_language_owl2fs_IRI12266);
                    c1=parse_west_twouse_language_owl2fs_AbbreviatedIRI();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 98, parse_west_twouse_language_owl2fs_IRI_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_IRI"


    // $ANTLR start "parse_west_twouse_language_owl2fs_Axiom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19714:1: parse_west_twouse_language_owl2fs_Axiom returns [west.twouse.language.owl2fs.Axiom element = null] : (c0= parse_west_twouse_language_owl2fs_Comment | c1= parse_west_twouse_language_owl2fs_ClassDeclaration | c2= parse_west_twouse_language_owl2fs_DatatypeDeclaration | c3= parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration | c4= parse_west_twouse_language_owl2fs_DataPropertyDeclaration | c5= parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration | c6= parse_west_twouse_language_owl2fs_NamedIndividualDeclaration | c7= parse_west_twouse_language_owl2fs_AnnotationAssertion | c8= parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf | c9= parse_west_twouse_language_owl2fs_AnnotationPropertyDomain | c10= parse_west_twouse_language_owl2fs_AnnotationPropertyRange | c11= parse_west_twouse_language_owl2fs_SubClassOf | c12= parse_west_twouse_language_owl2fs_EquivalentClasses | c13= parse_west_twouse_language_owl2fs_DisjointClasses | c14= parse_west_twouse_language_owl2fs_DisjointUnion | c15= parse_west_twouse_language_owl2fs_SubObjectPropertyOf | c16= parse_west_twouse_language_owl2fs_EquivalentObjectProperties | c17= parse_west_twouse_language_owl2fs_DisjointObjectProperties | c18= parse_west_twouse_language_owl2fs_ObjectPropertyDomain | c19= parse_west_twouse_language_owl2fs_ObjectPropertyRange | c20= parse_west_twouse_language_owl2fs_InverseObjectProperties | c21= parse_west_twouse_language_owl2fs_FunctionalObjectProperty | c22= parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty | c23= parse_west_twouse_language_owl2fs_ReflexiveObjectProperty | c24= parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty | c25= parse_west_twouse_language_owl2fs_SymmetricObjectProperty | c26= parse_west_twouse_language_owl2fs_AsymmetricObjectProperty | c27= parse_west_twouse_language_owl2fs_TransitiveObjectProperty | c28= parse_west_twouse_language_owl2fs_SubDataPropertyOf | c29= parse_west_twouse_language_owl2fs_EquivalentDataProperties | c30= parse_west_twouse_language_owl2fs_DisjointDataProperties | c31= parse_west_twouse_language_owl2fs_DataPropertyDomain | c32= parse_west_twouse_language_owl2fs_DataPropertyRange | c33= parse_west_twouse_language_owl2fs_FunctionalDataProperty | c34= parse_west_twouse_language_owl2fs_DatatypeDefinition | c35= parse_west_twouse_language_owl2fs_HasKey | c36= parse_west_twouse_language_owl2fs_SameIndividual | c37= parse_west_twouse_language_owl2fs_DifferentIndividuals | c38= parse_west_twouse_language_owl2fs_ClassAssertion | c39= parse_west_twouse_language_owl2fs_ObjectPropertyAssertion | c40= parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion | c41= parse_west_twouse_language_owl2fs_DataPropertyAssertion | c42= parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion | c43= parse_west_twouse_language_owl2fs_DLSafeRule | c44= parse_west_twouse_language_owl2fs_DGRule | c45= parse_west_twouse_language_owl2fs_DGAxiom );
    public final west.twouse.language.owl2fs.Axiom parse_west_twouse_language_owl2fs_Axiom() throws RecognitionException {
        west.twouse.language.owl2fs.Axiom element =  null;
        int parse_west_twouse_language_owl2fs_Axiom_StartIndex = input.index();
        west.twouse.language.owl2fs.Comment c0 = null;

        west.twouse.language.owl2fs.ClassDeclaration c1 = null;

        west.twouse.language.owl2fs.DatatypeDeclaration c2 = null;

        west.twouse.language.owl2fs.ObjectPropertyDeclaration c3 = null;

        west.twouse.language.owl2fs.DataPropertyDeclaration c4 = null;

        west.twouse.language.owl2fs.AnnotationPropertyDeclaration c5 = null;

        west.twouse.language.owl2fs.NamedIndividualDeclaration c6 = null;

        west.twouse.language.owl2fs.AnnotationAssertion c7 = null;

        west.twouse.language.owl2fs.SubAnnotationPropertyOf c8 = null;

        west.twouse.language.owl2fs.AnnotationPropertyDomain c9 = null;

        west.twouse.language.owl2fs.AnnotationPropertyRange c10 = null;

        west.twouse.language.owl2fs.SubClassOf c11 = null;

        west.twouse.language.owl2fs.EquivalentClasses c12 = null;

        west.twouse.language.owl2fs.DisjointClasses c13 = null;

        west.twouse.language.owl2fs.DisjointUnion c14 = null;

        west.twouse.language.owl2fs.SubObjectPropertyOf c15 = null;

        west.twouse.language.owl2fs.EquivalentObjectProperties c16 = null;

        west.twouse.language.owl2fs.DisjointObjectProperties c17 = null;

        west.twouse.language.owl2fs.ObjectPropertyDomain c18 = null;

        west.twouse.language.owl2fs.ObjectPropertyRange c19 = null;

        west.twouse.language.owl2fs.InverseObjectProperties c20 = null;

        west.twouse.language.owl2fs.FunctionalObjectProperty c21 = null;

        west.twouse.language.owl2fs.InverseFunctionalObjectProperty c22 = null;

        west.twouse.language.owl2fs.ReflexiveObjectProperty c23 = null;

        west.twouse.language.owl2fs.IrreflexiveObjectProperty c24 = null;

        west.twouse.language.owl2fs.SymmetricObjectProperty c25 = null;

        west.twouse.language.owl2fs.AsymmetricObjectProperty c26 = null;

        west.twouse.language.owl2fs.TransitiveObjectProperty c27 = null;

        west.twouse.language.owl2fs.SubDataPropertyOf c28 = null;

        west.twouse.language.owl2fs.EquivalentDataProperties c29 = null;

        west.twouse.language.owl2fs.DisjointDataProperties c30 = null;

        west.twouse.language.owl2fs.DataPropertyDomain c31 = null;

        west.twouse.language.owl2fs.DataPropertyRange c32 = null;

        west.twouse.language.owl2fs.FunctionalDataProperty c33 = null;

        west.twouse.language.owl2fs.DatatypeDefinition c34 = null;

        west.twouse.language.owl2fs.HasKey c35 = null;

        west.twouse.language.owl2fs.SameIndividual c36 = null;

        west.twouse.language.owl2fs.DifferentIndividuals c37 = null;

        west.twouse.language.owl2fs.ClassAssertion c38 = null;

        west.twouse.language.owl2fs.ObjectPropertyAssertion c39 = null;

        west.twouse.language.owl2fs.NegativeObjectPropertyAssertion c40 = null;

        west.twouse.language.owl2fs.DataPropertyAssertion c41 = null;

        west.twouse.language.owl2fs.NegativeDataPropertyAssertion c42 = null;

        west.twouse.language.owl2fs.DLSafeRule c43 = null;

        west.twouse.language.owl2fs.DGRule c44 = null;

        west.twouse.language.owl2fs.DGAxiom c45 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 99) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19715:1: (c0= parse_west_twouse_language_owl2fs_Comment | c1= parse_west_twouse_language_owl2fs_ClassDeclaration | c2= parse_west_twouse_language_owl2fs_DatatypeDeclaration | c3= parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration | c4= parse_west_twouse_language_owl2fs_DataPropertyDeclaration | c5= parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration | c6= parse_west_twouse_language_owl2fs_NamedIndividualDeclaration | c7= parse_west_twouse_language_owl2fs_AnnotationAssertion | c8= parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf | c9= parse_west_twouse_language_owl2fs_AnnotationPropertyDomain | c10= parse_west_twouse_language_owl2fs_AnnotationPropertyRange | c11= parse_west_twouse_language_owl2fs_SubClassOf | c12= parse_west_twouse_language_owl2fs_EquivalentClasses | c13= parse_west_twouse_language_owl2fs_DisjointClasses | c14= parse_west_twouse_language_owl2fs_DisjointUnion | c15= parse_west_twouse_language_owl2fs_SubObjectPropertyOf | c16= parse_west_twouse_language_owl2fs_EquivalentObjectProperties | c17= parse_west_twouse_language_owl2fs_DisjointObjectProperties | c18= parse_west_twouse_language_owl2fs_ObjectPropertyDomain | c19= parse_west_twouse_language_owl2fs_ObjectPropertyRange | c20= parse_west_twouse_language_owl2fs_InverseObjectProperties | c21= parse_west_twouse_language_owl2fs_FunctionalObjectProperty | c22= parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty | c23= parse_west_twouse_language_owl2fs_ReflexiveObjectProperty | c24= parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty | c25= parse_west_twouse_language_owl2fs_SymmetricObjectProperty | c26= parse_west_twouse_language_owl2fs_AsymmetricObjectProperty | c27= parse_west_twouse_language_owl2fs_TransitiveObjectProperty | c28= parse_west_twouse_language_owl2fs_SubDataPropertyOf | c29= parse_west_twouse_language_owl2fs_EquivalentDataProperties | c30= parse_west_twouse_language_owl2fs_DisjointDataProperties | c31= parse_west_twouse_language_owl2fs_DataPropertyDomain | c32= parse_west_twouse_language_owl2fs_DataPropertyRange | c33= parse_west_twouse_language_owl2fs_FunctionalDataProperty | c34= parse_west_twouse_language_owl2fs_DatatypeDefinition | c35= parse_west_twouse_language_owl2fs_HasKey | c36= parse_west_twouse_language_owl2fs_SameIndividual | c37= parse_west_twouse_language_owl2fs_DifferentIndividuals | c38= parse_west_twouse_language_owl2fs_ClassAssertion | c39= parse_west_twouse_language_owl2fs_ObjectPropertyAssertion | c40= parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion | c41= parse_west_twouse_language_owl2fs_DataPropertyAssertion | c42= parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion | c43= parse_west_twouse_language_owl2fs_DLSafeRule | c44= parse_west_twouse_language_owl2fs_DGRule | c45= parse_west_twouse_language_owl2fs_DGAxiom )
            int alt97=46;
            alt97 = dfa97.predict(input);
            switch (alt97) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19716:2: c0= parse_west_twouse_language_owl2fs_Comment
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Axiom12287);
                    c0=parse_west_twouse_language_owl2fs_Comment();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19717:4: c1= parse_west_twouse_language_owl2fs_ClassDeclaration
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassDeclaration_in_parse_west_twouse_language_owl2fs_Axiom12297);
                    c1=parse_west_twouse_language_owl2fs_ClassDeclaration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19718:4: c2= parse_west_twouse_language_owl2fs_DatatypeDeclaration
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DatatypeDeclaration_in_parse_west_twouse_language_owl2fs_Axiom12307);
                    c2=parse_west_twouse_language_owl2fs_DatatypeDeclaration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19719:4: c3= parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration_in_parse_west_twouse_language_owl2fs_Axiom12317);
                    c3=parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19720:4: c4= parse_west_twouse_language_owl2fs_DataPropertyDeclaration
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyDeclaration_in_parse_west_twouse_language_owl2fs_Axiom12327);
                    c4=parse_west_twouse_language_owl2fs_DataPropertyDeclaration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19721:4: c5= parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration_in_parse_west_twouse_language_owl2fs_Axiom12337);
                    c5=parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19722:4: c6= parse_west_twouse_language_owl2fs_NamedIndividualDeclaration
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration_in_parse_west_twouse_language_owl2fs_Axiom12347);
                    c6=parse_west_twouse_language_owl2fs_NamedIndividualDeclaration();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19723:4: c7= parse_west_twouse_language_owl2fs_AnnotationAssertion
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationAssertion_in_parse_west_twouse_language_owl2fs_Axiom12357);
                    c7=parse_west_twouse_language_owl2fs_AnnotationAssertion();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19724:4: c8= parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf_in_parse_west_twouse_language_owl2fs_Axiom12367);
                    c8=parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19725:4: c9= parse_west_twouse_language_owl2fs_AnnotationPropertyDomain
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain_in_parse_west_twouse_language_owl2fs_Axiom12377);
                    c9=parse_west_twouse_language_owl2fs_AnnotationPropertyDomain();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19726:4: c10= parse_west_twouse_language_owl2fs_AnnotationPropertyRange
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationPropertyRange_in_parse_west_twouse_language_owl2fs_Axiom12387);
                    c10=parse_west_twouse_language_owl2fs_AnnotationPropertyRange();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 12 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19727:4: c11= parse_west_twouse_language_owl2fs_SubClassOf
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_SubClassOf_in_parse_west_twouse_language_owl2fs_Axiom12397);
                    c11=parse_west_twouse_language_owl2fs_SubClassOf();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c11; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 13 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19728:4: c12= parse_west_twouse_language_owl2fs_EquivalentClasses
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_EquivalentClasses_in_parse_west_twouse_language_owl2fs_Axiom12407);
                    c12=parse_west_twouse_language_owl2fs_EquivalentClasses();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c12; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 14 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19729:4: c13= parse_west_twouse_language_owl2fs_DisjointClasses
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DisjointClasses_in_parse_west_twouse_language_owl2fs_Axiom12417);
                    c13=parse_west_twouse_language_owl2fs_DisjointClasses();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c13; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 15 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19730:4: c14= parse_west_twouse_language_owl2fs_DisjointUnion
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DisjointUnion_in_parse_west_twouse_language_owl2fs_Axiom12427);
                    c14=parse_west_twouse_language_owl2fs_DisjointUnion();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c14; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 16 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19731:4: c15= parse_west_twouse_language_owl2fs_SubObjectPropertyOf
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_SubObjectPropertyOf_in_parse_west_twouse_language_owl2fs_Axiom12437);
                    c15=parse_west_twouse_language_owl2fs_SubObjectPropertyOf();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c15; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 17 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19732:4: c16= parse_west_twouse_language_owl2fs_EquivalentObjectProperties
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_EquivalentObjectProperties_in_parse_west_twouse_language_owl2fs_Axiom12447);
                    c16=parse_west_twouse_language_owl2fs_EquivalentObjectProperties();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c16; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 18 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19733:4: c17= parse_west_twouse_language_owl2fs_DisjointObjectProperties
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DisjointObjectProperties_in_parse_west_twouse_language_owl2fs_Axiom12457);
                    c17=parse_west_twouse_language_owl2fs_DisjointObjectProperties();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c17; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 19 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19734:4: c18= parse_west_twouse_language_owl2fs_ObjectPropertyDomain
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyDomain_in_parse_west_twouse_language_owl2fs_Axiom12467);
                    c18=parse_west_twouse_language_owl2fs_ObjectPropertyDomain();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c18; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 20 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19735:4: c19= parse_west_twouse_language_owl2fs_ObjectPropertyRange
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyRange_in_parse_west_twouse_language_owl2fs_Axiom12477);
                    c19=parse_west_twouse_language_owl2fs_ObjectPropertyRange();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c19; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 21 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19736:4: c20= parse_west_twouse_language_owl2fs_InverseObjectProperties
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_InverseObjectProperties_in_parse_west_twouse_language_owl2fs_Axiom12487);
                    c20=parse_west_twouse_language_owl2fs_InverseObjectProperties();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c20; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 22 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19737:4: c21= parse_west_twouse_language_owl2fs_FunctionalObjectProperty
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_FunctionalObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12497);
                    c21=parse_west_twouse_language_owl2fs_FunctionalObjectProperty();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c21; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 23 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19738:4: c22= parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12507);
                    c22=parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c22; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 24 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19739:4: c23= parse_west_twouse_language_owl2fs_ReflexiveObjectProperty
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ReflexiveObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12517);
                    c23=parse_west_twouse_language_owl2fs_ReflexiveObjectProperty();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c23; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 25 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19740:4: c24= parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12527);
                    c24=parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c24; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 26 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19741:4: c25= parse_west_twouse_language_owl2fs_SymmetricObjectProperty
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_SymmetricObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12537);
                    c25=parse_west_twouse_language_owl2fs_SymmetricObjectProperty();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c25; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 27 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19742:4: c26= parse_west_twouse_language_owl2fs_AsymmetricObjectProperty
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AsymmetricObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12547);
                    c26=parse_west_twouse_language_owl2fs_AsymmetricObjectProperty();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c26; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 28 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19743:4: c27= parse_west_twouse_language_owl2fs_TransitiveObjectProperty
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_TransitiveObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12557);
                    c27=parse_west_twouse_language_owl2fs_TransitiveObjectProperty();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c27; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 29 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19744:4: c28= parse_west_twouse_language_owl2fs_SubDataPropertyOf
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_SubDataPropertyOf_in_parse_west_twouse_language_owl2fs_Axiom12567);
                    c28=parse_west_twouse_language_owl2fs_SubDataPropertyOf();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c28; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 30 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19745:4: c29= parse_west_twouse_language_owl2fs_EquivalentDataProperties
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_EquivalentDataProperties_in_parse_west_twouse_language_owl2fs_Axiom12577);
                    c29=parse_west_twouse_language_owl2fs_EquivalentDataProperties();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c29; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 31 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19746:4: c30= parse_west_twouse_language_owl2fs_DisjointDataProperties
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DisjointDataProperties_in_parse_west_twouse_language_owl2fs_Axiom12587);
                    c30=parse_west_twouse_language_owl2fs_DisjointDataProperties();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c30; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 32 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19747:4: c31= parse_west_twouse_language_owl2fs_DataPropertyDomain
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyDomain_in_parse_west_twouse_language_owl2fs_Axiom12597);
                    c31=parse_west_twouse_language_owl2fs_DataPropertyDomain();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c31; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 33 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19748:4: c32= parse_west_twouse_language_owl2fs_DataPropertyRange
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyRange_in_parse_west_twouse_language_owl2fs_Axiom12607);
                    c32=parse_west_twouse_language_owl2fs_DataPropertyRange();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c32; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 34 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19749:4: c33= parse_west_twouse_language_owl2fs_FunctionalDataProperty
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_FunctionalDataProperty_in_parse_west_twouse_language_owl2fs_Axiom12617);
                    c33=parse_west_twouse_language_owl2fs_FunctionalDataProperty();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c33; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 35 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19750:4: c34= parse_west_twouse_language_owl2fs_DatatypeDefinition
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DatatypeDefinition_in_parse_west_twouse_language_owl2fs_Axiom12627);
                    c34=parse_west_twouse_language_owl2fs_DatatypeDefinition();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c34; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 36 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19751:4: c35= parse_west_twouse_language_owl2fs_HasKey
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_HasKey_in_parse_west_twouse_language_owl2fs_Axiom12637);
                    c35=parse_west_twouse_language_owl2fs_HasKey();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c35; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 37 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19752:4: c36= parse_west_twouse_language_owl2fs_SameIndividual
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_SameIndividual_in_parse_west_twouse_language_owl2fs_Axiom12647);
                    c36=parse_west_twouse_language_owl2fs_SameIndividual();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c36; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 38 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19753:4: c37= parse_west_twouse_language_owl2fs_DifferentIndividuals
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DifferentIndividuals_in_parse_west_twouse_language_owl2fs_Axiom12657);
                    c37=parse_west_twouse_language_owl2fs_DifferentIndividuals();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c37; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 39 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19754:4: c38= parse_west_twouse_language_owl2fs_ClassAssertion
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassAssertion_in_parse_west_twouse_language_owl2fs_Axiom12667);
                    c38=parse_west_twouse_language_owl2fs_ClassAssertion();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c38; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 40 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19755:4: c39= parse_west_twouse_language_owl2fs_ObjectPropertyAssertion
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion_in_parse_west_twouse_language_owl2fs_Axiom12677);
                    c39=parse_west_twouse_language_owl2fs_ObjectPropertyAssertion();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c39; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 41 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19756:4: c40= parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion_in_parse_west_twouse_language_owl2fs_Axiom12687);
                    c40=parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c40; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 42 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19757:4: c41= parse_west_twouse_language_owl2fs_DataPropertyAssertion
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyAssertion_in_parse_west_twouse_language_owl2fs_Axiom12697);
                    c41=parse_west_twouse_language_owl2fs_DataPropertyAssertion();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c41; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 43 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19758:4: c42= parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion_in_parse_west_twouse_language_owl2fs_Axiom12707);
                    c42=parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c42; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 44 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19759:4: c43= parse_west_twouse_language_owl2fs_DLSafeRule
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DLSafeRule_in_parse_west_twouse_language_owl2fs_Axiom12717);
                    c43=parse_west_twouse_language_owl2fs_DLSafeRule();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c43; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 45 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19760:4: c44= parse_west_twouse_language_owl2fs_DGRule
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DGRule_in_parse_west_twouse_language_owl2fs_Axiom12727);
                    c44=parse_west_twouse_language_owl2fs_DGRule();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c44; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 46 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19761:4: c45= parse_west_twouse_language_owl2fs_DGAxiom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DGAxiom_in_parse_west_twouse_language_owl2fs_Axiom12737);
                    c45=parse_west_twouse_language_owl2fs_DGAxiom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c45; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 99, parse_west_twouse_language_owl2fs_Axiom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_Axiom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_AnnotationSubject"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19765:1: parse_west_twouse_language_owl2fs_AnnotationSubject returns [west.twouse.language.owl2fs.AnnotationSubject element = null] : (c0= parse_west_twouse_language_owl2fs_FullIRI | c1= parse_west_twouse_language_owl2fs_AbbreviatedIRI | c2= parse_west_twouse_language_owl2fs_AnonymousIndividual );
    public final west.twouse.language.owl2fs.AnnotationSubject parse_west_twouse_language_owl2fs_AnnotationSubject() throws RecognitionException {
        west.twouse.language.owl2fs.AnnotationSubject element =  null;
        int parse_west_twouse_language_owl2fs_AnnotationSubject_StartIndex = input.index();
        west.twouse.language.owl2fs.FullIRI c0 = null;

        west.twouse.language.owl2fs.AbbreviatedIRI c1 = null;

        west.twouse.language.owl2fs.AnonymousIndividual c2 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 100) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19766:1: (c0= parse_west_twouse_language_owl2fs_FullIRI | c1= parse_west_twouse_language_owl2fs_AbbreviatedIRI | c2= parse_west_twouse_language_owl2fs_AnonymousIndividual )
            int alt98=3;
            switch ( input.LA(1) ) {
            case FULLIRI:
                {
                alt98=1;
                }
                break;
            case ABBRIRI:
            case 14:
                {
                alt98=2;
                }
                break;
            case NODE:
                {
                alt98=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 98, 0, input);

                throw nvae;
            }

            switch (alt98) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19767:2: c0= parse_west_twouse_language_owl2fs_FullIRI
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_FullIRI_in_parse_west_twouse_language_owl2fs_AnnotationSubject12758);
                    c0=parse_west_twouse_language_owl2fs_FullIRI();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19768:4: c1= parse_west_twouse_language_owl2fs_AbbreviatedIRI
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AbbreviatedIRI_in_parse_west_twouse_language_owl2fs_AnnotationSubject12768);
                    c1=parse_west_twouse_language_owl2fs_AbbreviatedIRI();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19769:4: c2= parse_west_twouse_language_owl2fs_AnonymousIndividual
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnonymousIndividual_in_parse_west_twouse_language_owl2fs_AnnotationSubject12778);
                    c2=parse_west_twouse_language_owl2fs_AnonymousIndividual();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 100, parse_west_twouse_language_owl2fs_AnnotationSubject_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_AnnotationSubject"


    // $ANTLR start "parse_west_twouse_language_owl2fs_AnnotationValue"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19773:1: parse_west_twouse_language_owl2fs_AnnotationValue returns [west.twouse.language.owl2fs.AnnotationValue element = null] : (c0= parse_west_twouse_language_owl2fs_FullIRI | c1= parse_west_twouse_language_owl2fs_AbbreviatedIRI | c2= parse_west_twouse_language_owl2fs_AnonymousIndividual | c3= parse_west_twouse_language_owl2fs_Literal );
    public final west.twouse.language.owl2fs.AnnotationValue parse_west_twouse_language_owl2fs_AnnotationValue() throws RecognitionException {
        west.twouse.language.owl2fs.AnnotationValue element =  null;
        int parse_west_twouse_language_owl2fs_AnnotationValue_StartIndex = input.index();
        west.twouse.language.owl2fs.FullIRI c0 = null;

        west.twouse.language.owl2fs.AbbreviatedIRI c1 = null;

        west.twouse.language.owl2fs.AnonymousIndividual c2 = null;

        west.twouse.language.owl2fs.Literal c3 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 101) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19774:1: (c0= parse_west_twouse_language_owl2fs_FullIRI | c1= parse_west_twouse_language_owl2fs_AbbreviatedIRI | c2= parse_west_twouse_language_owl2fs_AnonymousIndividual | c3= parse_west_twouse_language_owl2fs_Literal )
            int alt99=4;
            switch ( input.LA(1) ) {
            case FULLIRI:
                {
                alt99=1;
                }
                break;
            case ABBRIRI:
            case 14:
                {
                alt99=2;
                }
                break;
            case NODE:
                {
                alt99=3;
                }
                break;
            case LITERAL:
                {
                alt99=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 99, 0, input);

                throw nvae;
            }

            switch (alt99) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19775:2: c0= parse_west_twouse_language_owl2fs_FullIRI
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_FullIRI_in_parse_west_twouse_language_owl2fs_AnnotationValue12799);
                    c0=parse_west_twouse_language_owl2fs_FullIRI();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19776:4: c1= parse_west_twouse_language_owl2fs_AbbreviatedIRI
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AbbreviatedIRI_in_parse_west_twouse_language_owl2fs_AnnotationValue12809);
                    c1=parse_west_twouse_language_owl2fs_AbbreviatedIRI();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19777:4: c2= parse_west_twouse_language_owl2fs_AnonymousIndividual
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnonymousIndividual_in_parse_west_twouse_language_owl2fs_AnnotationValue12819);
                    c2=parse_west_twouse_language_owl2fs_AnonymousIndividual();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19778:4: c3= parse_west_twouse_language_owl2fs_Literal
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_AnnotationValue12829);
                    c3=parse_west_twouse_language_owl2fs_Literal();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 101, parse_west_twouse_language_owl2fs_AnnotationValue_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_AnnotationValue"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataRange"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19782:1: parse_west_twouse_language_owl2fs_DataRange returns [west.twouse.language.owl2fs.DataRange element = null] : (c0= parse_west_twouse_language_owl2fs_Datatype | c1= parse_west_twouse_language_owl2fs_DataComplementOf | c2= parse_west_twouse_language_owl2fs_DataOneOf | c3= parse_west_twouse_language_owl2fs_DatatypeRestriction );
    public final west.twouse.language.owl2fs.DataRange parse_west_twouse_language_owl2fs_DataRange() throws RecognitionException {
        west.twouse.language.owl2fs.DataRange element =  null;
        int parse_west_twouse_language_owl2fs_DataRange_StartIndex = input.index();
        west.twouse.language.owl2fs.Datatype c0 = null;

        west.twouse.language.owl2fs.DataComplementOf c1 = null;

        west.twouse.language.owl2fs.DataOneOf c2 = null;

        west.twouse.language.owl2fs.DatatypeRestriction c3 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 102) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19783:1: (c0= parse_west_twouse_language_owl2fs_Datatype | c1= parse_west_twouse_language_owl2fs_DataComplementOf | c2= parse_west_twouse_language_owl2fs_DataOneOf | c3= parse_west_twouse_language_owl2fs_DatatypeRestriction )
            int alt100=4;
            switch ( input.LA(1) ) {
            case FULLIRI:
            case ABBRIRI:
            case 14:
                {
                alt100=1;
                }
                break;
            case 35:
                {
                alt100=2;
                }
                break;
            case 36:
                {
                alt100=3;
                }
                break;
            case 37:
                {
                alt100=4;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 100, 0, input);

                throw nvae;
            }

            switch (alt100) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19784:2: c0= parse_west_twouse_language_owl2fs_Datatype
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Datatype_in_parse_west_twouse_language_owl2fs_DataRange12850);
                    c0=parse_west_twouse_language_owl2fs_Datatype();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19785:4: c1= parse_west_twouse_language_owl2fs_DataComplementOf
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataComplementOf_in_parse_west_twouse_language_owl2fs_DataRange12860);
                    c1=parse_west_twouse_language_owl2fs_DataComplementOf();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19786:4: c2= parse_west_twouse_language_owl2fs_DataOneOf
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataOneOf_in_parse_west_twouse_language_owl2fs_DataRange12870);
                    c2=parse_west_twouse_language_owl2fs_DataOneOf();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19787:4: c3= parse_west_twouse_language_owl2fs_DatatypeRestriction
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DatatypeRestriction_in_parse_west_twouse_language_owl2fs_DataRange12880);
                    c3=parse_west_twouse_language_owl2fs_DatatypeRestriction();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 102, parse_west_twouse_language_owl2fs_DataRange_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataRange"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ClassExpression"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19791:1: parse_west_twouse_language_owl2fs_ClassExpression returns [west.twouse.language.owl2fs.ClassExpression element = null] : (c0= parse_west_twouse_language_owl2fs_Class | c1= parse_west_twouse_language_owl2fs_ObjectIntersectionOf | c2= parse_west_twouse_language_owl2fs_ObjectUnionOf | c3= parse_west_twouse_language_owl2fs_ObjectComplementOf | c4= parse_west_twouse_language_owl2fs_ObjectOneOf | c5= parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom | c6= parse_west_twouse_language_owl2fs_ObjectAllValuesFrom | c7= parse_west_twouse_language_owl2fs_ObjectHasValue | c8= parse_west_twouse_language_owl2fs_ObjectHasSelf | c9= parse_west_twouse_language_owl2fs_ObjectMinCardinality | c10= parse_west_twouse_language_owl2fs_ObjectMaxCardinality | c11= parse_west_twouse_language_owl2fs_ObjectExactCardinality | c12= parse_west_twouse_language_owl2fs_DataSomeValuesFrom | c13= parse_west_twouse_language_owl2fs_DataAllValuesFrom | c14= parse_west_twouse_language_owl2fs_DataHasValue | c15= parse_west_twouse_language_owl2fs_DataMinCardinality | c16= parse_west_twouse_language_owl2fs_DataMaxCardinality | c17= parse_west_twouse_language_owl2fs_DataExactCardinality );
    public final west.twouse.language.owl2fs.ClassExpression parse_west_twouse_language_owl2fs_ClassExpression() throws RecognitionException {
        west.twouse.language.owl2fs.ClassExpression element =  null;
        int parse_west_twouse_language_owl2fs_ClassExpression_StartIndex = input.index();
        west.twouse.language.owl2fs.Class c0 = null;

        west.twouse.language.owl2fs.ObjectIntersectionOf c1 = null;

        west.twouse.language.owl2fs.ObjectUnionOf c2 = null;

        west.twouse.language.owl2fs.ObjectComplementOf c3 = null;

        west.twouse.language.owl2fs.ObjectOneOf c4 = null;

        west.twouse.language.owl2fs.ObjectSomeValuesFrom c5 = null;

        west.twouse.language.owl2fs.ObjectAllValuesFrom c6 = null;

        west.twouse.language.owl2fs.ObjectHasValue c7 = null;

        west.twouse.language.owl2fs.ObjectHasSelf c8 = null;

        west.twouse.language.owl2fs.ObjectMinCardinality c9 = null;

        west.twouse.language.owl2fs.ObjectMaxCardinality c10 = null;

        west.twouse.language.owl2fs.ObjectExactCardinality c11 = null;

        west.twouse.language.owl2fs.DataSomeValuesFrom c12 = null;

        west.twouse.language.owl2fs.DataAllValuesFrom c13 = null;

        west.twouse.language.owl2fs.DataHasValue c14 = null;

        west.twouse.language.owl2fs.DataMinCardinality c15 = null;

        west.twouse.language.owl2fs.DataMaxCardinality c16 = null;

        west.twouse.language.owl2fs.DataExactCardinality c17 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 103) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19792:1: (c0= parse_west_twouse_language_owl2fs_Class | c1= parse_west_twouse_language_owl2fs_ObjectIntersectionOf | c2= parse_west_twouse_language_owl2fs_ObjectUnionOf | c3= parse_west_twouse_language_owl2fs_ObjectComplementOf | c4= parse_west_twouse_language_owl2fs_ObjectOneOf | c5= parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom | c6= parse_west_twouse_language_owl2fs_ObjectAllValuesFrom | c7= parse_west_twouse_language_owl2fs_ObjectHasValue | c8= parse_west_twouse_language_owl2fs_ObjectHasSelf | c9= parse_west_twouse_language_owl2fs_ObjectMinCardinality | c10= parse_west_twouse_language_owl2fs_ObjectMaxCardinality | c11= parse_west_twouse_language_owl2fs_ObjectExactCardinality | c12= parse_west_twouse_language_owl2fs_DataSomeValuesFrom | c13= parse_west_twouse_language_owl2fs_DataAllValuesFrom | c14= parse_west_twouse_language_owl2fs_DataHasValue | c15= parse_west_twouse_language_owl2fs_DataMinCardinality | c16= parse_west_twouse_language_owl2fs_DataMaxCardinality | c17= parse_west_twouse_language_owl2fs_DataExactCardinality )
            int alt101=18;
            switch ( input.LA(1) ) {
            case FULLIRI:
            case ABBRIRI:
            case 14:
                {
                alt101=1;
                }
                break;
            case 38:
                {
                alt101=2;
                }
                break;
            case 39:
                {
                alt101=3;
                }
                break;
            case 40:
                {
                alt101=4;
                }
                break;
            case 41:
                {
                alt101=5;
                }
                break;
            case 42:
                {
                alt101=6;
                }
                break;
            case 43:
                {
                alt101=7;
                }
                break;
            case 44:
                {
                alt101=8;
                }
                break;
            case 45:
                {
                alt101=9;
                }
                break;
            case 46:
                {
                alt101=10;
                }
                break;
            case 47:
                {
                alt101=11;
                }
                break;
            case 48:
                {
                alt101=12;
                }
                break;
            case 49:
                {
                alt101=13;
                }
                break;
            case 50:
                {
                alt101=14;
                }
                break;
            case 51:
                {
                alt101=15;
                }
                break;
            case 52:
                {
                alt101=16;
                }
                break;
            case 53:
                {
                alt101=17;
                }
                break;
            case 54:
                {
                alt101=18;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 101, 0, input);

                throw nvae;
            }

            switch (alt101) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19793:2: c0= parse_west_twouse_language_owl2fs_Class
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Class_in_parse_west_twouse_language_owl2fs_ClassExpression12901);
                    c0=parse_west_twouse_language_owl2fs_Class();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19794:4: c1= parse_west_twouse_language_owl2fs_ObjectIntersectionOf
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectIntersectionOf_in_parse_west_twouse_language_owl2fs_ClassExpression12911);
                    c1=parse_west_twouse_language_owl2fs_ObjectIntersectionOf();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19795:4: c2= parse_west_twouse_language_owl2fs_ObjectUnionOf
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectUnionOf_in_parse_west_twouse_language_owl2fs_ClassExpression12921);
                    c2=parse_west_twouse_language_owl2fs_ObjectUnionOf();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19796:4: c3= parse_west_twouse_language_owl2fs_ObjectComplementOf
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectComplementOf_in_parse_west_twouse_language_owl2fs_ClassExpression12931);
                    c3=parse_west_twouse_language_owl2fs_ObjectComplementOf();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19797:4: c4= parse_west_twouse_language_owl2fs_ObjectOneOf
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectOneOf_in_parse_west_twouse_language_owl2fs_ClassExpression12941);
                    c4=parse_west_twouse_language_owl2fs_ObjectOneOf();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19798:4: c5= parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom_in_parse_west_twouse_language_owl2fs_ClassExpression12951);
                    c5=parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19799:4: c6= parse_west_twouse_language_owl2fs_ObjectAllValuesFrom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectAllValuesFrom_in_parse_west_twouse_language_owl2fs_ClassExpression12961);
                    c6=parse_west_twouse_language_owl2fs_ObjectAllValuesFrom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 8 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19800:4: c7= parse_west_twouse_language_owl2fs_ObjectHasValue
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectHasValue_in_parse_west_twouse_language_owl2fs_ClassExpression12971);
                    c7=parse_west_twouse_language_owl2fs_ObjectHasValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c7; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 9 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19801:4: c8= parse_west_twouse_language_owl2fs_ObjectHasSelf
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectHasSelf_in_parse_west_twouse_language_owl2fs_ClassExpression12981);
                    c8=parse_west_twouse_language_owl2fs_ObjectHasSelf();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c8; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 10 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19802:4: c9= parse_west_twouse_language_owl2fs_ObjectMinCardinality
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectMinCardinality_in_parse_west_twouse_language_owl2fs_ClassExpression12991);
                    c9=parse_west_twouse_language_owl2fs_ObjectMinCardinality();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c9; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 11 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19803:4: c10= parse_west_twouse_language_owl2fs_ObjectMaxCardinality
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectMaxCardinality_in_parse_west_twouse_language_owl2fs_ClassExpression13001);
                    c10=parse_west_twouse_language_owl2fs_ObjectMaxCardinality();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c10; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 12 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19804:4: c11= parse_west_twouse_language_owl2fs_ObjectExactCardinality
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectExactCardinality_in_parse_west_twouse_language_owl2fs_ClassExpression13011);
                    c11=parse_west_twouse_language_owl2fs_ObjectExactCardinality();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c11; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 13 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19805:4: c12= parse_west_twouse_language_owl2fs_DataSomeValuesFrom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataSomeValuesFrom_in_parse_west_twouse_language_owl2fs_ClassExpression13021);
                    c12=parse_west_twouse_language_owl2fs_DataSomeValuesFrom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c12; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 14 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19806:4: c13= parse_west_twouse_language_owl2fs_DataAllValuesFrom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataAllValuesFrom_in_parse_west_twouse_language_owl2fs_ClassExpression13031);
                    c13=parse_west_twouse_language_owl2fs_DataAllValuesFrom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c13; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 15 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19807:4: c14= parse_west_twouse_language_owl2fs_DataHasValue
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataHasValue_in_parse_west_twouse_language_owl2fs_ClassExpression13041);
                    c14=parse_west_twouse_language_owl2fs_DataHasValue();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c14; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 16 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19808:4: c15= parse_west_twouse_language_owl2fs_DataMinCardinality
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataMinCardinality_in_parse_west_twouse_language_owl2fs_ClassExpression13051);
                    c15=parse_west_twouse_language_owl2fs_DataMinCardinality();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c15; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 17 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19809:4: c16= parse_west_twouse_language_owl2fs_DataMaxCardinality
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataMaxCardinality_in_parse_west_twouse_language_owl2fs_ClassExpression13061);
                    c16=parse_west_twouse_language_owl2fs_DataMaxCardinality();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c16; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 18 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19810:4: c17= parse_west_twouse_language_owl2fs_DataExactCardinality
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataExactCardinality_in_parse_west_twouse_language_owl2fs_ClassExpression13071);
                    c17=parse_west_twouse_language_owl2fs_DataExactCardinality();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c17; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 103, parse_west_twouse_language_owl2fs_ClassExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ClassExpression"


    // $ANTLR start "parse_west_twouse_language_owl2fs_Individual"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19814:1: parse_west_twouse_language_owl2fs_Individual returns [west.twouse.language.owl2fs.Individual element = null] : (c0= parse_west_twouse_language_owl2fs_NamedIndividual | c1= parse_west_twouse_language_owl2fs_AnonymousIndividual );
    public final west.twouse.language.owl2fs.Individual parse_west_twouse_language_owl2fs_Individual() throws RecognitionException {
        west.twouse.language.owl2fs.Individual element =  null;
        int parse_west_twouse_language_owl2fs_Individual_StartIndex = input.index();
        west.twouse.language.owl2fs.NamedIndividual c0 = null;

        west.twouse.language.owl2fs.AnonymousIndividual c1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 104) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19815:1: (c0= parse_west_twouse_language_owl2fs_NamedIndividual | c1= parse_west_twouse_language_owl2fs_AnonymousIndividual )
            int alt102=2;
            int LA102_0 = input.LA(1);

            if ( ((LA102_0>=FULLIRI && LA102_0<=ABBRIRI)||LA102_0==14) ) {
                alt102=1;
            }
            else if ( (LA102_0==NODE) ) {
                alt102=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 102, 0, input);

                throw nvae;
            }
            switch (alt102) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19816:2: c0= parse_west_twouse_language_owl2fs_NamedIndividual
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_Individual13092);
                    c0=parse_west_twouse_language_owl2fs_NamedIndividual();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19817:4: c1= parse_west_twouse_language_owl2fs_AnonymousIndividual
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnonymousIndividual_in_parse_west_twouse_language_owl2fs_Individual13102);
                    c1=parse_west_twouse_language_owl2fs_AnonymousIndividual();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 104, parse_west_twouse_language_owl2fs_Individual_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_Individual"


    // $ANTLR start "parse_west_twouse_language_owl2fs_ObjectPropertyExpression"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19821:1: parse_west_twouse_language_owl2fs_ObjectPropertyExpression returns [west.twouse.language.owl2fs.ObjectPropertyExpression element = null] : (c0= parse_west_twouse_language_owl2fs_ObjectProperty | c1= parse_west_twouse_language_owl2fs_InverseObjectProperty );
    public final west.twouse.language.owl2fs.ObjectPropertyExpression parse_west_twouse_language_owl2fs_ObjectPropertyExpression() throws RecognitionException {
        west.twouse.language.owl2fs.ObjectPropertyExpression element =  null;
        int parse_west_twouse_language_owl2fs_ObjectPropertyExpression_StartIndex = input.index();
        west.twouse.language.owl2fs.ObjectProperty c0 = null;

        west.twouse.language.owl2fs.InverseObjectProperty c1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 105) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19822:1: (c0= parse_west_twouse_language_owl2fs_ObjectProperty | c1= parse_west_twouse_language_owl2fs_InverseObjectProperty )
            int alt103=2;
            int LA103_0 = input.LA(1);

            if ( ((LA103_0>=FULLIRI && LA103_0<=ABBRIRI)||LA103_0==14) ) {
                alt103=1;
            }
            else if ( (LA103_0==34) ) {
                alt103=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 103, 0, input);

                throw nvae;
            }
            switch (alt103) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19823:2: c0= parse_west_twouse_language_owl2fs_ObjectProperty
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectProperty_in_parse_west_twouse_language_owl2fs_ObjectPropertyExpression13123);
                    c0=parse_west_twouse_language_owl2fs_ObjectProperty();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19824:4: c1= parse_west_twouse_language_owl2fs_InverseObjectProperty
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_InverseObjectProperty_in_parse_west_twouse_language_owl2fs_ObjectPropertyExpression13133);
                    c1=parse_west_twouse_language_owl2fs_InverseObjectProperty();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 105, parse_west_twouse_language_owl2fs_ObjectPropertyExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_ObjectPropertyExpression"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DataPropertyExpression"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19828:1: parse_west_twouse_language_owl2fs_DataPropertyExpression returns [west.twouse.language.owl2fs.DataPropertyExpression element = null] : c0= parse_west_twouse_language_owl2fs_DataProperty ;
    public final west.twouse.language.owl2fs.DataPropertyExpression parse_west_twouse_language_owl2fs_DataPropertyExpression() throws RecognitionException {
        west.twouse.language.owl2fs.DataPropertyExpression element =  null;
        int parse_west_twouse_language_owl2fs_DataPropertyExpression_StartIndex = input.index();
        west.twouse.language.owl2fs.DataProperty c0 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 106) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19829:1: (c0= parse_west_twouse_language_owl2fs_DataProperty )
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19830:2: c0= parse_west_twouse_language_owl2fs_DataProperty
            {
            pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataProperty_in_parse_west_twouse_language_owl2fs_DataPropertyExpression13154);
            c0=parse_west_twouse_language_owl2fs_DataProperty();

            state._fsp--;
            if (state.failed) return element;
            if ( state.backtracking==0 ) {
               element = c0; /* this is a subclass choice */ 
            }

            }

        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 106, parse_west_twouse_language_owl2fs_DataPropertyExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DataPropertyExpression"


    // $ANTLR start "parse_west_twouse_language_owl2fs_SubObjectPropertyExpression"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19834:1: parse_west_twouse_language_owl2fs_SubObjectPropertyExpression returns [west.twouse.language.owl2fs.SubObjectPropertyExpression element = null] : (c0= parse_west_twouse_language_owl2fs_ObjectProperty | c1= parse_west_twouse_language_owl2fs_InverseObjectProperty | c2= parse_west_twouse_language_owl2fs_ObjectPropertyChain );
    public final west.twouse.language.owl2fs.SubObjectPropertyExpression parse_west_twouse_language_owl2fs_SubObjectPropertyExpression() throws RecognitionException {
        west.twouse.language.owl2fs.SubObjectPropertyExpression element =  null;
        int parse_west_twouse_language_owl2fs_SubObjectPropertyExpression_StartIndex = input.index();
        west.twouse.language.owl2fs.ObjectProperty c0 = null;

        west.twouse.language.owl2fs.InverseObjectProperty c1 = null;

        west.twouse.language.owl2fs.ObjectPropertyChain c2 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 107) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19835:1: (c0= parse_west_twouse_language_owl2fs_ObjectProperty | c1= parse_west_twouse_language_owl2fs_InverseObjectProperty | c2= parse_west_twouse_language_owl2fs_ObjectPropertyChain )
            int alt104=3;
            switch ( input.LA(1) ) {
            case FULLIRI:
            case ABBRIRI:
            case 14:
                {
                alt104=1;
                }
                break;
            case 34:
                {
                alt104=2;
                }
                break;
            case 60:
                {
                alt104=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 104, 0, input);

                throw nvae;
            }

            switch (alt104) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19836:2: c0= parse_west_twouse_language_owl2fs_ObjectProperty
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectProperty_in_parse_west_twouse_language_owl2fs_SubObjectPropertyExpression13175);
                    c0=parse_west_twouse_language_owl2fs_ObjectProperty();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19837:4: c1= parse_west_twouse_language_owl2fs_InverseObjectProperty
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_InverseObjectProperty_in_parse_west_twouse_language_owl2fs_SubObjectPropertyExpression13185);
                    c1=parse_west_twouse_language_owl2fs_InverseObjectProperty();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19838:4: c2= parse_west_twouse_language_owl2fs_ObjectPropertyChain
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyChain_in_parse_west_twouse_language_owl2fs_SubObjectPropertyExpression13195);
                    c2=parse_west_twouse_language_owl2fs_ObjectPropertyChain();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 107, parse_west_twouse_language_owl2fs_SubObjectPropertyExpression_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_SubObjectPropertyExpression"


    // $ANTLR start "parse_west_twouse_language_owl2fs_Atom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19842:1: parse_west_twouse_language_owl2fs_Atom returns [west.twouse.language.owl2fs.Atom element = null] : (c0= parse_west_twouse_language_owl2fs_ClassAtom | c1= parse_west_twouse_language_owl2fs_DataRangeAtom | c2= parse_west_twouse_language_owl2fs_ObjectPropertyAtom | c3= parse_west_twouse_language_owl2fs_DataPropetyAtom | c4= parse_west_twouse_language_owl2fs_BuiltInAtom | c5= parse_west_twouse_language_owl2fs_SameIndividualAtom | c6= parse_west_twouse_language_owl2fs_DifferentIndividualsAtom );
    public final west.twouse.language.owl2fs.Atom parse_west_twouse_language_owl2fs_Atom() throws RecognitionException {
        west.twouse.language.owl2fs.Atom element =  null;
        int parse_west_twouse_language_owl2fs_Atom_StartIndex = input.index();
        west.twouse.language.owl2fs.ClassAtom c0 = null;

        west.twouse.language.owl2fs.DataRangeAtom c1 = null;

        west.twouse.language.owl2fs.ObjectPropertyAtom c2 = null;

        west.twouse.language.owl2fs.DataPropetyAtom c3 = null;

        west.twouse.language.owl2fs.BuiltInAtom c4 = null;

        west.twouse.language.owl2fs.SameIndividualAtom c5 = null;

        west.twouse.language.owl2fs.DifferentIndividualsAtom c6 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 108) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19843:1: (c0= parse_west_twouse_language_owl2fs_ClassAtom | c1= parse_west_twouse_language_owl2fs_DataRangeAtom | c2= parse_west_twouse_language_owl2fs_ObjectPropertyAtom | c3= parse_west_twouse_language_owl2fs_DataPropetyAtom | c4= parse_west_twouse_language_owl2fs_BuiltInAtom | c5= parse_west_twouse_language_owl2fs_SameIndividualAtom | c6= parse_west_twouse_language_owl2fs_DifferentIndividualsAtom )
            int alt105=7;
            switch ( input.LA(1) ) {
            case 91:
                {
                alt105=1;
                }
                break;
            case 92:
                {
                alt105=2;
                }
                break;
            case 93:
                {
                alt105=3;
                }
                break;
            case 94:
                {
                alt105=4;
                }
                break;
            case 95:
                {
                alt105=5;
                }
                break;
            case 96:
                {
                alt105=6;
                }
                break;
            case 97:
                {
                alt105=7;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 105, 0, input);

                throw nvae;
            }

            switch (alt105) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19844:2: c0= parse_west_twouse_language_owl2fs_ClassAtom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassAtom_in_parse_west_twouse_language_owl2fs_Atom13216);
                    c0=parse_west_twouse_language_owl2fs_ClassAtom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19845:4: c1= parse_west_twouse_language_owl2fs_DataRangeAtom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataRangeAtom_in_parse_west_twouse_language_owl2fs_Atom13226);
                    c1=parse_west_twouse_language_owl2fs_DataRangeAtom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19846:4: c2= parse_west_twouse_language_owl2fs_ObjectPropertyAtom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyAtom_in_parse_west_twouse_language_owl2fs_Atom13236);
                    c2=parse_west_twouse_language_owl2fs_ObjectPropertyAtom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 4 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19847:4: c3= parse_west_twouse_language_owl2fs_DataPropetyAtom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropetyAtom_in_parse_west_twouse_language_owl2fs_Atom13246);
                    c3=parse_west_twouse_language_owl2fs_DataPropetyAtom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c3; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 5 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19848:4: c4= parse_west_twouse_language_owl2fs_BuiltInAtom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_BuiltInAtom_in_parse_west_twouse_language_owl2fs_Atom13256);
                    c4=parse_west_twouse_language_owl2fs_BuiltInAtom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c4; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 6 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19849:4: c5= parse_west_twouse_language_owl2fs_SameIndividualAtom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_SameIndividualAtom_in_parse_west_twouse_language_owl2fs_Atom13266);
                    c5=parse_west_twouse_language_owl2fs_SameIndividualAtom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c5; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 7 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19850:4: c6= parse_west_twouse_language_owl2fs_DifferentIndividualsAtom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DifferentIndividualsAtom_in_parse_west_twouse_language_owl2fs_Atom13276);
                    c6=parse_west_twouse_language_owl2fs_DifferentIndividualsAtom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c6; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 108, parse_west_twouse_language_owl2fs_Atom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_Atom"


    // $ANTLR start "parse_west_twouse_language_owl2fs_IArg"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19854:1: parse_west_twouse_language_owl2fs_IArg returns [west.twouse.language.owl2fs.IArg element = null] : (c0= parse_west_twouse_language_owl2fs_NamedIndividual | c1= parse_west_twouse_language_owl2fs_AnonymousIndividual | c2= parse_west_twouse_language_owl2fs_Variable );
    public final west.twouse.language.owl2fs.IArg parse_west_twouse_language_owl2fs_IArg() throws RecognitionException {
        west.twouse.language.owl2fs.IArg element =  null;
        int parse_west_twouse_language_owl2fs_IArg_StartIndex = input.index();
        west.twouse.language.owl2fs.NamedIndividual c0 = null;

        west.twouse.language.owl2fs.AnonymousIndividual c1 = null;

        west.twouse.language.owl2fs.Variable c2 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 109) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19855:1: (c0= parse_west_twouse_language_owl2fs_NamedIndividual | c1= parse_west_twouse_language_owl2fs_AnonymousIndividual | c2= parse_west_twouse_language_owl2fs_Variable )
            int alt106=3;
            switch ( input.LA(1) ) {
            case FULLIRI:
            case ABBRIRI:
            case 14:
                {
                alt106=1;
                }
                break;
            case NODE:
                {
                alt106=2;
                }
                break;
            case 98:
                {
                alt106=3;
                }
                break;
            default:
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 106, 0, input);

                throw nvae;
            }

            switch (alt106) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19856:2: c0= parse_west_twouse_language_owl2fs_NamedIndividual
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_IArg13297);
                    c0=parse_west_twouse_language_owl2fs_NamedIndividual();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19857:4: c1= parse_west_twouse_language_owl2fs_AnonymousIndividual
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnonymousIndividual_in_parse_west_twouse_language_owl2fs_IArg13307);
                    c1=parse_west_twouse_language_owl2fs_AnonymousIndividual();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 3 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19858:4: c2= parse_west_twouse_language_owl2fs_Variable
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Variable_in_parse_west_twouse_language_owl2fs_IArg13317);
                    c2=parse_west_twouse_language_owl2fs_Variable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c2; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 109, parse_west_twouse_language_owl2fs_IArg_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_IArg"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DArg"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19862:1: parse_west_twouse_language_owl2fs_DArg returns [west.twouse.language.owl2fs.DArg element = null] : (c0= parse_west_twouse_language_owl2fs_Literal | c1= parse_west_twouse_language_owl2fs_Variable );
    public final west.twouse.language.owl2fs.DArg parse_west_twouse_language_owl2fs_DArg() throws RecognitionException {
        west.twouse.language.owl2fs.DArg element =  null;
        int parse_west_twouse_language_owl2fs_DArg_StartIndex = input.index();
        west.twouse.language.owl2fs.Literal c0 = null;

        west.twouse.language.owl2fs.Variable c1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 110) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19863:1: (c0= parse_west_twouse_language_owl2fs_Literal | c1= parse_west_twouse_language_owl2fs_Variable )
            int alt107=2;
            int LA107_0 = input.LA(1);

            if ( (LA107_0==LITERAL) ) {
                alt107=1;
            }
            else if ( (LA107_0==98) ) {
                alt107=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 107, 0, input);

                throw nvae;
            }
            switch (alt107) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19864:2: c0= parse_west_twouse_language_owl2fs_Literal
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_DArg13338);
                    c0=parse_west_twouse_language_owl2fs_Literal();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19865:4: c1= parse_west_twouse_language_owl2fs_Variable
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Variable_in_parse_west_twouse_language_owl2fs_DArg13348);
                    c1=parse_west_twouse_language_owl2fs_Variable();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 110, parse_west_twouse_language_owl2fs_DArg_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DArg"


    // $ANTLR start "parse_west_twouse_language_owl2fs_DGAtom"
    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19869:1: parse_west_twouse_language_owl2fs_DGAtom returns [west.twouse.language.owl2fs.DGAtom element = null] : (c0= parse_west_twouse_language_owl2fs_ClassAtom | c1= parse_west_twouse_language_owl2fs_ObjectPropertyAtom );
    public final west.twouse.language.owl2fs.DGAtom parse_west_twouse_language_owl2fs_DGAtom() throws RecognitionException {
        west.twouse.language.owl2fs.DGAtom element =  null;
        int parse_west_twouse_language_owl2fs_DGAtom_StartIndex = input.index();
        west.twouse.language.owl2fs.ClassAtom c0 = null;

        west.twouse.language.owl2fs.ObjectPropertyAtom c1 = null;


        try {
            if ( state.backtracking>0 && alreadyParsedRule(input, 111) ) { return element; }
            // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19870:1: (c0= parse_west_twouse_language_owl2fs_ClassAtom | c1= parse_west_twouse_language_owl2fs_ObjectPropertyAtom )
            int alt108=2;
            int LA108_0 = input.LA(1);

            if ( (LA108_0==91) ) {
                alt108=1;
            }
            else if ( (LA108_0==93) ) {
                alt108=2;
            }
            else {
                if (state.backtracking>0) {state.failed=true; return element;}
                NoViableAltException nvae =
                    new NoViableAltException("", 108, 0, input);

                throw nvae;
            }
            switch (alt108) {
                case 1 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19871:2: c0= parse_west_twouse_language_owl2fs_ClassAtom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassAtom_in_parse_west_twouse_language_owl2fs_DGAtom13369);
                    c0=parse_west_twouse_language_owl2fs_ClassAtom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c0; /* this is a subclass choice */ 
                    }

                    }
                    break;
                case 2 :
                    // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19872:4: c1= parse_west_twouse_language_owl2fs_ObjectPropertyAtom
                    {
                    pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyAtom_in_parse_west_twouse_language_owl2fs_DGAtom13379);
                    c1=parse_west_twouse_language_owl2fs_ObjectPropertyAtom();

                    state._fsp--;
                    if (state.failed) return element;
                    if ( state.backtracking==0 ) {
                       element = c1; /* this is a subclass choice */ 
                    }

                    }
                    break;

            }
        }
        catch (RecognitionException re) {
            reportError(re);
            recover(input,re);
        }
        finally {
            if ( state.backtracking>0 ) { memoize(input, 111, parse_west_twouse_language_owl2fs_DGAtom_StartIndex); }
        }
        return element;
    }
    // $ANTLR end "parse_west_twouse_language_owl2fs_DGAtom"

    // $ANTLR start synpred5_Owl2fs
    public final void synpred5_Owl2fs_fragment() throws RecognitionException {   
        west.twouse.language.owl2fs.Comment a2_0 = null;


        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5671:3: ( (a2_0= parse_west_twouse_language_owl2fs_Comment ) )
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5671:3: (a2_0= parse_west_twouse_language_owl2fs_Comment )
        {
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5671:3: (a2_0= parse_west_twouse_language_owl2fs_Comment )
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5672:4: a2_0= parse_west_twouse_language_owl2fs_Comment
        {
        pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_synpred5_Owl2fs549);
        a2_0=parse_west_twouse_language_owl2fs_Comment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred5_Owl2fs

    // $ANTLR start synpred6_Owl2fs
    public final void synpred6_Owl2fs_fragment() throws RecognitionException {   
        west.twouse.language.owl2fs.Comment a4_0 = null;


        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5821:5: ( (a4_0= parse_west_twouse_language_owl2fs_Comment ) )
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5821:5: (a4_0= parse_west_twouse_language_owl2fs_Comment )
        {
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5821:5: (a4_0= parse_west_twouse_language_owl2fs_Comment )
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:5822:6: a4_0= parse_west_twouse_language_owl2fs_Comment
        {
        pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_synpred6_Owl2fs631);
        a4_0=parse_west_twouse_language_owl2fs_Comment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred6_Owl2fs

    // $ANTLR start synpred9_Owl2fs
    public final void synpred9_Owl2fs_fragment() throws RecognitionException {   
        west.twouse.language.owl2fs.Comment a6_0 = null;


        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6023:3: ( (a6_0= parse_west_twouse_language_owl2fs_Comment ) )
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6023:3: (a6_0= parse_west_twouse_language_owl2fs_Comment )
        {
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6023:3: (a6_0= parse_west_twouse_language_owl2fs_Comment )
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:6024:4: a6_0= parse_west_twouse_language_owl2fs_Comment
        {
        pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_synpred9_Owl2fs746);
        a6_0=parse_west_twouse_language_owl2fs_Comment();

        state._fsp--;
        if (state.failed) return ;

        }


        }
    }
    // $ANTLR end synpred9_Owl2fs

    // $ANTLR start synpred98_Owl2fs
    public final void synpred98_Owl2fs_fragment() throws RecognitionException {   
        west.twouse.language.owl2fs.ClassDeclaration c1 = null;


        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19717:4: (c1= parse_west_twouse_language_owl2fs_ClassDeclaration )
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19717:4: c1= parse_west_twouse_language_owl2fs_ClassDeclaration
        {
        pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ClassDeclaration_in_synpred98_Owl2fs12297);
        c1=parse_west_twouse_language_owl2fs_ClassDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred98_Owl2fs

    // $ANTLR start synpred99_Owl2fs
    public final void synpred99_Owl2fs_fragment() throws RecognitionException {   
        west.twouse.language.owl2fs.DatatypeDeclaration c2 = null;


        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19718:4: (c2= parse_west_twouse_language_owl2fs_DatatypeDeclaration )
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19718:4: c2= parse_west_twouse_language_owl2fs_DatatypeDeclaration
        {
        pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DatatypeDeclaration_in_synpred99_Owl2fs12307);
        c2=parse_west_twouse_language_owl2fs_DatatypeDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred99_Owl2fs

    // $ANTLR start synpred100_Owl2fs
    public final void synpred100_Owl2fs_fragment() throws RecognitionException {   
        west.twouse.language.owl2fs.ObjectPropertyDeclaration c3 = null;


        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19719:4: (c3= parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration )
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19719:4: c3= parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration
        {
        pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration_in_synpred100_Owl2fs12317);
        c3=parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred100_Owl2fs

    // $ANTLR start synpred101_Owl2fs
    public final void synpred101_Owl2fs_fragment() throws RecognitionException {   
        west.twouse.language.owl2fs.DataPropertyDeclaration c4 = null;


        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19720:4: (c4= parse_west_twouse_language_owl2fs_DataPropertyDeclaration )
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19720:4: c4= parse_west_twouse_language_owl2fs_DataPropertyDeclaration
        {
        pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyDeclaration_in_synpred101_Owl2fs12327);
        c4=parse_west_twouse_language_owl2fs_DataPropertyDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred101_Owl2fs

    // $ANTLR start synpred102_Owl2fs
    public final void synpred102_Owl2fs_fragment() throws RecognitionException {   
        west.twouse.language.owl2fs.AnnotationPropertyDeclaration c5 = null;


        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19721:4: (c5= parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration )
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19721:4: c5= parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration
        {
        pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration_in_synpred102_Owl2fs12337);
        c5=parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred102_Owl2fs

    // $ANTLR start synpred103_Owl2fs
    public final void synpred103_Owl2fs_fragment() throws RecognitionException {   
        west.twouse.language.owl2fs.NamedIndividualDeclaration c6 = null;


        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19722:4: (c6= parse_west_twouse_language_owl2fs_NamedIndividualDeclaration )
        // D:\\svn-client\\intern\\twouse\\source\\plugins\\west.twouse.language.owl2fs.resource.owl2fs\\src-gen\\west\\twouse\\language\\owl2fs\\resource\\owl2fs\\mopp\\Owl2fs.g:19722:4: c6= parse_west_twouse_language_owl2fs_NamedIndividualDeclaration
        {
        pushFollow(FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration_in_synpred103_Owl2fs12347);
        c6=parse_west_twouse_language_owl2fs_NamedIndividualDeclaration();

        state._fsp--;
        if (state.failed) return ;

        }
    }
    // $ANTLR end synpred103_Owl2fs

    // Delegated rules

    public final boolean synpred103_Owl2fs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred103_Owl2fs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred6_Owl2fs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred6_Owl2fs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred102_Owl2fs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred102_Owl2fs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred101_Owl2fs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred101_Owl2fs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred98_Owl2fs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred98_Owl2fs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred5_Owl2fs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred5_Owl2fs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred99_Owl2fs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred99_Owl2fs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred9_Owl2fs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred9_Owl2fs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }
    public final boolean synpred100_Owl2fs() {
        state.backtracking++;
        int start = input.mark();
        try {
            synpred100_Owl2fs_fragment(); // can never throw exception
        } catch (RecognitionException re) {
            System.err.println("impossible: "+re);
        }
        boolean success = !state.failed;
        input.rewind(start);
        state.backtracking--;
        state.failed=false;
        return success;
    }


    protected DFA14 dfa14 = new DFA14(this);
    protected DFA97 dfa97 = new DFA97(this);
    static final String DFA14_eotS =
        "\4\uffff";
    static final String DFA14_eofS =
        "\4\uffff";
    static final String DFA14_minS =
        "\2\6\2\uffff";
    static final String DFA14_maxS =
        "\2\144\2\uffff";
    static final String DFA14_acceptS =
        "\2\uffff\1\2\1\1";
    static final String DFA14_specialS =
        "\4\uffff}>";
    static final String[] DFA14_transitionS = {
            "\1\1\13\uffff\1\2\2\uffff\1\2\6\uffff\4\2\1\3\26\uffff\5\2"+
            "\1\uffff\34\2\12\uffff\2\2",
            "\1\1\13\uffff\1\2\2\uffff\1\2\6\uffff\4\2\1\3\26\uffff\5\2"+
            "\1\uffff\34\2\12\uffff\2\2",
            "",
            ""
    };

    static final short[] DFA14_eot = DFA.unpackEncodedString(DFA14_eotS);
    static final short[] DFA14_eof = DFA.unpackEncodedString(DFA14_eofS);
    static final char[] DFA14_min = DFA.unpackEncodedStringToUnsignedChars(DFA14_minS);
    static final char[] DFA14_max = DFA.unpackEncodedStringToUnsignedChars(DFA14_maxS);
    static final short[] DFA14_accept = DFA.unpackEncodedString(DFA14_acceptS);
    static final short[] DFA14_special = DFA.unpackEncodedString(DFA14_specialS);
    static final short[][] DFA14_transition;

    static {
        int numStates = DFA14_transitionS.length;
        DFA14_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA14_transition[i] = DFA.unpackEncodedString(DFA14_transitionS[i]);
        }
    }

    class DFA14 extends DFA {

        public DFA14(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 14;
            this.eot = DFA14_eot;
            this.eof = DFA14_eof;
            this.min = DFA14_min;
            this.max = DFA14_max;
            this.accept = DFA14_accept;
            this.special = DFA14_special;
            this.transition = DFA14_transition;
        }
        public String getDescription() {
            return "()* loopback of 6313:2: ( ( ( (a13_0= parse_west_twouse_language_owl2fs_Comment ) )* (a14_0= parse_west_twouse_language_owl2fs_Annotation ) ) )*";
        }
    }
    static final String DFA97_eotS =
        "\60\uffff";
    static final String DFA97_eofS =
        "\60\uffff";
    static final String DFA97_minS =
        "\1\6\1\uffff\1\0\55\uffff";
    static final String DFA97_maxS =
        "\1\144\1\uffff\1\0\55\uffff";
    static final String DFA97_acceptS =
        "\1\uffff\1\1\1\uffff\1\10\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1"+
        "\20\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34"+
        "\1\35\1\36\1\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\1\50\1\51"+
        "\1\52\1\53\1\54\1\55\1\56\1\2\1\3\1\4\1\5\1\6\1\7";
    static final String DFA97_specialS =
        "\2\uffff\1\0\55\uffff}>";
    static final String[] DFA97_transitionS = {
            "\1\1\16\uffff\1\2\6\uffff\1\3\1\4\1\5\1\6\27\uffff\1\7\1\10"+
            "\1\11\1\12\1\13\1\uffff\1\14\1\15\1\16\1\17\1\20\1\21\1\22\1"+
            "\23\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33\1\34\1\35\1\36\1"+
            "\37\1\40\1\41\1\42\1\43\1\44\1\45\1\46\1\47\12\uffff\1\50\1"+
            "\51",
            "",
            "\1\uffff",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            "",
            ""
    };

    static final short[] DFA97_eot = DFA.unpackEncodedString(DFA97_eotS);
    static final short[] DFA97_eof = DFA.unpackEncodedString(DFA97_eofS);
    static final char[] DFA97_min = DFA.unpackEncodedStringToUnsignedChars(DFA97_minS);
    static final char[] DFA97_max = DFA.unpackEncodedStringToUnsignedChars(DFA97_maxS);
    static final short[] DFA97_accept = DFA.unpackEncodedString(DFA97_acceptS);
    static final short[] DFA97_special = DFA.unpackEncodedString(DFA97_specialS);
    static final short[][] DFA97_transition;

    static {
        int numStates = DFA97_transitionS.length;
        DFA97_transition = new short[numStates][];
        for (int i=0; i<numStates; i++) {
            DFA97_transition[i] = DFA.unpackEncodedString(DFA97_transitionS[i]);
        }
    }

    class DFA97 extends DFA {

        public DFA97(BaseRecognizer recognizer) {
            this.recognizer = recognizer;
            this.decisionNumber = 97;
            this.eot = DFA97_eot;
            this.eof = DFA97_eof;
            this.min = DFA97_min;
            this.max = DFA97_max;
            this.accept = DFA97_accept;
            this.special = DFA97_special;
            this.transition = DFA97_transition;
        }
        public String getDescription() {
            return "19714:1: parse_west_twouse_language_owl2fs_Axiom returns [west.twouse.language.owl2fs.Axiom element = null] : (c0= parse_west_twouse_language_owl2fs_Comment | c1= parse_west_twouse_language_owl2fs_ClassDeclaration | c2= parse_west_twouse_language_owl2fs_DatatypeDeclaration | c3= parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration | c4= parse_west_twouse_language_owl2fs_DataPropertyDeclaration | c5= parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration | c6= parse_west_twouse_language_owl2fs_NamedIndividualDeclaration | c7= parse_west_twouse_language_owl2fs_AnnotationAssertion | c8= parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf | c9= parse_west_twouse_language_owl2fs_AnnotationPropertyDomain | c10= parse_west_twouse_language_owl2fs_AnnotationPropertyRange | c11= parse_west_twouse_language_owl2fs_SubClassOf | c12= parse_west_twouse_language_owl2fs_EquivalentClasses | c13= parse_west_twouse_language_owl2fs_DisjointClasses | c14= parse_west_twouse_language_owl2fs_DisjointUnion | c15= parse_west_twouse_language_owl2fs_SubObjectPropertyOf | c16= parse_west_twouse_language_owl2fs_EquivalentObjectProperties | c17= parse_west_twouse_language_owl2fs_DisjointObjectProperties | c18= parse_west_twouse_language_owl2fs_ObjectPropertyDomain | c19= parse_west_twouse_language_owl2fs_ObjectPropertyRange | c20= parse_west_twouse_language_owl2fs_InverseObjectProperties | c21= parse_west_twouse_language_owl2fs_FunctionalObjectProperty | c22= parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty | c23= parse_west_twouse_language_owl2fs_ReflexiveObjectProperty | c24= parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty | c25= parse_west_twouse_language_owl2fs_SymmetricObjectProperty | c26= parse_west_twouse_language_owl2fs_AsymmetricObjectProperty | c27= parse_west_twouse_language_owl2fs_TransitiveObjectProperty | c28= parse_west_twouse_language_owl2fs_SubDataPropertyOf | c29= parse_west_twouse_language_owl2fs_EquivalentDataProperties | c30= parse_west_twouse_language_owl2fs_DisjointDataProperties | c31= parse_west_twouse_language_owl2fs_DataPropertyDomain | c32= parse_west_twouse_language_owl2fs_DataPropertyRange | c33= parse_west_twouse_language_owl2fs_FunctionalDataProperty | c34= parse_west_twouse_language_owl2fs_DatatypeDefinition | c35= parse_west_twouse_language_owl2fs_HasKey | c36= parse_west_twouse_language_owl2fs_SameIndividual | c37= parse_west_twouse_language_owl2fs_DifferentIndividuals | c38= parse_west_twouse_language_owl2fs_ClassAssertion | c39= parse_west_twouse_language_owl2fs_ObjectPropertyAssertion | c40= parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion | c41= parse_west_twouse_language_owl2fs_DataPropertyAssertion | c42= parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion | c43= parse_west_twouse_language_owl2fs_DLSafeRule | c44= parse_west_twouse_language_owl2fs_DGRule | c45= parse_west_twouse_language_owl2fs_DGAxiom );";
        }
        public int specialStateTransition(int s, IntStream _input) throws NoViableAltException {
            TokenStream input = (TokenStream)_input;
        	int _s = s;
            switch ( s ) {
                    case 0 : 
                        int LA97_2 = input.LA(1);

                         
                        int index97_2 = input.index();
                        input.rewind();
                        s = -1;
                        if ( (synpred98_Owl2fs()) ) {s = 42;}

                        else if ( (synpred99_Owl2fs()) ) {s = 43;}

                        else if ( (synpred100_Owl2fs()) ) {s = 44;}

                        else if ( (synpred101_Owl2fs()) ) {s = 45;}

                        else if ( (synpred102_Owl2fs()) ) {s = 46;}

                        else if ( (synpred103_Owl2fs()) ) {s = 47;}

                         
                        input.seek(index97_2);
                        if ( s>=0 ) return s;
                        break;
            }
            if (state.backtracking>0) {state.failed=true; return -1;}
            NoViableAltException nvae =
                new NoViableAltException(getDescription(), 97, _s, input);
            error(nvae);
            throw nvae;
        }
    }
 

    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_OntologyDocument_in_start82 = new BitSet(new long[]{0x0000000000000000L});
    public static final BitSet FOLLOW_EOF_in_start89 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_FULLIRI_in_parse_west_twouse_language_owl2fs_FullIRI116 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_ABBRIRI_in_parse_west_twouse_language_owl2fs_AbbreviatedIRI161 = new BitSet(new long[]{0x0000000000004000L});
    public static final BitSet FOLLOW_14_in_parse_west_twouse_language_owl2fs_AbbreviatedIRI191 = new BitSet(new long[]{0x0000000000000020L});
    public static final BitSet FOLLOW_ABBRIRI_in_parse_west_twouse_language_owl2fs_AbbreviatedIRI209 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_PrefixDefinition_in_parse_west_twouse_language_owl2fs_OntologyDocument260 = new BitSet(new long[]{0x0000000000088040L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_OntologyDocument302 = new BitSet(new long[]{0x0000000000088040L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Ontology_in_parse_west_twouse_language_owl2fs_OntologyDocument347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_15_in_parse_west_twouse_language_owl2fs_PrefixDefinition380 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_PrefixDefinition394 = new BitSet(new long[]{0x0000000000020020L});
    public static final BitSet FOLLOW_ABBRIRI_in_parse_west_twouse_language_owl2fs_PrefixDefinition417 = new BitSet(new long[]{0x0000000000020000L});
    public static final BitSet FOLLOW_17_in_parse_west_twouse_language_owl2fs_PrefixDefinition447 = new BitSet(new long[]{0x0000000000000010L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_FullIRI_in_parse_west_twouse_language_owl2fs_PrefixDefinition465 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_PrefixDefinition483 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_19_in_parse_west_twouse_language_owl2fs_Ontology512 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_Ontology526 = new BitSet(new long[]{0xEF800001F03CC070L,0x0000001801FFFFFFL});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology549 = new BitSet(new long[]{0xEF800001F03CC070L,0x0000001801FFFFFFL});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_Ontology590 = new BitSet(new long[]{0xEF800001F03CC070L,0x0000001801FFFFFFL});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology631 = new BitSet(new long[]{0xEF800001F03CC070L,0x0000001801FFFFFFL});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_Ontology684 = new BitSet(new long[]{0xEF800001F03C8040L,0x0000001801FFFFFFL});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology746 = new BitSet(new long[]{0xEF800001F03C8040L,0x0000001801FFFFFFL});
    public static final BitSet FOLLOW_20_in_parse_west_twouse_language_owl2fs_Ontology781 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_Ontology801 = new BitSet(new long[]{0x000000000008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology834 = new BitSet(new long[]{0x000000000008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_Ontology880 = new BitSet(new long[]{0x00000000000C8040L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology921 = new BitSet(new long[]{0x00000000000C8040L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_Ontology961 = new BitSet(new long[]{0xEF800001F03C8040L,0x0000001801FFFFFFL});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology1016 = new BitSet(new long[]{0x0000000100088040L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_Ontology1062 = new BitSet(new long[]{0xEF800001F02C8040L,0x0000001801FFFFFFL});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Axiom_in_parse_west_twouse_language_owl2fs_Ontology1112 = new BitSet(new long[]{0xEF800000F02C8040L,0x0000001801FFFFFFL});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_Ontology1138 = new BitSet(new long[]{0x0000000000088042L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Ontology1161 = new BitSet(new long[]{0x0000000000088042L});
    public static final BitSet FOLLOW_COMMENT_in_parse_west_twouse_language_owl2fs_Comment1206 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_west_twouse_language_owl2fs_ClassDeclaration1242 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ClassDeclaration1256 = new BitSet(new long[]{0x0000000100488040L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ClassDeclaration1279 = new BitSet(new long[]{0x0000000100488040L});
    public static final BitSet FOLLOW_22_in_parse_west_twouse_language_owl2fs_ClassDeclaration1305 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ClassDeclaration1319 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Class_in_parse_west_twouse_language_owl2fs_ClassDeclaration1337 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ClassDeclaration1355 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ClassDeclaration1369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1398 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1412 = new BitSet(new long[]{0x0000000100888040L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1435 = new BitSet(new long[]{0x0000000100888040L});
    public static final BitSet FOLLOW_23_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1461 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1475 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Datatype_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1493 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1511 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DatatypeDeclaration1525 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1554 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1568 = new BitSet(new long[]{0x0000000101088040L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1591 = new BitSet(new long[]{0x0000000101088040L});
    public static final BitSet FOLLOW_24_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1617 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1631 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectProperty_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1649 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1667 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration1681 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1710 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1724 = new BitSet(new long[]{0x0000000102088040L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1747 = new BitSet(new long[]{0x0000000102088040L});
    public static final BitSet FOLLOW_25_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1773 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1787 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataProperty_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1805 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1823 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataPropertyDeclaration1837 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1866 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1880 = new BitSet(new long[]{0x0000000104088040L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1903 = new BitSet(new long[]{0x0000000104088040L});
    public static final BitSet FOLLOW_26_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1929 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1943 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1961 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1979 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration1993 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_21_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2022 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2036 = new BitSet(new long[]{0x0000000108088040L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2059 = new BitSet(new long[]{0x0000000108088040L});
    public static final BitSet FOLLOW_27_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2085 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2099 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2117 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2135 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration2149 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_Class2182 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_Datatype2219 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_ObjectProperty2256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_DataProperty2293 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_AnnotationProperty2330 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_NamedIndividual2367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_28_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2400 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2414 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2437 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2467 = new BitSet(new long[]{0x00000000000040B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationSubject_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2489 = new BitSet(new long[]{0x00000000000041B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationValue_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2511 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_AnnotationAssertion2529 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_29_in_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf2558 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf2572 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf2595 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf2625 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf2647 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf2665 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_30_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain2694 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain2708 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain2731 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain2761 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain2783 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain2801 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_31_in_parse_west_twouse_language_owl2fs_AnnotationPropertyRange2830 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_AnnotationPropertyRange2844 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_AnnotationPropertyRange2867 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_AnnotationPropertyRange2897 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_AnnotationPropertyRange2919 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_AnnotationPropertyRange2937 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_32_in_parse_west_twouse_language_owl2fs_Annotation2966 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_Annotation2980 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_Annotation3003 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationProperty_in_parse_west_twouse_language_owl2fs_Annotation3033 = new BitSet(new long[]{0x00000000000041B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationValue_in_parse_west_twouse_language_owl2fs_Annotation3055 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_Annotation3073 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_NODE_in_parse_west_twouse_language_owl2fs_AnonymousIndividual3106 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LITERAL_in_parse_west_twouse_language_owl2fs_Literal3146 = new BitSet(new long[]{0x0000000200000202L});
    public static final BitSet FOLLOW_33_in_parse_west_twouse_language_owl2fs_Literal3176 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Datatype_in_parse_west_twouse_language_owl2fs_Literal3202 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_LANGTAG_in_parse_west_twouse_language_owl2fs_Literal3244 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_34_in_parse_west_twouse_language_owl2fs_InverseObjectProperty3305 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_InverseObjectProperty3319 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectProperty_in_parse_west_twouse_language_owl2fs_InverseObjectProperty3337 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_InverseObjectProperty3355 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_35_in_parse_west_twouse_language_owl2fs_DataComplementOf3384 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataComplementOf3398 = new BitSet(new long[]{0x0000003800004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataComplementOf3416 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataComplementOf3434 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_36_in_parse_west_twouse_language_owl2fs_DataOneOf3463 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataOneOf3477 = new BitSet(new long[]{0x00000000000041B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_DataOneOf3500 = new BitSet(new long[]{0x00000000000441B0L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataOneOf3526 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_37_in_parse_west_twouse_language_owl2fs_DatatypeRestriction3555 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DatatypeRestriction3569 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Datatype_in_parse_west_twouse_language_owl2fs_DatatypeRestriction3587 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_FacetConstraintPair_in_parse_west_twouse_language_owl2fs_DatatypeRestriction3614 = new BitSet(new long[]{0x0000000000044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DatatypeRestriction3640 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_FacetConstraintPair3673 = new BitSet(new long[]{0x00000000000041B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_FacetConstraintPair3695 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_38_in_parse_west_twouse_language_owl2fs_ObjectIntersectionOf3728 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectIntersectionOf3742 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectIntersectionOf3760 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectIntersectionOf3787 = new BitSet(new long[]{0x007FFFC000044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectIntersectionOf3813 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_39_in_parse_west_twouse_language_owl2fs_ObjectUnionOf3842 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectUnionOf3856 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectUnionOf3874 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectUnionOf3901 = new BitSet(new long[]{0x007FFFC000044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectUnionOf3927 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_40_in_parse_west_twouse_language_owl2fs_ObjectComplementOf3956 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectComplementOf3970 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectComplementOf3988 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectComplementOf4006 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_41_in_parse_west_twouse_language_owl2fs_ObjectOneOf4035 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectOneOf4049 = new BitSet(new long[]{0x00000000000040B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_ObjectOneOf4072 = new BitSet(new long[]{0x00000000000440B0L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectOneOf4098 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_42_in_parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom4127 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom4141 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom4159 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom4181 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom4199 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_43_in_parse_west_twouse_language_owl2fs_ObjectAllValuesFrom4228 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectAllValuesFrom4242 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectAllValuesFrom4260 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectAllValuesFrom4282 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectAllValuesFrom4300 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_44_in_parse_west_twouse_language_owl2fs_ObjectHasValue4329 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectHasValue4343 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectHasValue4361 = new BitSet(new long[]{0x00000000000040B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_ObjectHasValue4383 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectHasValue4401 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_45_in_parse_west_twouse_language_owl2fs_ObjectHasSelf4430 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectHasSelf4444 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectHasSelf4462 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectHasSelf4480 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_46_in_parse_west_twouse_language_owl2fs_ObjectMinCardinality4509 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectMinCardinality4523 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_INTEGER_in_parse_west_twouse_language_owl2fs_ObjectMinCardinality4541 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectMinCardinality4566 = new BitSet(new long[]{0x007FFFC000044030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectMinCardinality4593 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectMinCardinality4619 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_47_in_parse_west_twouse_language_owl2fs_ObjectMaxCardinality4648 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectMaxCardinality4662 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_INTEGER_in_parse_west_twouse_language_owl2fs_ObjectMaxCardinality4680 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectMaxCardinality4705 = new BitSet(new long[]{0x007FFFC000044030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectMaxCardinality4732 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectMaxCardinality4758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_48_in_parse_west_twouse_language_owl2fs_ObjectExactCardinality4787 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectExactCardinality4801 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_INTEGER_in_parse_west_twouse_language_owl2fs_ObjectExactCardinality4819 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectExactCardinality4844 = new BitSet(new long[]{0x007FFFC000044030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectExactCardinality4871 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectExactCardinality4897 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_49_in_parse_west_twouse_language_owl2fs_DataSomeValuesFrom4926 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataSomeValuesFrom4940 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataSomeValuesFrom4958 = new BitSet(new long[]{0x0000003800004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataSomeValuesFrom4980 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataSomeValuesFrom4998 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_50_in_parse_west_twouse_language_owl2fs_DataAllValuesFrom5027 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataAllValuesFrom5041 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataAllValuesFrom5059 = new BitSet(new long[]{0x0000003800004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataAllValuesFrom5081 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataAllValuesFrom5099 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_51_in_parse_west_twouse_language_owl2fs_DataHasValue5128 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataHasValue5142 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataHasValue5160 = new BitSet(new long[]{0x00000000000041B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_DataHasValue5182 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataHasValue5200 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_52_in_parse_west_twouse_language_owl2fs_DataMinCardinality5229 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataMinCardinality5243 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_INTEGER_in_parse_west_twouse_language_owl2fs_DataMinCardinality5261 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataMinCardinality5286 = new BitSet(new long[]{0x0000003800044030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataMinCardinality5313 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataMinCardinality5339 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_53_in_parse_west_twouse_language_owl2fs_DataMaxCardinality5368 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataMaxCardinality5382 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_INTEGER_in_parse_west_twouse_language_owl2fs_DataMaxCardinality5400 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataMaxCardinality5425 = new BitSet(new long[]{0x0000003800044030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataMaxCardinality5452 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataMaxCardinality5478 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_54_in_parse_west_twouse_language_owl2fs_DataExactCardinality5507 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataExactCardinality5521 = new BitSet(new long[]{0x0000000000000400L});
    public static final BitSet FOLLOW_INTEGER_in_parse_west_twouse_language_owl2fs_DataExactCardinality5539 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataExactCardinality5564 = new BitSet(new long[]{0x0000003800044030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataExactCardinality5591 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataExactCardinality5617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_55_in_parse_west_twouse_language_owl2fs_SubClassOf5646 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_SubClassOf5660 = new BitSet(new long[]{0x007FFFC10008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_SubClassOf5683 = new BitSet(new long[]{0x007FFFC10008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_SubClassOf5713 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_SubClassOf5735 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_SubClassOf5753 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_56_in_parse_west_twouse_language_owl2fs_EquivalentClasses5782 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_EquivalentClasses5796 = new BitSet(new long[]{0x007FFFC10008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_EquivalentClasses5819 = new BitSet(new long[]{0x007FFFC10008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_EquivalentClasses5849 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_EquivalentClasses5876 = new BitSet(new long[]{0x007FFFC000044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_EquivalentClasses5902 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_57_in_parse_west_twouse_language_owl2fs_DisjointClasses5931 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DisjointClasses5945 = new BitSet(new long[]{0x007FFFC10008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DisjointClasses5968 = new BitSet(new long[]{0x007FFFC10008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_DisjointClasses5998 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_DisjointClasses6025 = new BitSet(new long[]{0x007FFFC000044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DisjointClasses6051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_58_in_parse_west_twouse_language_owl2fs_DisjointUnion6080 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DisjointUnion6094 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DisjointUnion6117 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Class_in_parse_west_twouse_language_owl2fs_DisjointUnion6147 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_DisjointUnion6169 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_DisjointUnion6196 = new BitSet(new long[]{0x007FFFC000044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DisjointUnion6222 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_59_in_parse_west_twouse_language_owl2fs_SubObjectPropertyOf6251 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_SubObjectPropertyOf6265 = new BitSet(new long[]{0x100000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_SubObjectPropertyOf6288 = new BitSet(new long[]{0x100000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_SubObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_SubObjectPropertyOf6318 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_SubObjectPropertyOf6340 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_SubObjectPropertyOf6358 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_60_in_parse_west_twouse_language_owl2fs_ObjectPropertyChain6387 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyChain6401 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyChain6419 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyChain6446 = new BitSet(new long[]{0x0000000400044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyChain6472 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_61_in_parse_west_twouse_language_owl2fs_EquivalentObjectProperties6501 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_EquivalentObjectProperties6515 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_EquivalentObjectProperties6538 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_EquivalentObjectProperties6568 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_EquivalentObjectProperties6595 = new BitSet(new long[]{0x0000000400044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_EquivalentObjectProperties6621 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_62_in_parse_west_twouse_language_owl2fs_DisjointObjectProperties6650 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DisjointObjectProperties6664 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DisjointObjectProperties6687 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_DisjointObjectProperties6717 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_DisjointObjectProperties6744 = new BitSet(new long[]{0x0000000400044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DisjointObjectProperties6770 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_63_in_parse_west_twouse_language_owl2fs_ObjectPropertyDomain6799 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyDomain6813 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ObjectPropertyDomain6836 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyDomain6866 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyDomain6888 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyDomain6906 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_64_in_parse_west_twouse_language_owl2fs_ObjectPropertyRange6935 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyRange6949 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ObjectPropertyRange6972 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyRange7002 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyRange7024 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyRange7042 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_65_in_parse_west_twouse_language_owl2fs_InverseObjectProperties7071 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_InverseObjectProperties7085 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_InverseObjectProperties7108 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_InverseObjectProperties7138 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_InverseObjectProperties7160 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_InverseObjectProperties7178 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_66_in_parse_west_twouse_language_owl2fs_FunctionalObjectProperty7207 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_FunctionalObjectProperty7221 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_FunctionalObjectProperty7244 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_FunctionalObjectProperty7274 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_FunctionalObjectProperty7292 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_67_in_parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty7321 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty7335 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty7358 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty7388 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty7406 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_68_in_parse_west_twouse_language_owl2fs_ReflexiveObjectProperty7435 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ReflexiveObjectProperty7449 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ReflexiveObjectProperty7472 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ReflexiveObjectProperty7502 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ReflexiveObjectProperty7520 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_69_in_parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty7549 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty7563 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty7586 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty7616 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty7634 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_70_in_parse_west_twouse_language_owl2fs_SymmetricObjectProperty7663 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_SymmetricObjectProperty7677 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_SymmetricObjectProperty7700 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_SymmetricObjectProperty7730 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_SymmetricObjectProperty7748 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_71_in_parse_west_twouse_language_owl2fs_AsymmetricObjectProperty7777 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_AsymmetricObjectProperty7791 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_AsymmetricObjectProperty7814 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_AsymmetricObjectProperty7844 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_AsymmetricObjectProperty7862 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_72_in_parse_west_twouse_language_owl2fs_TransitiveObjectProperty7891 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_TransitiveObjectProperty7905 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_TransitiveObjectProperty7928 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_TransitiveObjectProperty7958 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_TransitiveObjectProperty7976 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_73_in_parse_west_twouse_language_owl2fs_SubDataPropertyOf8005 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_SubDataPropertyOf8019 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_SubDataPropertyOf8042 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_SubDataPropertyOf8072 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_SubDataPropertyOf8094 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_SubDataPropertyOf8112 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_74_in_parse_west_twouse_language_owl2fs_EquivalentDataProperties8141 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_EquivalentDataProperties8155 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_EquivalentDataProperties8178 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_EquivalentDataProperties8208 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_EquivalentDataProperties8235 = new BitSet(new long[]{0x0000000000044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_EquivalentDataProperties8261 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_75_in_parse_west_twouse_language_owl2fs_DisjointDataProperties8290 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DisjointDataProperties8304 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DisjointDataProperties8327 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DisjointDataProperties8357 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DisjointDataProperties8384 = new BitSet(new long[]{0x0000000000044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DisjointDataProperties8410 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_76_in_parse_west_twouse_language_owl2fs_DataPropertyDomain8439 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataPropertyDomain8453 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DataPropertyDomain8476 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataPropertyDomain8506 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_DataPropertyDomain8528 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataPropertyDomain8546 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_77_in_parse_west_twouse_language_owl2fs_DataPropertyRange8575 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataPropertyRange8589 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DataPropertyRange8612 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataPropertyRange8642 = new BitSet(new long[]{0x0000003800004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataPropertyRange8664 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataPropertyRange8682 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_78_in_parse_west_twouse_language_owl2fs_FunctionalDataProperty8711 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_FunctionalDataProperty8725 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_FunctionalDataProperty8748 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_FunctionalDataProperty8778 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_FunctionalDataProperty8796 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_79_in_parse_west_twouse_language_owl2fs_DatatypeDefinition8825 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DatatypeDefinition8839 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DatatypeDefinition8862 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Datatype_in_parse_west_twouse_language_owl2fs_DatatypeDefinition8892 = new BitSet(new long[]{0x0000003800004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DatatypeDefinition8914 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DatatypeDefinition8932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_80_in_parse_west_twouse_language_owl2fs_HasKey8961 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_HasKey8975 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_HasKey8993 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_HasKey9011 = new BitSet(new long[]{0x00000005000CC070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_HasKey9034 = new BitSet(new long[]{0x00000005000CC070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_HasKey9069 = new BitSet(new long[]{0x0000000400044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_HasKey9095 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_HasKey9109 = new BitSet(new long[]{0x0000000000044030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_HasKey9132 = new BitSet(new long[]{0x0000000000044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_HasKey9158 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_HasKey9172 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_81_in_parse_west_twouse_language_owl2fs_SameIndividual9201 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_SameIndividual9215 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_SameIndividual9238 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_SameIndividual9268 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_SameIndividual9295 = new BitSet(new long[]{0x0000000000044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_SameIndividual9321 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_82_in_parse_west_twouse_language_owl2fs_DifferentIndividuals9350 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DifferentIndividuals9364 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DifferentIndividuals9387 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_DifferentIndividuals9417 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_DifferentIndividuals9444 = new BitSet(new long[]{0x0000000000044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DifferentIndividuals9470 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_83_in_parse_west_twouse_language_owl2fs_ClassAssertion9499 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ClassAssertion9513 = new BitSet(new long[]{0x007FFFC10008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ClassAssertion9536 = new BitSet(new long[]{0x007FFFC10008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ClassAssertion9566 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_ClassAssertion9588 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ClassAssertion9606 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_84_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9635 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9649 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9672 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9702 = new BitSet(new long[]{0x00000000000040B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9724 = new BitSet(new long[]{0x00000000000040B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9746 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion9764 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_85_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9793 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9807 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9830 = new BitSet(new long[]{0x000000050008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9860 = new BitSet(new long[]{0x00000000000040B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9882 = new BitSet(new long[]{0x00000000000040B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9904 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion9922 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_86_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion9951 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion9965 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion9988 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion10018 = new BitSet(new long[]{0x00000000000040B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion10040 = new BitSet(new long[]{0x00000000000041B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion10062 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataPropertyAssertion10080 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_87_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10109 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10123 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10146 = new BitSet(new long[]{0x000000010008C070L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyExpression_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10176 = new BitSet(new long[]{0x00000000000040B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Individual_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10198 = new BitSet(new long[]{0x00000000000041B0L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10220 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion10238 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_88_in_parse_west_twouse_language_owl2fs_DLSafeRule10267 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DLSafeRule10281 = new BitSet(new long[]{0x0000000100088040L,0x0000000002000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DLSafeRule10304 = new BitSet(new long[]{0x0000000100088040L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_parse_west_twouse_language_owl2fs_DLSafeRule10330 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DLSafeRule10344 = new BitSet(new long[]{0x0000000000040000L,0x00000003F8000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Atom_in_parse_west_twouse_language_owl2fs_DLSafeRule10367 = new BitSet(new long[]{0x0000000000040000L,0x00000003F8000000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DLSafeRule10393 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_parse_west_twouse_language_owl2fs_DLSafeRule10407 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DLSafeRule10421 = new BitSet(new long[]{0x0000000000040000L,0x00000003F8000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Atom_in_parse_west_twouse_language_owl2fs_DLSafeRule10444 = new BitSet(new long[]{0x0000000000040000L,0x00000003F8000000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DLSafeRule10470 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DLSafeRule10484 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_91_in_parse_west_twouse_language_owl2fs_ClassAtom10513 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ClassAtom10527 = new BitSet(new long[]{0x007FFFC000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassExpression_in_parse_west_twouse_language_owl2fs_ClassAtom10545 = new BitSet(new long[]{0x00000000000040B0L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_ClassAtom10567 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ClassAtom10585 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_92_in_parse_west_twouse_language_owl2fs_DataRangeAtom10614 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataRangeAtom10628 = new BitSet(new long[]{0x0000003800004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataRange_in_parse_west_twouse_language_owl2fs_DataRangeAtom10646 = new BitSet(new long[]{0x00000000000041B0L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DArg_in_parse_west_twouse_language_owl2fs_DataRangeAtom10668 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataRangeAtom10686 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_93_in_parse_west_twouse_language_owl2fs_ObjectPropertyAtom10715 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_ObjectPropertyAtom10729 = new BitSet(new long[]{0x0000000400004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyExpression_in_parse_west_twouse_language_owl2fs_ObjectPropertyAtom10747 = new BitSet(new long[]{0x00000000000040B0L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_ObjectPropertyAtom10769 = new BitSet(new long[]{0x00000000000040B0L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_ObjectPropertyAtom10791 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_ObjectPropertyAtom10809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_94_in_parse_west_twouse_language_owl2fs_DataPropetyAtom10838 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DataPropetyAtom10852 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataProperty_in_parse_west_twouse_language_owl2fs_DataPropetyAtom10870 = new BitSet(new long[]{0x00000000000040B0L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_DataPropetyAtom10892 = new BitSet(new long[]{0x00000000000041B0L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DArg_in_parse_west_twouse_language_owl2fs_DataPropetyAtom10914 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DataPropetyAtom10932 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_95_in_parse_west_twouse_language_owl2fs_BuiltInAtom10961 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_BuiltInAtom10975 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_BuiltInAtom10993 = new BitSet(new long[]{0x00000000000041B0L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DArg_in_parse_west_twouse_language_owl2fs_BuiltInAtom11020 = new BitSet(new long[]{0x00000000000441B0L,0x0000000400000000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_BuiltInAtom11046 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_96_in_parse_west_twouse_language_owl2fs_SameIndividualAtom11075 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_SameIndividualAtom11089 = new BitSet(new long[]{0x00000000000040B0L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_SameIndividualAtom11107 = new BitSet(new long[]{0x00000000000040B0L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_SameIndividualAtom11129 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_SameIndividualAtom11147 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_97_in_parse_west_twouse_language_owl2fs_DifferentIndividualsAtom11176 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DifferentIndividualsAtom11190 = new BitSet(new long[]{0x00000000000040B0L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_DifferentIndividualsAtom11208 = new BitSet(new long[]{0x00000000000040B0L,0x0000000400000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IArg_in_parse_west_twouse_language_owl2fs_DifferentIndividualsAtom11230 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DifferentIndividualsAtom11248 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_98_in_parse_west_twouse_language_owl2fs_Variable11277 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_Variable11291 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_Variable11309 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_Variable11327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_99_in_parse_west_twouse_language_owl2fs_DGRule11356 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DGRule11370 = new BitSet(new long[]{0x0000000100088040L,0x0000000002000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DGRule11393 = new BitSet(new long[]{0x0000000100088040L,0x0000000002000000L});
    public static final BitSet FOLLOW_89_in_parse_west_twouse_language_owl2fs_DGRule11419 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DGRule11433 = new BitSet(new long[]{0x0000000000040000L,0x0000000028000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DGAtom_in_parse_west_twouse_language_owl2fs_DGRule11456 = new BitSet(new long[]{0x0000000000040000L,0x0000000028000000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DGRule11482 = new BitSet(new long[]{0x0000000000000000L,0x0000000004000000L});
    public static final BitSet FOLLOW_90_in_parse_west_twouse_language_owl2fs_DGRule11496 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DGRule11510 = new BitSet(new long[]{0x0000000000040000L,0x0000000028000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DGAtom_in_parse_west_twouse_language_owl2fs_DGRule11533 = new BitSet(new long[]{0x0000000000040000L,0x0000000028000000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DGRule11559 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DGRule11573 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_100_in_parse_west_twouse_language_owl2fs_DGAxiom11602 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DGAxiom11616 = new BitSet(new long[]{0x0000000100088040L,0x0000002000000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Annotation_in_parse_west_twouse_language_owl2fs_DGAxiom11639 = new BitSet(new long[]{0x0000000100088040L,0x0000002000000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DGNodes_in_parse_west_twouse_language_owl2fs_DGAxiom11669 = new BitSet(new long[]{0x0000000000000000L,0x0000008000000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DGEdges_in_parse_west_twouse_language_owl2fs_DGAxiom11691 = new BitSet(new long[]{0x0000000000000000L,0x0000020000000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_MainClasses_in_parse_west_twouse_language_owl2fs_DGAxiom11713 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DGAxiom11731 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_101_in_parse_west_twouse_language_owl2fs_DGNodes11760 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DGNodes11774 = new BitSet(new long[]{0x0000000000000000L,0x0000004000000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NodeAssertion_in_parse_west_twouse_language_owl2fs_DGNodes11797 = new BitSet(new long[]{0x0000000000040000L,0x0000004000000000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DGNodes11823 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_102_in_parse_west_twouse_language_owl2fs_NodeAssertion11852 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_NodeAssertion11866 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Class_in_parse_west_twouse_language_owl2fs_NodeAssertion11884 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_NodeAssertion11906 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_NodeAssertion11924 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_103_in_parse_west_twouse_language_owl2fs_DGEdges11953 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_DGEdges11967 = new BitSet(new long[]{0x0000000000000000L,0x0000010000000000L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_EdgeAssertion_in_parse_west_twouse_language_owl2fs_DGEdges11990 = new BitSet(new long[]{0x0000000000040000L,0x0000010000000000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_DGEdges12016 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_104_in_parse_west_twouse_language_owl2fs_EdgeAssertion12045 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_EdgeAssertion12059 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectProperty_in_parse_west_twouse_language_owl2fs_EdgeAssertion12077 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_EdgeAssertion12099 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IRI_in_parse_west_twouse_language_owl2fs_EdgeAssertion12121 = new BitSet(new long[]{0x0000000000040000L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_EdgeAssertion12139 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_105_in_parse_west_twouse_language_owl2fs_MainClasses12168 = new BitSet(new long[]{0x0000000000010000L});
    public static final BitSet FOLLOW_16_in_parse_west_twouse_language_owl2fs_MainClasses12182 = new BitSet(new long[]{0x0000000000004030L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Class_in_parse_west_twouse_language_owl2fs_MainClasses12205 = new BitSet(new long[]{0x0000000000044030L});
    public static final BitSet FOLLOW_18_in_parse_west_twouse_language_owl2fs_MainClasses12231 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_FullIRI_in_parse_west_twouse_language_owl2fs_IRI12256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AbbreviatedIRI_in_parse_west_twouse_language_owl2fs_IRI12266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_parse_west_twouse_language_owl2fs_Axiom12287 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassDeclaration_in_parse_west_twouse_language_owl2fs_Axiom12297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DatatypeDeclaration_in_parse_west_twouse_language_owl2fs_Axiom12307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration_in_parse_west_twouse_language_owl2fs_Axiom12317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyDeclaration_in_parse_west_twouse_language_owl2fs_Axiom12327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration_in_parse_west_twouse_language_owl2fs_Axiom12337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration_in_parse_west_twouse_language_owl2fs_Axiom12347 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationAssertion_in_parse_west_twouse_language_owl2fs_Axiom12357 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_SubAnnotationPropertyOf_in_parse_west_twouse_language_owl2fs_Axiom12367 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationPropertyDomain_in_parse_west_twouse_language_owl2fs_Axiom12377 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationPropertyRange_in_parse_west_twouse_language_owl2fs_Axiom12387 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_SubClassOf_in_parse_west_twouse_language_owl2fs_Axiom12397 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_EquivalentClasses_in_parse_west_twouse_language_owl2fs_Axiom12407 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DisjointClasses_in_parse_west_twouse_language_owl2fs_Axiom12417 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DisjointUnion_in_parse_west_twouse_language_owl2fs_Axiom12427 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_SubObjectPropertyOf_in_parse_west_twouse_language_owl2fs_Axiom12437 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_EquivalentObjectProperties_in_parse_west_twouse_language_owl2fs_Axiom12447 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DisjointObjectProperties_in_parse_west_twouse_language_owl2fs_Axiom12457 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyDomain_in_parse_west_twouse_language_owl2fs_Axiom12467 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyRange_in_parse_west_twouse_language_owl2fs_Axiom12477 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_InverseObjectProperties_in_parse_west_twouse_language_owl2fs_Axiom12487 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_FunctionalObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12497 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_InverseFunctionalObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12507 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ReflexiveObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12517 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_IrreflexiveObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12527 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_SymmetricObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12537 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AsymmetricObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12547 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_TransitiveObjectProperty_in_parse_west_twouse_language_owl2fs_Axiom12557 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_SubDataPropertyOf_in_parse_west_twouse_language_owl2fs_Axiom12567 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_EquivalentDataProperties_in_parse_west_twouse_language_owl2fs_Axiom12577 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DisjointDataProperties_in_parse_west_twouse_language_owl2fs_Axiom12587 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyDomain_in_parse_west_twouse_language_owl2fs_Axiom12597 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyRange_in_parse_west_twouse_language_owl2fs_Axiom12607 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_FunctionalDataProperty_in_parse_west_twouse_language_owl2fs_Axiom12617 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DatatypeDefinition_in_parse_west_twouse_language_owl2fs_Axiom12627 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_HasKey_in_parse_west_twouse_language_owl2fs_Axiom12637 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_SameIndividual_in_parse_west_twouse_language_owl2fs_Axiom12647 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DifferentIndividuals_in_parse_west_twouse_language_owl2fs_Axiom12657 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassAssertion_in_parse_west_twouse_language_owl2fs_Axiom12667 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyAssertion_in_parse_west_twouse_language_owl2fs_Axiom12677 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NegativeObjectPropertyAssertion_in_parse_west_twouse_language_owl2fs_Axiom12687 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyAssertion_in_parse_west_twouse_language_owl2fs_Axiom12697 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NegativeDataPropertyAssertion_in_parse_west_twouse_language_owl2fs_Axiom12707 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DLSafeRule_in_parse_west_twouse_language_owl2fs_Axiom12717 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DGRule_in_parse_west_twouse_language_owl2fs_Axiom12727 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DGAxiom_in_parse_west_twouse_language_owl2fs_Axiom12737 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_FullIRI_in_parse_west_twouse_language_owl2fs_AnnotationSubject12758 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AbbreviatedIRI_in_parse_west_twouse_language_owl2fs_AnnotationSubject12768 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnonymousIndividual_in_parse_west_twouse_language_owl2fs_AnnotationSubject12778 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_FullIRI_in_parse_west_twouse_language_owl2fs_AnnotationValue12799 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AbbreviatedIRI_in_parse_west_twouse_language_owl2fs_AnnotationValue12809 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnonymousIndividual_in_parse_west_twouse_language_owl2fs_AnnotationValue12819 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_AnnotationValue12829 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Datatype_in_parse_west_twouse_language_owl2fs_DataRange12850 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataComplementOf_in_parse_west_twouse_language_owl2fs_DataRange12860 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataOneOf_in_parse_west_twouse_language_owl2fs_DataRange12870 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DatatypeRestriction_in_parse_west_twouse_language_owl2fs_DataRange12880 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Class_in_parse_west_twouse_language_owl2fs_ClassExpression12901 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectIntersectionOf_in_parse_west_twouse_language_owl2fs_ClassExpression12911 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectUnionOf_in_parse_west_twouse_language_owl2fs_ClassExpression12921 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectComplementOf_in_parse_west_twouse_language_owl2fs_ClassExpression12931 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectOneOf_in_parse_west_twouse_language_owl2fs_ClassExpression12941 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectSomeValuesFrom_in_parse_west_twouse_language_owl2fs_ClassExpression12951 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectAllValuesFrom_in_parse_west_twouse_language_owl2fs_ClassExpression12961 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectHasValue_in_parse_west_twouse_language_owl2fs_ClassExpression12971 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectHasSelf_in_parse_west_twouse_language_owl2fs_ClassExpression12981 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectMinCardinality_in_parse_west_twouse_language_owl2fs_ClassExpression12991 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectMaxCardinality_in_parse_west_twouse_language_owl2fs_ClassExpression13001 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectExactCardinality_in_parse_west_twouse_language_owl2fs_ClassExpression13011 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataSomeValuesFrom_in_parse_west_twouse_language_owl2fs_ClassExpression13021 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataAllValuesFrom_in_parse_west_twouse_language_owl2fs_ClassExpression13031 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataHasValue_in_parse_west_twouse_language_owl2fs_ClassExpression13041 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataMinCardinality_in_parse_west_twouse_language_owl2fs_ClassExpression13051 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataMaxCardinality_in_parse_west_twouse_language_owl2fs_ClassExpression13061 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataExactCardinality_in_parse_west_twouse_language_owl2fs_ClassExpression13071 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_Individual13092 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnonymousIndividual_in_parse_west_twouse_language_owl2fs_Individual13102 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectProperty_in_parse_west_twouse_language_owl2fs_ObjectPropertyExpression13123 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_InverseObjectProperty_in_parse_west_twouse_language_owl2fs_ObjectPropertyExpression13133 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataProperty_in_parse_west_twouse_language_owl2fs_DataPropertyExpression13154 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectProperty_in_parse_west_twouse_language_owl2fs_SubObjectPropertyExpression13175 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_InverseObjectProperty_in_parse_west_twouse_language_owl2fs_SubObjectPropertyExpression13185 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyChain_in_parse_west_twouse_language_owl2fs_SubObjectPropertyExpression13195 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassAtom_in_parse_west_twouse_language_owl2fs_Atom13216 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataRangeAtom_in_parse_west_twouse_language_owl2fs_Atom13226 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyAtom_in_parse_west_twouse_language_owl2fs_Atom13236 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropetyAtom_in_parse_west_twouse_language_owl2fs_Atom13246 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_BuiltInAtom_in_parse_west_twouse_language_owl2fs_Atom13256 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_SameIndividualAtom_in_parse_west_twouse_language_owl2fs_Atom13266 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DifferentIndividualsAtom_in_parse_west_twouse_language_owl2fs_Atom13276 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividual_in_parse_west_twouse_language_owl2fs_IArg13297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnonymousIndividual_in_parse_west_twouse_language_owl2fs_IArg13307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Variable_in_parse_west_twouse_language_owl2fs_IArg13317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Literal_in_parse_west_twouse_language_owl2fs_DArg13338 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Variable_in_parse_west_twouse_language_owl2fs_DArg13348 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassAtom_in_parse_west_twouse_language_owl2fs_DGAtom13369 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyAtom_in_parse_west_twouse_language_owl2fs_DGAtom13379 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_synpred5_Owl2fs549 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_synpred6_Owl2fs631 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_Comment_in_synpred9_Owl2fs746 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ClassDeclaration_in_synpred98_Owl2fs12297 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DatatypeDeclaration_in_synpred99_Owl2fs12307 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_ObjectPropertyDeclaration_in_synpred100_Owl2fs12317 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_DataPropertyDeclaration_in_synpred101_Owl2fs12327 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_AnnotationPropertyDeclaration_in_synpred102_Owl2fs12337 = new BitSet(new long[]{0x0000000000000002L});
    public static final BitSet FOLLOW_parse_west_twouse_language_owl2fs_NamedIndividualDeclaration_in_synpred103_Owl2fs12347 = new BitSet(new long[]{0x0000000000000002L});

}