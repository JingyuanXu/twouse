#summary This page shows the grammar for SPARQLAS.

= Introduction =

This page shows the complete grammar for SPARQLAS.


= Grammar =

*cardinality* := _a nonempty finite sequence of digits between 0 and 9_

*lexical* := _a nonempty finite sequence of alphanumeric characters enclosed in a pair of " (U+22) characters_

*variable* := _a nonempty finite sequence of alphanumeric characters starting with either a ? (U+3F) character or a $ (U+24) character

*nodeID* := _a finite sequence of characters matching the BLANK_NODE_LABEL production of [http://www.w3.org/TR/2008/REC-rdf-sparql-query-20080115/ SPARQL]_

*prefix* := _a finite sequence of characters matching the PNAME_NS production of [http://www.w3.org/TR/2008/REC-rdf-sparql-query-20080115/ SPARQL]_

*fullIRI* := _an IRI as defined in [http://www.ietf.org/rfc/rfc3987.txt RFC3987], enclosed in a pair of < (U+3C) and > (U+3E) characters_

*abbreviatedIRI* := _a finite sequence of characters matching the PNAME_LN production of [http://www.w3.org/TR/2008/REC-rdf-sparql-query-20080115/ SPARQL]_


<br/>

*IRI* := *fullIRI* | *abbreviatedIRI*


<br/>

*!OntologyDocument* := `{` *!PrefixDefinition* `}` *Query*

*!PrefixDefinition* := 'Namespace' '(' `[` *prefix* `]` '=' *fullIRI* ')'


<br/>

*Query* := 'Query' '(' `[` *IRI* `]` `{` *Atom* `}` ')'


<br/>

*!ClassVariable* :=  *variable*

*!ObjectPropertyVariable* := *variable*

*!DataPropertyVariable* := *variable*

*!IndividualVariable* :=  *variable*

*!LiteralVariable* := *variable*


<br/>

*Class* := *IRI*

*Datatype* := *IRI*

*!ObjectProperty* := *IRI*

*!DataProperty* := *IRI*

*!NamedIndividual* := *IRI*

*!ConstrainingFacet* := *IRI*

*!AnonymousIndividual* := *nodeID*

*!NamedLiteral* := *lexical* '^^' *Datatype*


<br/>

*Atom* := *Assertion* | *!ClassAtom* | *!ObjectPropertyAtom* | *!DataPropertyAtom* | *Declaration*


<br/>

*Assertion* := *!ClassAssertion* | *!ObjectPropertyAssertion* | *!DataPropertyAssertion* | *!NegativeObjectPropertyAssertion* | *!NegativeDataPropertyAssertion* | *!SameIndividual* | *!DifferentIndividuals*

<br/>

*!ClassAssertion* := '!ClassAssertion' '(' *Individual* *!ClassExpression* ')'

*!ObjectPropertyAssertion* := '!ObjectPropertyAssertion' '(' *!SourceIndividual* *!ObjectPropertyExpression* *!TargetIndividual* ')'

*!DataPropertyAssertion* := '!DataPropertyAssertion' '(' *!SourceIndividual* *!DataPropertyExpression* *!TargetValue* ')'

*!NegativeObjectPropertyAssertion* := '!NegativeObjectPropertyAssertion' '(' *!SourceIndividual* *!ObjectPropertyExpression* *!TargetIndividual* ')'

*!NegativeDataPropertyAssertion* := '!NegativeDataPropertyAssertion' '(' *!SourceIndividual* *!DataPropertyExpression* *!TargetValue* ')'
	
*!SameIndividual* := '!SameIndividual' '(' *Individual* *Individual* `{` *Individual* `}` ')'

*!DifferentIndividuals* := '!DifferentIndividuals' '(' *Individual* *Individual* `{` *Individual* `}` ')'

*!SourceIndividual* := *Individual*

*!TargetIndividual* := *Individual*

*Individual* := *!NamedIndividual* | *!IndividualVariable* | *!AnonymousIndividual*

*!TargetValue* := *Literal*

*Literal* := *!NamedLiteral* | *!LiteralVariable*


<br/>

*!ClassAtom* := *!SubClassOf* | *!EquivalentClasses* | *!DisjointClasses*

<br/>

*!SubClassOf* := '!SubClassOf' '(' *!SubClassExpression* *!SuperClassExpression* ')'

*!EquivalentClasses* := '!EquivalentClasses' '(' *!ClassExpression* *!ClassExpression* `{` *!ClassExpression* `}` ')'

*!DisjointClasses* := '!DisjointClasses' '(' *!ClassExpression* *!ClassExpression* `{` *!ClassExpression* `}` ')'

*!SubClassExpression* := *!ClassExpression*

*!SuperClassExpression* := *!ClassExpression*


<br/>

*!ClassExpression* := *!ClassVariable* | *Class* | *!ObjectUnionOf* | *!ObjectComplementOf* | *!ObjectOneOf* | *!ObjectIntersectionOf* | *!ObjectAllValuesFrom* | *!ObjectSomeValuesFrom* | *!ObjectHasValue* | *!ObjectMinCardinality* | *!ObjectMaxCardinality * | *!ObjectExactCardinality* | *!DataAllValuesFrom* | *!DataSomeValuesFrom* | *!DataHasValue* | *!DataMinCardinality* | *!DataMaxCardinality* | *!DataExactCardinality*

<br/>

*!ObjectUnionOf* := '!ObjectUnionOf' '(' *!ClassExpression* *!ClassExpression* `{` *!ClassExpresion* `}` ')'

*!ObjectComplementOf* := '!ObjectComplementOf' '(' *!ClassExpression* ')'

*!ObjectOneOf* := '!ObjectOneOf' '(' *Individual* `{` *Individual* `}` ')'

*!ObjectIntersectionOf* := '!ObjectIntersectionOf' '(' *!ClassExpression* *!ClassExpression* `{` *!ClassExpresion* `}`')'

*!ObjectAllValuesFrom* := '!ObjectAllValuesFrom '(' *!ObjectPropertyExpression* *!ClassExpression* ')'

*!ObjectSomeValuesFrom* := '!ObjectSomeValuesFrom' '(' *!ObjectPropertyExpression* *!ClassExpression* ')'

*!ObjectHasValue* := '!ObjectHasValue' '(' *!ObjectPropertyExpression* *Individual* ')'

*!ObjectMinCardinality* := '!ObjectMinCardinality' '(' *cardinality* *!ObjectPropertyExpression* `[` *!ClassExpression* `]` ')'

*!ObjectMaxCardinality* := '!ObjectMaxCardinality' '(' *cardinality* *!ObjectPropertyExpression* `[` *!ClassExpression* `]` ')'

*!ObjectExactCardinality* := '!ObjectExactCardinality' '(' *cardinality* *!ObjectPropertyExpression* `[` *!ClassExpression* `]` ')'

*!DataAllValuesFrom* := '!DataAllValuesFrom '(' *!DataPropertyExpression* *!DataRange* ')'

*!DataSomeValuesFrom* := '!DataSomeValuesFrom' '(' *!DataPropertyExpression* *!DataRange* ')'

*!DataHasValue* := '!DataHasValue' '(' *!DataPropertyExpression* *Literal* ')'

*!DataMinCardinality* := '!DataMinCardinality' '(' *cardinality* *!DataPropertyExpression* `[` *!DataRange* `]` ')'

*!DataMaxCardinality* := '!DataMaxCardinality' '(' *cardinality* *!DataPropertyExpression* `[` *!DataRange* `]` ')'

*!DataExactCardinality* := '!DataExactCardinality' '(' *cardinality* *!DataPropertyExpression* `[` *!DataRange* `]` ')'


<br/>

*!DataRange* := *!DataType* | *!DataUnionOf* | *!DataComplementOf* | *!DataOneOf* | *!DataIntersectionOf* | *!DatatypeRestriction*

<br/>

*!DataUnionOf* := '!DataUnionOf' '(' *!DataRange* *!DataRange* `{` *!DataRange* `}` ')'

*!DataComplementOf* := '!DataComplementOf' '(' *!DataRange* ')'

*!DataOneOf* := '!DataOneOf' '(' *Literal* `{` *Literal* `}` ')'

*!DataIntersectionOf* := '!DataIntersectionOf' '(' *!DataRange* *!DataRange* `{` *!DataRange* `}` ')'

*!DatatypeRestriction* := '!DatatypeRestriction' '(' *!Datatype* *!FacetRestriction* `{` *!FacetRestriction* `}` ')'

*!FacetRestriction* :=  *!ConstrainingFacet* *Literal*


<br/>

*!ObjectPropertyAtom* := *!SubObjectPropertyOf* | *!EquivalentObjectProperties* | *!DisjointObjectProperties* | *!ObjectPropertyDomain* | *!ObjectPropertyRange* | *!InverseObjectPropertyAtom* | *!FunctionalObjectProperty* | *!InverseFunctionalObjectProperty* | *!ReflexiveObjectProperty* | *!IrreflexiveObjectProperty* | *!SymmetricObjectProperty* | *!AsymmetricObjectProperty* | *!TransitiveObjectProperty*

<br/>

*!SubObjectPropertyOf* := '!SubObjectPropertyOf' '(' *!SubObjectPropertyExpression* *!SuperObjectPropertyExpression* ')'

*!EquivalentObjectProperties* := '!EquivalentObjectProperties' '(' *!ObjectPropertyExpression* *!ObjectPropertyExpression* `{` *!ObjectPropertyExpression* `}` ')'

*!DisjointObjectProperties* := '!DisjointObjectProperties' '(' *!ObjectPropertyExpression* *!ObjectPropertyExpression* `{` *!ObjectPropertyExpression* `}` ')'

*!ObjectPropertyDomain* := '!ObjectPropertyDomain' '(' *!ObjectPropertyExpression* *!ClassExpression* ')'

*!ObjectPropertyRange* := '!ObjectPropertyRange' '(' *!ObjectPropertyExpression* *!ClassExpression* ')'

*!InverseObjectPropertyAtom* := '!InverseObjectProperties' '(' *!ObjectPropertyExpression* *!ObjectPropertyExpression* ')'

*!FunctionalObjectProperty* := '!FunctionalObjectProperty' '(' *!ObjectPropertyExpression* ')'

*!InverseFunctionalObjectProperty* := '!InverseFunctionalObjectProperty' '(' *!ObjectPropertyExpression* ')'

*!ReflexiveObjectProperty* := '!ReflexiveObjectProperty' '(' *!ObjectPropertyExpression* ')'

*!IrreflexiveObjectProperty* := '!IrreflexiveObjectProperty' '(' *!ObjectPropertyExpression* ')'

*!SymmetricObjectProperty* := '!SymmetricObjectProperty' '(' *!ObjectPropertyExpression* ')'

*!AsymmetricObjectProperty* := '!AsymmetricObjectProperty' '(' *!ObjectPropertyExpression* ')'

*!TransitiveObjectProperty* := '!TransitiveObjectProperty' '(' *!ObjectPropertyExpression* ')'

*!SubObjectPropertyExpression* := *!ObjectPropertyExpression*

*!SuperObjectPropertyExpression* := *!ObjectPropertyExpression*


<br/>

*!ObjectPropertyExpression* := *!ObjectPropertyVariabe* | *!ObjectProperty* | *!InverseObjectProperty*

<br/>

*!InverseObjectProperty* := '!ObjectInverseOf' '(' *!ObjectPropertyExpression* ')'


<br/>

*!DataPropertyAtom* := *!SubDataPropertyOf* | *!EquivalentDataProperties* | *!DisjointDataProperties* | *!DataPropertyDomain* | *!DataPropertyRange* | *!FunctionalDataProperty*

<br/>

*!SubDataPropertyOf* := '!SubDataPropertyOf' '(' *!SubDataPropertyExpression* *!SuperDataPropertyExpression* ')'

*!EquivalentDataProperties* := '!EquivalentDataProperties' '(' *!DataPropertyExpression* *!DataPropertyExpression* `{` *!DataPropertyExpression* `}` ')'

*!DisjointDataProperties* := '!DisjointDataProperties' '(' *!DataPropertyExpression* *!DataPropertyExpression* `{` *!DataPropertyExpression* `}` ')'

*!DataPropertyDomain* := '!DataPropertyDomain' '(' *!DataPropertyExpression* *!ClassExpression* ')'

*!DataPropertyRange* := '!DataPropertyRange' '(' *!DataPropertyExpression* *!DataRange* ')'

*!FunctionalDataProperty* := '!FunctionalDataProperty' '(' *!DataPropertyExpression* ')'

*!SubDataPropertyExpression* := *!DataPropertyExpression*

*!SuperDataPropertyExpression* := *!DataPropertyExpression*


<br/>

*!DataPropertyExpression* := *!DataPropertyVariable* | *!DataProperty*


<br/>

*Declaration* := *!ObjectPropertyDeclaration* | *!DataPropertyDeclaration* | *!NamedIndividualDeclaration* | *!ClassDeclaration*

<br/>

*!ObjectPropertyDeclaration* := '!ObjectProperty' '(' *!ObjectProperty* | *!ObjectPropertyVariable* ')'

*!DataPropertyDeclaration* := '!DataProperty' '(' *!DataProperty* | *!DataPropertyVariable* ')'

*!NamedIndividualDeclaration* := '!NamedIndividual' '(' *!NamedIndividual* | *!IndividualVariable* ')'

*!ClassDeclaration* := 'Class' '(' *Class* | *!ClassVariable* ')'