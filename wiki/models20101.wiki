#summary Metamodel Constraint Validation in Software Product Lines

= Introduction =

On this page, we provide some links, data and instructions for our submitted
paper *Metamodel Constraint Validation in Software Product Lines*


= OWLizer =

The OWLizer transforms Ecore-based metamodels and their conforming models
into an ontology TBox (Terminological Box) and ABox (Assertional Box).
The metamodels is represented in the TBox, describing classes and relations
between classes. Models are represented in the ABox. The ABox contains
individuals (instances of classes from the TBox) and relations between these
individuals by using the properties which are defined in the TBox.

The transformatoin is based on a mapping from Ecore to OWL.
This (structural) mapping form Ecore-based metamodels and models to OWL
is general. In our approach, we transform the following metamodels and
models to OWL (TBox and ABox):

   *  BPMN model with the corresponding metamodel
   *  Feature model and metamodel
   *  Mapping and mapping metamodel 

Afterwards, we combine these three ontologies to one ontology in order to allow
a joint reasoning and validation.

OWLizer is part of the TwoUse Toolkit:

   * Install the TwoUse Toolkit: http://code.google.com/p/twouse/wiki/InstallationTwoUse
   * Use the OWLizer Plugin to transform the model to OWL

= Feature Mapper =

The Feature Mapper is a tool to combine Software Product Line Engineering and
Model Driven Engineering:
   * http://featuremapper.org/

= Validation =

For the second part of the validation (functional requirements), we used a questionnaire
and asked experts about the usability of our approach.
    * The questionnaire can be found here: http://userpages.uni-koblenz.de/~parreiras/research/ 

= Data =

We provide the follwoing example ontologies for problem, solution and mapping models: